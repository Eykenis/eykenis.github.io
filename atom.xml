<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ekke の Space</title>
  <icon>https://www.gravatar.com/avatar/b74e4d6380810c10e04719b2f9079a61</icon>
  
  <link href="https://eykenis.github.io/atom.xml" rel="self"/>
  
  <link href="https://eykenis.github.io/"/>
  <updated>2022-03-15T07:14:36.666Z</updated>
  <id>https://eykenis.github.io/</id>
  
  <author>
    <name>Ekennis</name>
    <email>ekennis@outlook.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《Earth OL 2022》成就列表</title>
    <link href="https://eykenis.github.io/2922/12/31/%E3%80%8AEarth-OL-2022%E3%80%8B%E6%88%90%E5%B0%B1%E5%88%97%E8%A1%A8/"/>
    <id>https://eykenis.github.io/2922/12/31/%E3%80%8AEarth-OL-2022%E3%80%8B%E6%88%90%E5%B0%B1%E5%88%97%E8%A1%A8/</id>
    <published>2922-12-31T14:37:07.000Z</published>
    <updated>2022-03-15T07:14:36.666Z</updated>
    
    <content type="html"><![CDATA[<ol><li><ul><li><strong>Lecteur en Ruine: Listen closing music of the library</strong></li></ul></li><li><ul><li>√ <strong>DONE: <del>New Reader: Read 1 paper book</del></strong></li></ul></li><li><ul><li><strong>Reader, Again: Read 2 paper book</strong></li></ul></li><li><ul><li><strong>Reading Expert: Read 4 paper book</strong></li></ul></li><li><ul><li><strong>Allegiant Reader: Read 8 paper book</strong></li></ul></li><li><ul><li><strong>Readmaster: Read 16 paper book</strong></li></ul></li><li><ul><li>√ <strong>DONE: <del>Oh you finally Get Started!: Running in the playground in evening</del></strong></li></ul></li><li><ul><li><strong>Runner: Keep running in a week</strong></li></ul></li><li><ul><li><strong>Excellent Runner: Keep running in a month</strong></li></ul></li><li><ul><li><strong>Gotcha!: End your Spring Term with a GPA higher than 3.6</strong></li></ul></li><li><ul><li><strong>Game Developing Pathfinder: Release your first demo using Unity Engine</strong></li></ul></li><li><ul><li><strong>Advanced Computer Graphics <del>(ACG)</del>: Finish the GAMES101, GAMES 102, GAMES 201, GAMES 202 Course and all of their assignments</strong></li></ul></li><li><ul><li><strong>√ DONE: </strong><del><strong>A Perfect Press (APP): Got the maximum grade point in a course</strong></del></li></ul></li><li><ul><li><strong>Hi, English Speaking: Pass ILETS (get 6.5 or higher)</strong></li></ul></li><li><ul><li><strong>Recoder: Keep diary everyday</strong></li></ul></li></ol><p>$13.A\ Perfect\ Press:$</p><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/H1RHCES%7BW%5B%60O5C718D2%609QH.jpg" alt=""></p><p>$14. Oh\ you\ finally\ get\ started!$</p><p>A successful exercise in the evening 3/8/2022.</p><p>$2.New\ Reader:$</p><p>Really the first book I read carefully which is not for schoolwork..</p><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/20220315150607.png" alt=""></p>]]></content>
    
    
    <summary type="html">· Achivements</summary>
    
    
    
    <category term="其他" scheme="https://eykenis.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>KERenderer ——我的软渲开坑啦</title>
    <link href="https://eykenis.github.io/2022/04/04/KERenderer-%E2%80%94%E2%80%94%E6%88%91%E7%9A%84%E8%BD%AF%E6%B8%B2%E5%BC%80%E5%9D%91%E5%95%A6/"/>
    <id>https://eykenis.github.io/2022/04/04/KERenderer-%E2%80%94%E2%80%94%E6%88%91%E7%9A%84%E8%BD%AF%E6%B8%B2%E5%BC%80%E5%9D%91%E5%95%A6/</id>
    <published>2022-04-04T02:25:51.000Z</published>
    <updated>2022-04-04T03:12:05.360Z</updated>
    
    <content type="html"><![CDATA[<p>项目链接：</p><p><a href="https://github.com/Eykenis/KERenderer">Eykenis/KERenderer: My first attempt to build my own software renderer (github.com)</a></p><p>进行了一个月左右的 CG 基础知识学习后，我终于依葫芦画瓢写出了软渲的基本框架。当然，如果没有 <a href="https://github.com/ssloy/tinyrenderer">ssloy/tinyrenderer</a>，我肯定是办不到的。设计方法和具体代码大量参考了 tinyrenderer，而且读取 .obj 和 .tga 文件部分是直接 copy 的。.obj 还好，.tga 的文档对我来说还是有点难啃了（英语苦手），所以只能照搬了 qwq. 文件读取就当是套用了一个外部接口吧。当然，我还希望能找到 .png，.fbx 的接口。</p><p><strong>从这个页面 post 出的接下来几个月内，我会不断更新完善我的 这个 software renderer，尽可能涉及到所有我学过的，在 Unity 中用 Unity Shader 实现过的渲染方法。</strong></p><h2 id="目前支持的功能"><a href="#目前支持的功能" class="headerlink" title="目前支持的功能"></a>目前支持的功能</h2><ul><li><strong>深度测试</strong></li><li><strong>透视投影 (raw)</strong></li><li><strong>背面剔除</strong></li><li><strong>Gouraud Shading</strong></li><li><p><strong>Phong Shading</strong></p></li><li><p><strong>Z-Buffering</strong></p></li></ul><p>pre release 中目前支持渲染几个参数确定的模型，实现了基础的高洛德光照 (Gouraud Shading) 和基础的冯光照 (Phong Shading)，而且都只是<strong>漫反射</strong>光照 。除此以外还支持深度图 Z-Buffering. 最初调试用的 Flat Shading 已经被我移除了。</p><h2 id="下一步"><a href="#下一步" class="headerlink" title="下一步"></a>下一步</h2><ul><li><strong>Make it real-time</strong></li></ul><p>离线渲染以 .tga 输出的调试太麻烦太不直观了，每次修改参数再渲染都要重新载入模型，很浪费时间。希望能利用 Win32 API 和 GDI 实现窗口实时渲染。当然，我不确定我是否能做到 RTR —— 帧数大于 30. 就现在的性能来看基本不可能 qwq，也就是说还有很多细节和算法需要优化。</p><h2 id="更新计划（按大致优先度排序）"><a href="#更新计划（按大致优先度排序）" class="headerlink" title="更新计划（按大致优先度排序）"></a>更新计划（按大致优先度排序）</h2><h3 id="肯定会更新的东西"><a href="#肯定会更新的东西" class="headerlink" title="肯定会更新的东西"></a>肯定会更新的东西</h3><ul><li><p><strong>重写三角形遍历方法</strong></p><p>  现在使用的找到边界矩形然后一个像素一个像素判断实在是太暴力了，应该是性能可以大提升的一个点。去找一找优秀的三角形遍历算法。</p></li><li><p><strong>法线贴图</strong></p><p>  有些模型的 .obj 文件没有存储法线信息，这就导致我现在没法渲染出这些模型，只能把 Flat Shading 加回来或者是用 Z-Buffering. 除开这个需求，法线贴图也是很有必要的。</p></li><li><p><strong>UV纹理渲染</strong></p><p>  有法线贴图怎么能少了 texture.. 要加进来应该也不复杂的。</p></li><li><p><strong>高光以及 Blinn 光照方法</strong></p></li><li><p><strong>阴影</strong></p></li><li><p><strong>齐次边界裁剪</strong></p></li><li><p><strong>轨道式相机</strong></p></li><li><p><strong>透明度测试/混合</strong></p></li><li><p><strong>Cubemap 以及 Skybox</strong></p></li><li><p><strong>Make it cross-platform</strong></p></li><li><p><strong>基于物理渲染 PBR</strong></p></li><li><p><strong>基于 Cubemap 的环境反射</strong></p></li></ul><h3 id="可能会更新的东西"><a href="#可能会更新的东西" class="headerlink" title="可能会更新的东西"></a>可能会更新的东西</h3><ul><li><strong>骨骼动画</strong></li><li><strong>多文件格式支持</strong></li><li><strong>Image-based lighting</strong></li></ul>]]></content>
    
    
    <summary type="html">你已经是一个19岁的孩子了，要学会自己写一个软渲染器了</summary>
    
    
    
    <category term="技术" scheme="https://eykenis.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="CG" scheme="https://eykenis.github.io/tags/CG/"/>
    
  </entry>
  
  <entry>
    <title>基于物理的渲染（PBR）详解</title>
    <link href="https://eykenis.github.io/2022/03/10/physical-based-renderring/"/>
    <id>https://eykenis.github.io/2022/03/10/physical-based-renderring/</id>
    <published>2022-03-10T13:33:58.000Z</published>
    <updated>2022-03-15T06:59:27.444Z</updated>
    
    <content type="html"><![CDATA[<p>（写给自己看的笔记）</p><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/20220310232734.png" alt=""></p><p>((((</p><p>在了解渲染方法之前，你应该首先知晓渲染管线的基本流程。</p><h2 id="标准光照模型"><a href="#标准光照模型" class="headerlink" title="标准光照模型"></a>标准光照模型</h2><p>标准光照模型 - BRDF (Bi-directional Reflectance  Distribution Function，也称双向反射模型) 是一种广泛用于图形渲染的光照模型。它的基本方法是将进入摄像机的光分为四部分：</p><p><strong>自发光</strong>、<strong>高光反射</strong>、<strong>漫反射</strong> 和 <strong>环境光</strong>.</p><ul><li><strong>自发光</strong> (emissive) 即物体本身向摄像机辐射的光（而非折射/反射）。如果你没有使用<strong>全局光照</strong>技术，自发光并不会让物体看起来在发光，而只是亮度提高了。使用全局光照后，自发光的物体可以影响附近物体的光照。</li><li><strong>高光反射</strong> (specular) 即模型向摄像机完全镜面反射的光强。</li><li><strong>漫反射</strong> (diffuse) 即模型接收到光照后，向所有方向反射的光强。该值与视角无关。</li><li><strong>环境光</strong> (ambient) 除以上三点以外的所有其他光照。这些一般都是间接光照。例如前面提到的全局光照。环境光一般是必须的，如果没有环境光，没有受到光源直线照射的地方将完全黑暗，这是不符合实际的。（在素描中也学过，暗面和阴影的交界处是有些许反光的）</li></ul><p>最后一个片元呈现的颜色就是这四种光的线性和。</p><p>除开双向反射模型以外，还有一种双向透射模型（BTDF），一般用于表现透明材质。二者统称为双向散射模型（BSDF）。</p><h4 id="漫反射光照的兰伯特定律"><a href="#漫反射光照的兰伯特定律" class="headerlink" title="漫反射光照的兰伯特定律"></a>漫反射光照的兰伯特定律</h4><p>兰伯特定律的表述很简单：</p><script type="math/tex; mode=display">I=k_d·{\vec n} ·\vec l</script><p>如上公式， $I$ 为光强，$\vec n, \vec l$ 分别为归一化后的表面法向量和光照方向，如下图所示（图来自《Unity Shader 入门精要》）：</p><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/20220315093831.png" alt="image-20220310215956093"></p><p>其中，$k_d$ 是漫反射系数，由<strong>材质颜色乘以光线强度</strong>得到。</p><p>那么公式的意义实际上就是说漫反射的光强与法线和光源方向夹角的余弦值成正比（因为 $\vec n · \vec l=cos(\vec n, \vec l)$）。</p><p>这一定律在各种 Shading methods 中广泛使用。</p><p>下面来看看基于 BRDF 的经验模型是如何实现的。</p><h3 id="Phong-Shading-amp-Gouraud-Shading"><a href="#Phong-Shading-amp-Gouraud-Shading" class="headerlink" title="Phong Shading &amp; Gouraud Shading"></a>Phong Shading &amp; Gouraud Shading</h3><p> 冯（Phong）着色与高洛德（Gouraud）着色都是最经典的经验 Shading. 而且着色算法也是一样的。唯一的不同就是：Phong Shading 是在片元着色器阶段对每一个片元操作的，而 Gouraud Shading 是对顶点操作的。下面根据 BRDF 的四个光照部分来引入这两种 Shading 的公式。</p><h4 id="漫反射"><a href="#漫反射" class="headerlink" title="漫反射"></a>漫反射</h4><p>漫反射部分直接使用 Lambert law 即可：</p><script type="math/tex; mode=display">c_{diffuse}=(c_{light}·m_{diffuse})\max(0,\vec{n}·\vec{l})</script><p>其中，将漫反射颜色 $m_{diffuse}$ 与光照强度 $c_{light}$ 相乘，并保证漫反射取正值，这样可以防止物体在背光处被光源直接照亮。</p><h4 id="高光反射"><a href="#高光反射" class="headerlink" title="高光反射"></a>高光反射</h4><p>还是本文第一张图，Phong 模型通过如下公式计算高光反射：</p><script type="math/tex; mode=display">c_{specular} = (c_{light}·m_{specular})\max(0,\vec{v}·\vec r)^{m_{gloss}}</script><p>其中，$\vec v$ 为视线向量，$\vec r$ 是反射方向向量。</p><p>不过，对于高光的计算，还有另一种经验计算方法—— Blinn 模型，它使用一个新的矢量 $\vec h=normalize(\vec {v + l})$ ，公式为</p><script type="math/tex; mode=display">c_{specular} = (c_{light}·m_{specular})\max(0,\vec{n}·\vec h)^{m_{gloss}}</script><p>其实 Phong 模型和 Blinn 模型高光计算方法都是经验模型，在不同的情况下有不同的表现，不一定 Phong 更加符合实验结果。而 Blinn 的区别主要在于，当视角不动时，其计算的 $\vec h$ 几乎是一个常量，由此节约了性能。而在高速移动的视角下 Phong 模型也许更快。</p><p>总之，使用 Blinn 高光算法的模型一般也称为 Blinn-Phong Shading.</p><h4 id="环境光"><a href="#环境光" class="headerlink" title="环境光"></a>环境光</h4><p>对于简单的 Blinn-Phong 模型，环境光给一个全局常量即可（敷衍就行了）。例如在 Unity Shader 中，你可以直接把 <code>UNITY_LIGHTMODEL_AMBIENT</code> 拿来当环境光。</p><h4 id="自发光"><a href="#自发光" class="headerlink" title="自发光"></a>自发光</h4><p>和环境光一样，自发光也只使用一个固定常数。</p><p>总之，Blinn-Phong 模型只是一个经验模型，很多地方都做得很简单。和真实的物理光照是不同的，但表现出来的效果可以八九不离十。这也就是某一般路过（误）邓恩（<em>3D Math Primer For Graphics And Game Development</em> 的 writer）提出的图形学第一定律所说：</p><blockquote><p>如果它看起来是对的，那么它就是对的。</p></blockquote><p>如果你将以上过程应用到顶点着色器而不是片元着色器，那么你会得到一个更粗糙的着色效果，也就是 Gouraud Shading.</p><hr><h3 id="PBR-基于物理的渲染"><a href="#PBR-基于物理的渲染" class="headerlink" title="PBR - 基于物理的渲染"></a>PBR - 基于物理的渲染</h3><p>另一个基于 BRDF 光照模型的渲染方式就是 PBR 了，其是基于物理公式进行渲染的（其实也不完全是 qwq），因此在很多地方都能呈现出更正确的效果，例如高光，以及正确的折射（菲涅尔效应）。</p><p>啥也别说，首先丢个公式上来：</p><script type="math/tex; mode=display">L_o(p,w_0)=\int_\Omega[k_d\frac{c}{\pi}+\frac{DGF}{4(w_o·n)(w_i·n)}]L_i(p,w_i)(w_i·n){\rm{d}}w_i</script><p>如果第一次看到这个公式，必定是一头雾水 qwq</p><p>$L_o(p,w_o)$: 输出光强的 rgb 属性，其中自变量 $p$, $w_o$ 分别为物体点和视角方向。</p><p>$k_d$: 漫反射系数。</p><p>$D$: </p><hr><p>没写完qwq</p>]]></content>
    
    
    <summary type="html">其实该文还没写完，咕咕咕（</summary>
    
    
    
    <category term="技术" scheme="https://eykenis.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="CG" scheme="https://eykenis.github.io/tags/CG/"/>
    
    <category term="PBR" scheme="https://eykenis.github.io/tags/PBR/"/>
    
  </entry>
  
  <entry>
    <title>在 ECS 服务器（Ubuntu）上使用 Mirai 机器人</title>
    <link href="https://eykenis.github.io/2022/02/24/Use-Mirai-in-ur-ECS-server/"/>
    <id>https://eykenis.github.io/2022/02/24/Use-Mirai-in-ur-ECS-server/</id>
    <published>2022-02-24T11:01:20.000Z</published>
    <updated>2022-03-15T01:12:00.173Z</updated>
    
    <content type="html"><![CDATA[<p>最近玩了一会 Mirai 机器人框架，在本地的话不说多少占了电脑资源，一直开着也不太好。但耐不住各群群友都想深夜看 bot 发病，正好想起来上学期学校发的 200 元华为云代金券没用，故斥巨资 1.83 RMB 买了一台配置最低的 ECS 服务器。正好，从零开始记录一下安装 Mirai 以及使用的过程。我这里使用的镜像是 Ubuntu 20.04.</p><h2 id="1-登录并安装-Mirai-Console-Loader"><a href="#1-登录并安装-Mirai-Console-Loader" class="headerlink" title="1. 登录并安装 Mirai Console Loader"></a>1. 登录并安装 Mirai Console Loader</h2><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/20220224190641.png" alt=""></p><p>利用华为云自带的 CloudShell 登录到实例。（不过比较推荐 PuTTY）</p><p>为了尽可能地让我们的工作更简单，使用 <a href="https://github.com/iTXTech/">iTXTech</a> 的 iTXTech MCL。其在 github 上自带 <a href="https://github.com/iTXTech/mcl-installer">Installer</a>.</p><p>这里我选择 <a href="https://github.com/iTXTech/mcl-installer/releases/download/v1.0.3/mcl-installer-1.0.3-linux-amd64">mcl-installer-1.0.3-linux-amd64</a>，执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/iTXTech/mcl-installer/releases/download/v1.0.3/mcl-installer-1.0.3-linux-amd64</span><br></pre></td></tr></table></figure><p><code>wget</code> 是 linux 系统常用的从 url 下载文件的命令。</p><p>如果下载完成后你想直接启动这个可执行文件是不行的，会提示没有权限。</p><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/20220224195931.png" alt=""></p><p>这个时候，执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x mcl-installer-1.0.3-linux-amd64</span><br></pre></td></tr></table></figure><p><code>chmod</code> 是一个修改文件权限的命令。其中 <code>u</code> 表示目标是用户，<code>x</code> 表示执行权限，<code>+</code> 表示给与。</p><p>缺省的安装过程是可接受的（至少对我这个啥也没有的新机是这样），一路回车等待安装完成，Y 和 N 都不用按了（</p><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/20220224200506.png" alt=""></p><p>根据提示，这个时候只需要 <code>./mcl</code> 就可以启动 Mirai Console 了.</p><p>启动后，继续等待安装。</p><p>完成之后重启，再次 <code>./mcl</code>，成功启动。</p><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/20220224200925.png" alt=""></p><h2 id="2-文件迁移到远程机上"><a href="#2-文件迁移到远程机上" class="headerlink" title="2. 文件迁移到远程机上"></a>2. 文件迁移到远程机上</h2><p>现在我们把原来在 本地 Windows 上的插件迁移过去。</p><p>为了确保记录都成功迁移，记得将 plugins、data、conf 三个文件夹都粘贴过来。</p><p>为了能有粘贴功能，我们在本地 Windows 机安装 <a href="[Download PuTTY: latest release (0.76">pscp</a> (greenend.org.uk)](<a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html))，下载完成后将其拷贝到">https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html))，下载完成后将其拷贝到</a> C:\Windows\System32 下。</p><p>打开本地的 PowerShell，输入 <code>pscp</code>，确认 pscp 已经正确安装。</p><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/20220224203057.png" alt=""></p><p>好，现在开始拷贝。输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pscp -r dir name@IP:target</span><br></pre></td></tr></table></figure><p>其中，dir 改为要拷贝的目录，name 为远程主机名，IP 为 IP地址，target 为目标目录。</p><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/20220224203810.png" alt=""></p><p>成功粘贴过来之后，再将这些目录下的东西都拷贝到 mcl 相应的目录中去。（或者你直接 pscp 到目标目录也行）</p><p>等待拷贝全部完成后，再次 <code>./mcl</code> ，发现所有插件都装上了。现在尝试登录机器人。</p><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/20220224204944.png" alt=""></p><p>发现需要验证滑动验证码。没有办法，查看 <a href="https://github.com/project-mirai/mirai-login-solver-selenium">project-mirai/mirai-login-solver-selenium: SliderCaptcha solver (github.com)</a></p><p>读我文档，按照文档所说一步一步来吧 QWQ。总之，登陆成功后， Mirai 又可以正常使用了。</p><hr><p>呃，这下水文章了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近玩了一会 Mirai 机器人框架，在本地的话不说多少占了电脑资源，一直开着也不太好。但耐不住各群群友都想深夜看 bot 发病，正好想起来上学期学校发的 200 元华为云代金券没用，故斥巨资 1.83 RMB 买了一台配置最低的 ECS 服务器。正好，从零开始记录一下安装</summary>
      
    
    
    
    <category term="技术" scheme="https://eykenis.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Mirai" scheme="https://eykenis.github.io/tags/Mirai/"/>
    
    <category term="Linux" scheme="https://eykenis.github.io/tags/Linux/"/>
    
    <category term="聊天bot" scheme="https://eykenis.github.io/tags/%E8%81%8A%E5%A4%A9bot/"/>
    
  </entry>
  
  <entry>
    <title>万字长评《美少女万华镜 - 罪与罚的少女》</title>
    <link href="https://eykenis.github.io/2022/02/23/Bishoujo-Mangekyo-Tsumi-to-Batsu-no-Shoujo/"/>
    <id>https://eykenis.github.io/2022/02/23/Bishoujo-Mangekyo-Tsumi-to-Batsu-no-Shoujo/</id>
    <published>2022-02-23T14:22:27.000Z</published>
    <updated>2022-02-23T14:39:20.848Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> <em>我从来不哭泣，也从来不发笑。</em></p><p> ​                                            <em>——夏尔 · 波德莱尔《恶之花》</em></p></blockquote><h2 id="Part-0-前言"><a href="#Part-0-前言" class="headerlink" title="Part. 0 前言"></a>Part. 0 前言</h2><p>第一次接触《镜4》是在高二的时候，我很清楚地记得那是国庆假期，之后就是校运会。当时好像只是将其当做拔作玩，很多部分的剧情都跳过了，然而只是随便看了两眼后面的剧情<del>，却也对我当时幼小的心灵造成了不小的创伤</del>。</p><p>都说八宝备仁老师的画严重影响到广大粉丝的身体健康，那么玩过《镜4》之后，我只想说，八宝备老师的画是必要条件，然而还有一个必要条件就是剧本的正常。</p><p>记得当时（17、18年）这款游戏因为各种热度 buff 而被推上风评的神坛：</p><ul><li>女装大佬</li><li>百合</li><li>万华镜前 3.5 部的好评</li><li>一代更比一代强的作画</li><li>等等……</li></ul><p>然而最热的一段时间过去，越来越多的玩家通关之后，给出的评价却开始两极分化，有说剧情极好的，有说玩得口区的。</p><p>至于我，也没有多成熟的见解，只是觉得其中的人性、伦理、道德、阴谋，足以让我久久回味，久久深思。致郁是一定有的，只不过因为是二刷了（虽然一刷没有仔细看，但是也知道剧情梗概），再加上相比于当时，现在已经成年或许心理承受能力会更强一些，也就没有那么强的感受吧（高二快速推完之后人有点魔怔了，确确实实在大半个月的时间里心态都处于不正常的状态）。</p><p>4 好玩吗？我的评价是好玩。剧情令人回味，发人深省，展现了以前的作品所没有展现的——单纯的爱意背后的“恶”。个人认为其缺憾可能就是剧情虽然完成度较高，但总觉得表达的思想有点怪异，或者故事在主题还没有完全升华时就戛然而止了。《罪与罚》，“罪”已覆水难收，”罚”却难觅踪影。所以尽管叙事已经足够，但总觉得作者有什么还没说，玩家可能还会期待什么，但他就是没说。</p><p><strong>好了！如果你不想被剧透，那么读到这里，大概可以离开了！qwq</strong></p><hr><h2 id="Part-1-剧情概述（流水账）"><a href="#Part-1-剧情概述（流水账）" class="headerlink" title="Part. 1 剧情概述（流水账）"></a>Part. 1 剧情概述（流水账）</h2><p>只是描述一下大概的剧情，尽量梳理清楚发生了啥，跟评没啥关系。</p><p>（会不会有很多擦边的地方？）</p><p><em>Tips：以下为  true end 线</em></p><p>伴随着略显阴郁的主菜单 bgm，进入游戏……</p><p>《美少女万华镜4》讲述的故事是弟弟夕摩和姐姐夕莉的不伦恋情。故事一开始，男主觋夕摩和他的舅舅在过世的母亲墓前祭拜。舅舅榊由纪夫在被家族里的政府官员（夕摩的父亲）追查逃税后逃到新加坡，后来在那里做出了一番生意。</p><p>然而祭拜时，由纪夫突然出现了库斯莫呼吸（糖尿病导致的酸性中毒表现出的症状），接着因为心力衰竭过世了。男主在舅舅不省人事时，却凑到他耳边轻轻说道：<strong>叔父……你必须得受到惩罚才行呢……</strong></p><p>这绝对不是什么废萌简单纯爱的故事。</p><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/bg_%E7%97%85%E5%AE%A4.png" alt=""></p><p>画面一转，男主因为疾病缠身而住院，最近因为康复较好，姐姐夕莉决定将弟弟夕摩接出院。</p><blockquote><p>此处背景：夕摩的母亲自焚身亡，原来的家也被烧毁，所以他们已经搬到了新家</p></blockquote><p>男主夕摩一直对自己的姐姐有着特别的爱（？），而在回到家后，夕摩也没有马上去上学，而是在家继续观察了一段时间来适应医院外的生活。期间姐姐夕莉是一直在上学的，且一直都和舅舅由纪夫有书信往来。在夕莉眼里，由纪夫是这个扭曲家庭中为数不多可以信任的人了，剩下的便是由纪夫那边的管家高桥先生和亲弟弟夕摩了。</p><p>在家休养期间，男主一直做着<strong>日常功课</strong>，并在外出的时候与两名女生有一面之缘。一次是在游乐园遇到并安慰了一个娇小的女生，另一次是在街上遇到了一个行为怪异的女生。每天夕莉都会回家做饭，而父亲则冷眼相对，在夕摩面前从不发笑，只是冷嘲热讽。父亲眼里，只有夕莉是有未来的，而夕摩就是有个废人。但夕莉一直都站在夕摩的一边，安慰夕摩，帮他说话，照顾他。</p><blockquote><p>若美丽的夕莉是光的话，我只不过是其影子罢了。光越是耀眼，影越是浓重。所以我，一定是全黑的。</p><p><em>有朝一日你见我时肯定会笑着说、</em></p><p><em>这张脸也过于苍白了吧、</em></p><p><em>如同被秋风吹打无花果叶一般、</em></p><p><em>如同被遗弃的狗。</em></p><p><em>而事实诚如你所说、</em></p><p><em>或许比丧家狗更惨</em></p><p><em>我自己不时思考着</em></p><p><em>也许我本身就是个悲剧</em></p><p>​                                <em>——中原中也《阴凉的秋》</em></p></blockquote><p>然而，住着住着，抑制不住对姐姐情感的夕摩大肆在夕莉的房间里 OO，翻找她的原味胖次，然后拿来……</p><p>最初几天还好，男主弄完就把该洗的都洗，该整理好的都整理好了。可是男主越玩越花（），终于有一天姐姐恰好早退回家，将夕摩抓了个正着，然后夕莉就开始用脚欺负弟弟（各种弟弟）。</p><p>好了，到这里姐弟的行为已经非常反常了。不管是哪对姐弟都不会这样吧 qwq！</p><p>所以，夕摩说：“我与姐姐的关系已经永远改变了。”</p><p>一层一层，撕破面具，然后看见血肉。</p><p>接着，女主解释道，早退是因为夕莉去帮夕摩买新学校的校服了，是要夕摩来上学了。然而……夕莉拿出来的却是女装。原来姐姐是要他和自己一起去读女校。夕摩吃惊之余还是忐忑地接受了。毕竟他体格纤细，声调也偏高，即使装成女孩子，也没有人会认出来，甚至会将他和姐姐弄混。</p><p>“夕莉和我是一体的，我照向镜子，镜子里就是她。”</p><p>虽然夕摩很不情愿，但也只能听姐姐的了。（其实姐姐是想能多陪在她身边，不想让夕摩离自己太远）</p><p>然后，女装没有买完，姐姐带着弟弟去女装店顺便把其他部位以及放假穿的便服也一块买了（（期间姐姐把弟弟堵在更衣室，呃。</p><p>来到学校，巧合的是之前曾偶遇的两个女生竟然都是同班同学！一个是开朗活泼的妹系小女孩铃森一花和神秘系痴女御殿场镜子。</p><p>四人重组了学校的文艺部，成为了好闺蜜（？）。（镜子这个人书柜上全是百合H文。而且是夕莉和夕摩的死忠粉 qaq）在这之前，游戏就多次出现诗句，大多都是带着悲伤情感的（不如说全部），文艺部组建之后诗句更多了，而且几乎都是各种暗示/明示，表现人物心理。</p><p>在学校的生活，刚开始是很美好的，夕摩也感觉自己正在重新融入现实，而不再是之前那个停止了一切经济社会活动的废人。然而，<strong>所谓现实，就是像沙堡一样脆弱无常而又非常容易被毁坏的东西</strong>。</p><p>早在刚入学没多久，学校保健室的藤堂咲老师就让夕摩感觉很不舒服。虽然老师人很美，可夕摩却在她身上感受到强烈的恐怖感。</p><p>一次放学后偶然的机会，夕摩在教学楼转悠的时候看到了惊人的一幕——她竟然用假东西和镜子干不可描述的事。目睹全程的夕摩受到极大的震撼。后来，在夕摩感冒的时候，藤堂老师借机以照顾夕摩为借口，下药后发现夕摩是男孩子，于是便夺走了夕摩的第一次……（好恐怖，玩到这里的时候确实有点令人作呕）夕摩遭遇心理创伤，再次休学，差点寻死，好在被夕莉救回。虽然夕摩无法面对这个现实，怎么也不肯将事件完整地告诉夕莉，但夕莉也知道是藤堂老师做的了。于是她利用自己和夕摩长的很像这一点揭发了藤堂老师的怪癖，使其被调查并离职。</p><p>这期间，夕莉一直在安慰夕摩，也第一次向夕摩敞开了自己的心扉<del>（和身体）</del>。二人没羞没臊的生活初步开始了吧（</p><p>夕莉知道夕摩遭受了不幸，也开始自责自己将其送到女校。“我本以为这会是最好的选择，可我是多么的自私。”夕莉提出让夕摩回到普通学校。夕摩也觉得这会是最正常的道路。可是他再也不想离开姐姐了，他讨厌父亲，讨厌老师，讨厌街道上说三道四的行人。除了夕莉他谁也不想见到，他不愿意再离开夕莉，他鼓起勇气回去读女校了。</p><p>回校后，夕摩过得比想象的要好。同学们一如既往的和姐弟玩得很好，文艺部的四位——夕摩、夕莉、镜子和一花商议在文化祭开办了主题咖啡馆，期间夕莉 cosplay 女仆（其实是 neta 初音未来），和夕摩没羞没臊的生活又开始了。二人动静过大，玩的过于大胆，以至于一花也开始起了疑心。</p><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/bg_%E5%AD%A6%E5%9C%92_%E9%83%A8%E5%AE%A4%E7%A5%AD_%E6%98%BC.png" alt=""></p><p>（其实，一花是个很容易被欺负的孩子。在一次受到原来社团的同学欺负时，夕摩勇敢地站出来保护并鼓励了她，也是这时，夕摩的大力气和相对没有那么纤细丝滑的手让一花意识到夕摩好像是个男生，而且和游乐园遇到的那个男生的手感觉很相似）</p><blockquote><p>另外此处还有个伏笔，被驱逐出校的藤堂老师突然联系镜子，并说有要紧事和她商量。这个要紧事让镜子十分为难。</p></blockquote><p>文化祭结束后，二人恩爱地回了家，却发现父亲醉倒在家中。一直都是职场精英的父亲最近接连遭到左迁，在家大发酒疯。由于夕莉去买酱油了，夕摩先到了家。</p><p>醉酒的父亲见女装回家的夕摩，把他当成了夕莉。接着开始说诸如夕莉你才是家里唯一的希望，夕摩那个混蛋就该离开这里之类的话。夕摩感到一阵恶心，再也忍受不了，跑出了家，然后撞见了夕莉。二人对父亲的不认可达成一致，夕摩却突然开口说要除掉他。夕莉吃惊于事情还不应该发展到这个地步，便吓得哭了出来。在一阵心理斗争之后，夕莉又说，不能让弟弟来，一定要让姐姐来保护夕摩，一切都要姐姐来。</p><p>二人回家后，父亲仍然处在神志不清的状态。于是夕莉喂了安眠药让父亲消停下来。此后，夕莉半夜悄悄去了弟弟房间。</p><p>第二天，父亲反常地起来的比较早，发现了夕莉和夕摩在一起，便开始对夕摩暴力相向。不过因为夕莉护着，父亲最后还是骂骂咧咧地出门了。之后，夕莉接到了不明座机来电，也没有和夕摩解释便一个人出去了。接着，夕摩也接到了镜子的电话，夕摩去车站接镜子，镜子却说要去夕摩家中。到家之后，镜子乘机给夕摩注射了麻药（这特么是怎么乘机的）并做了一通胡乱不清的解释后（总之就是藤堂老师早就告诉她夕摩是男生了）说要帮夕摩。夕摩因为麻药几乎无力反抗，但还是强忍着模糊的意识晓之以情动之以理，说服了镜子。夕摩也知道了叫夕莉出去的是藤堂老师。于是夕摩和镜子马上出门去救夕莉了。</p><p>原来，藤堂老师早在保健室遇到夕摩的时候就录像留证了，现在要用把这个发到网上来威胁夕莉。可她和姐弟相比还是太正常了。夕莉根本不在乎除了夕摩以外世界上任何一个人的态度。她完全不害怕，并且掏出一把水果刀割腕明志，扬言再见到藤堂一次就出刀。藤堂老师被吓跑了，夕莉第二天在学校也狠狠地扇了镜子一耳光。</p><p>然而第二天，一花又把夕摩单独叫出来，冷不丁地向夕摩表白。夕摩拒绝之后，一花尴尬地说女孩和女孩果然还是不行的呀……夕摩当然也知道，一花肯定是看穿自己了。</p><p>恰逢圣诞节，夕莉和夕摩在外面逛街，夕摩来到爱情宾馆向夕莉疯狂灌输爱意。二人没羞没臊了一整天。</p><blockquote><p> 回家后，夕莉看着依然提不起精神的父亲开始回忆往事：</p><p>母亲夕香里总是阻止夕莉和夕摩的亲密举动，也总是站在夕摩那边。这和只对夕莉寄予希望的父亲刚好相反。夕莉开始对母亲恶语相向，以至于母亲也意识到自己扭曲的心理。当天晚上，家里便起了大火。睡得没那么死的夕摩叫醒夕莉逃出来了，而母亲却永远葬身火海。因为工作没有回家的父亲开始责骂夕摩，并怒骂夕摩为什么没有救母亲出来，为什么没有替夕香里去死。夕摩自此精神失常，于是便住进了医院。</p></blockquote><p>因为夕摩还要去图书馆查点资料的原因（伏笔），夕莉又先于夕摩回家了。这次，父亲仍然大醉，并将夕莉错看成了夕香里，意欲图谋不轨。无可奈何之际，夕莉从厨房散落的刀架上抽出一把，出手了。夕摩回家，大惊失色，便开始安慰夕莉。二人不知如何是好，于是留在家里度过了浑浑噩噩且没羞没臊的三天（这也太……）。</p><p><strong>自此，夕摩的计划已经基本成功了，最后一步就是要出逃了。</strong>（没错，剧情到这里突然告诉你，各种各样 B 事的发生，大多都是夕摩设的局）</p><p>原来，夕摩没多大的时候就意识到，夕莉和自己也有同样的情感。而后来夕莉大骂母亲那天，其实是夕莉走后，夕香里打算上吊，但失败了。夕摩的出现给了夕香里一点希望。可是夕摩没有救夕香里，他落井下石，掐死了母亲，然后一把火烧掉了原来的家。夕摩带出来的物品，只有一个鸟笼和一顶假发（是姐姐在演艺圈的短暂时间里所用到的）料到的父亲的咒骂，故意装傻，被家人送进医院。由于本来就没有精神问题（我觉得有），夕摩在精神病院中成为了模范病人，并开始给舅舅写信，称父亲虐待自己。这时，夕摩也知道了，父亲觋礼次郎不是亲生父亲，而夕香里和舅舅由纪夫才是自己和夕莉的亲生父母（好家伙，xp 代代相传是吧）。舅舅逃到新加坡后生意的成功，夕摩看在眼里。且舅舅也十分疼爱夕摩和夕莉。于是夕摩提出要舅舅收养自己，由纪夫同意了（于是夕摩便获得了由纪夫的财产继承权）。后来，夕摩因为是模范病人获得了一次外出的机会。舅舅也悄悄飞回来，二人前往祭拜母亲。由于舅舅患有糖尿病，需要打胰岛素，夕摩悄悄更换了注射器，于是舅舅在注射后没多久就出现了钾血症，而症状又与库斯莫呼吸相似，于是谁也没有怀疑，谁都以为舅舅是因为糖尿病的急性症状过世的。夕摩秘密向管家高桥先生保证，舅舅过世后自己会支付比他更高的薪酬，于是管家也开始配合夕摩的计划。</p><p>夕摩模仿由纪夫的笔迹，写信给自己的姐姐，并跟姐姐说可以接夕摩出院了。此后，夕莉一直对舅舅的过世不知情，也一直在和“舅舅”书信来往。于是，看上去强势的夕莉其实是在夕摩的掌控中……（哈人）回家后，夕摩开始慢慢表现对夕莉的爱意，接受女装，强忍藤堂老师的侮辱，又慢慢给父亲的食物里下药，于是才有后面父亲逐渐精神失常，每日暴走的情况出现。为了更加保险，夕摩没有让自己出手，而是利用堆父亲下药，假借姐姐的正当防卫杀死了父亲。计划的最后一步——出逃。高桥秘书为他们安排了签证护照，两人三天之后便逃亡到了新加坡，二人世界正式开启。至此，夕摩的<strong>日常功课</strong>终于完结了（所以你小子从头到尾就没有在学习是吧）</p><p>夕莉怀上了夕摩的孩子，又生出一对异性双胞胎……什么命运的捉弄。</p><p>（true end 终）</p><p>（流水账结束 qwq）</p><h2 id="Part-2-人物分析"><a href="#Part-2-人物分析" class="headerlink" title="Part. 2 人物分析"></a>Part. 2 人物分析</h2><h3 id="觋夕香里"><a href="#觋夕香里" class="headerlink" title="觋夕香里"></a>觋夕香里</h3><p>整个家庭的不幸，源头都可以归结到夕香里身上。</p><p>夕香里年轻时曾当过演员，怀孕后急流勇退，回归家庭。在大众的眼中，她是持家的好妻子。然而真相是，榊夕香里和弟弟榊由纪夫有着特殊感情，怀上了由纪夫的孩子后，为了逃避他人的指责，榊家招来了一个新女婿作挡箭牌，而这个挡箭牌就是夕摩的“父亲”觋礼次郎。礼次郎入赘没几年便发现了由纪夫和夕香里的关系，于是开始打压由纪夫，利用财务省的职务之便以逃税名义追捕由纪夫。由纪夫只得出逃到新加坡。（可悲的是，礼次郎是真的对夕香里有感情的）</p><p>没有了由纪夫的夕香里寂寞难耐，她对眼前的礼次郎没有感情，每天看着自己的孩子思念着由纪夫。而夕香里和由纪夫的禁断之恋也充斥着扭曲的心理。随着孩子们的长大，夕摩越来越像由纪夫，而夕莉越来越像夕香里。由于控制不住对由纪夫的思念，夕香里较为偏爱夕摩，总之让他黏着自己，甚至对这尚在成长的亲儿子直接出手…（。。。）并由此对年幼的夕摩造成了不小的伤害。对于夕莉，母亲相对没有那么关心，并也总是在尝试说服夕莉走自己走过的演艺路。可是夕莉并不想当演员。虽然美若天仙的夕莉以艺名小尤莉娅（夕莉的日语发音为“尤利”）出道后收获大批粉丝，但她很快就隐退继续上学了。两个孩子进入青春期后，夕香里总是阻止着夕莉和夕摩的过近接触。其实光看这举动也挺正常的，但不正常就在于她自己对夕摩下狠手……</p><p>后来又一天，夕莉终于再也忍受不住，开始大骂夕香里。夕香里的内心是极为混乱的。她知道自己身为母亲做了许多缺德事。面对夕莉的指责，她开始陷入悲痛。夕莉离开后，她在悲伤之余选择了上吊自杀。这时，夕摩进了房间，看到夕摩的夕香里好像有了一丝希望，狼狈地挣扎着，此时夕香里的模样与平日美丽的样子完全是两个人，在夕摩看来，丑陋至极。绳断了，夕香里掉了下来。夕摩走到她面前，她开始向夕摩哭诉，问她是不是来救妈妈了，向他控诉夕莉的冷淡与无情，更瘆人的是竟然说自己的亲女儿是“恶魔”。</p><p>听到这里的夕摩对母亲再也没有怜悯之情。他捏紧了母亲的脖子，毫不动摇，力气越来越大。</p><p>夕香里的一生是罪恶的。他与由纪夫的禁断之恋，残害了两个孩子，并将一个毫无关系的外人礼次郎牵扯进来，使其也陷入这个家庭悲惨的旋涡。然而这一次，她的罚也到此为止了。</p><h3 id="觋夕莉"><a href="#觋夕莉" class="headerlink" title="觋夕莉"></a>觋夕莉</h3><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/%E5%A4%95%E8%8E%89_%E4%B8%AD_%E5%88%B6%E6%9C%8D_2_%E9%80%9A%E5%B8%B808.png" alt=""></p><p>如果你没有玩到 true end，而是普通的 happy end（虽然我觉得一点也不 happy），没有揭示夕摩的阴谋，那么夕莉就是操纵大局的人，她带着夕摩面对了家庭的各种苦难，最后和夕摩逃到新加坡过着二人世界。但如果你玩到 te，你可能会觉得夕莉简直就是一个提线木偶，任由夕摩掌控。然而如果更进一步分析二人的心理，我倒认为，就算没有夕摩设下的局，二人的结局也会相似，毕竟夕莉是绝不会离开夕摩的。夕摩在陈述自己计划的时候，说道他当时还觉得夕莉拥有自我，如果放着不管的话，肯定又会想去做偶像之类的东西了。真的如此吗？就玩到这里，我觉得就算夕摩什么也不做，夕莉去做偶像也是天方夜谭。夕摩自以为自己控制住夕莉，她才不会离开。实际上夕莉也并不傻，就算夕摩不设局，夕莉也绝无可能踏上其他的道路。夕摩所做，其实也是夕莉所想做的。到这里有种“看山是山，看山不是山，看山又是山”的感觉。</p><p>从夕莉的视角看来，舅舅由纪夫自始至终一直健在，就算每次电话都是高桥管家接听的，她也不怀疑是由纪夫身体不适，不方便接电话的说法。在她看来，母亲也是她害死的，她也以为是自己的过激言语导致母亲自焚，对其他事件一无所知。其实剧情中还有一处伏笔，就是夕莉在看向夕摩的眼睛的时候，感叹道夕摩的眼睛总是有一种洞穿一切，知晓一切的深邃感，让她觉得自己不如夕摩美丽。（当然，在夕摩看来，夕莉纯洁无瑕的身体也绝不是自己这具深受玷污的“躯壳”所能比的）</p><p>相对夕摩癫狂的爱，夕莉的爱也有过之而无不及。为了保护弟弟而对好友大打出手，辱骂亲人，以极端的方式恐吓想要加害弟弟的人……夕莉甘愿走进夕摩构筑的“鸟笼”。夕莉的恶，是纯洁而高傲的。她的占有欲十分强大。与其说她爱着夕摩，不如说是扭曲疯狂又极端的想要掌控欲望。</p><p>如果你在一花告白时选择了接受，那么夕莉就会陷入疯狂，将夕摩步步相逼，直到夕摩也疯掉。“夕摩……你是无法从我这里逃掉的。”相应地，如果你在镜子麻醉夕摩时没有选择强忍着虚弱感说服镜子，而是接受了镜子，夕莉也会撕心裂肺，并逐渐疏远所有同学和亲人，几乎成为一个死人。所谓夕莉对夕摩的爱，实在太自私、疯狂了。</p><h3 id="觋夕摩"><a href="#觋夕摩" class="headerlink" title="觋夕摩"></a>觋夕摩</h3><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/%E5%A4%95%E6%91%A9_%E4%B8%AD_%E3%82%AB%E3%83%BC%E3%83%87%E3%82%AC%E3%83%B3%E5%88%B6%E6%9C%8D_1_%E9%80%9A%E5%B8%B803.png" alt=""></p><p>没有玩到 true end 的同学只会觉得夕摩是个可怜又可恨的脆弱小男生，而知晓事件全貌之后，夕摩则是整部游戏中承载着最多罪恶的人。可以说是相较于他的母亲”青出于蓝“了。</p><p>夕莉小时候总是不喜欢夕摩交女性朋友，也不太支持他养小动物。夕摩收集的昆虫一个一个死去，或是被丢掉。除此之外，还有被他当做玩物的蟾蜍、金鱼以及小鸟。夕摩的乐趣就是将这些小动物关起来，仔细把玩。由于缺乏社交，夕摩小时候的乐趣几乎全部就寄托在这些小动物，以及夕莉的身上。贯穿始终的“鸟笼”，是<del>全文</del>游戏的核心线索。</p><p>小时候，夕摩捡到一只受伤的小鸟，她和夕莉一起把小鸟关在笼子里，想要治好小鸟的伤。夕莉总认为自己就像这只受伤的小鸟，不希望被牢笼束缚，想要冲破天空。夕摩知道姐姐的心思（这是怎么看出来的），于是夕摩偷偷杀死了小鸟，将其埋葬，假装小鸟已经挣脱，飞向天空。在夕摩和夕莉看来，这个污浊不堪的家也是一个鸟笼，将自己和夕莉禁闭起来。于是后来，他经过设计亲手烧毁了鸟笼，又慢慢地，他也将夕莉和那只小鸟重叠起来，在夕莉的心中构建一个叫做“爱”的新鸟笼。而谁知道，自始至终，在夕莉看来，夕摩都是那么的柔弱。</p><p>出院后，夕摩的“日常功课”就没停过。他一直都在构思计划，设局。夕摩的罪恶是无法得到救赎的。他不仅设法残害了亲生父母，也把懦弱潜逃的舅舅搭上了船（在夕摩看来，抛弃母亲的舅舅同样是可恶的，应当受到惩罚），在一花线中更是把单纯的一花当做热兵器，并且把原本最爱的夕莉也推下水。</p><p>鸟笼，是夕摩设计的化身；假发，则是计划的一环。夕摩在放火后也只带了这两个东西出来。</p><p><em>“想关住我的母亲，想关住母亲的父亲，他们都失败了。有形的东西，终将坏掉。已经不再需要有形的鸟笼了。无论关进鸟笼多少次，都无法真正关住人的心。</em></p><p>深谙这一切的夕摩狂气地构筑了一个崩坏的鸟笼。</p><h3 id="铃森一花"><a href="#铃森一花" class="headerlink" title="铃森一花"></a>铃森一花</h3><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/%E3%81%84%E3%81%A1%E3%81%8B_%E4%B8%AD_%E5%88%B6%E6%9C%8D_1_%E9%80%9A%E5%B8%B806.png" alt=""></p><p>一花可以说是这部官能小说中<strong>所有</strong>出场角色中唯一一个正常人了。至少她的身上是没有很深的罪恶的。相比于其他人各不相同的怪癖与遭遇，一花只不过是因为性格软弱受人欺负，在初次遇到夕摩让他安慰两句后也就振作起来了。在一花的世界观里，小动物是超可爱的，朋友也是值得信任的……</p><p>不过在遇到夕摩后，她的遭遇也是十分悲惨的（尤其是一花线）。因为总是示弱，在心狠手辣的夕摩眼里她简直就是任人摆布的小狗。她非常喜欢和夕摩一起玩，却总是因为夕摩的喜怒无常而被呵斥。不过她始终都是在对自己强调要保持“距离感”，找自己的错误（小天使一花）。因为夕摩总是在重要的时候伸出援手（失落的时候安慰她，被欺负的时候保护她，没有人愿意理她的时候也是夕摩和自己搭话），逐渐发现夕摩是男生的一花最终陷入了对夕摩的喜爱中。如果你拒绝了一花的表白，那还好，毕竟夕摩在鼓励她后，她已经没有那么容易被欺负了，也知道保持人与人之间的“距离感”，就算没有夕摩的帮助，也一定会好好生活下去的。否则，如果接受了一花，那么一花将成为又一个被带入觋家深渊的受害者。</p><p>在一花线，夕摩对于眼前这个任人摆布的“小狗”产生了想要肆意蹂躏把玩的念头，而深陷其中的纯情一花也十分听话。二人活动时被夕莉看到，夕莉开始对一花大打出手，并且也开始拷问夕摩。就在夕莉要向她曾最爱的弟弟出手时，一花站出来保护了夕摩。夕莉一直追夕摩追到了车站，在车站又一次，想要控制夕摩。夕摩在恐惧之余，不由得想到曾经也热衷于掌控自己的母亲夕香里。此时，夕摩的眼中，那个对儿子图谋不轨的夕香里和夕莉重叠在一起，使他感到一阵恶寒。无可忍耐的夕摩用力推开了纠缠不休的夕莉，却失手将她推上了电车轨道。奇怪的是，谁也没有看到这一幕，人们都以为夕莉是自杀身亡。夕摩惊慌失措地回到了家，他也终于意识到，自己曾最爱的姐姐，被自己亲手所害。然后夕摩便开始彻底的堕落了。他接着解决了父亲，并且什么也没收拾，便打电话叫一花来自己家……幸好之后就没有内容了，我不想看见一花再遭受来自夕摩莫名其妙的苦难……吉祥寺你对正常人真的好不公平。</p><h3 id="藤堂咲和御殿场镜子"><a href="#藤堂咲和御殿场镜子" class="headerlink" title="藤堂咲和御殿场镜子"></a>藤堂咲和御殿场镜子</h3><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/%E5%92%B2_%E5%A4%A7_%E3%82%B3%E3%83%BC%E3%83%88_1_%E9%80%9A%E5%B8%B809.png" alt=""></p><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/%E9%8F%A1%E5%AD%90_%E5%A4%A7_%E5%88%B6%E6%9C%8D_1_%E9%80%9A%E5%B8%B803.png" alt=""></p><p>藤堂老师和镜子的关系，游戏里其实说的不是很清楚，总之就是镜子和老师相互爱着（怪）。藤堂为了自己不正常的 xp 而伤害学生，也可以称得上是数一数二的罪恶了。夕莉知道她对夕摩的所作所为后，便在一天发了很多揭发藤堂老师罪行的海报传单。藤堂老师气急败坏，对面前的“夕摩”指指点点，并跟同学们扬言要揭发“夕摩”的真身。然而，藤堂老师强行撕开“夕摩”的衣服后，却发现她是个女生——原来这是夕莉假装的夕摩！接着藤堂就接受调查，并被学校开除了。</p><p>但是她阴魂不散。她曾试图私下联系夕摩，但信被夕莉撕毁了。后来她联系了镜子，尝试 2v2（误），但镜子和自己都没能得逞（te 和 he）。说到这，镜子也是个十分矛盾的人。她一方面珍惜自己与觋家<del>姐妹</del>姐弟的友谊，一方面却也爱着藤堂老师（所以这实在太怪了啊啊啊！），所以她才会同意咲老师的计划，也正如此，才会在主线中被夕摩说服。如果在镜子麻醉夕摩的时候夕摩没有说服她，那么夕摩就会在迷糊中享受起来。赶回来的夕莉看到这一幕则会受到暴击。赶回来的时候，夕莉的手是被包扎过的，对应真结局中夕莉拿刀恐吓藤堂老师（为什么，为什么我如此坚定，而夕摩你！你却……）。此后，夕莉渐渐疏远夕摩，也疏远了所有人，世界里只剩下她自己了。夕摩则开始另外一种堕落（但其实，不论是哪个结局，夕摩都堕落得够深了），他开始回味之前特别反感的那种感觉（和镜子以及老师的），直到最后主动联系他们，在三人游戏的崩坏中迎来镜子线的 bad end.</p><hr><p>我懒得写其他角色了。 QWQ</p><h2 id="Part-3-想法"><a href="#Part-3-想法" class="headerlink" title="Part. 3 想法"></a>Part. 3 想法</h2><p>玩的时候，一开始还是很有代入感的。”脆弱“的我接受着姐姐的庇护，也憎恶着父亲，这些地方，以及夕摩的内心情感都描绘得很好。如果是我的话，我大概也会像夕摩一样，沉迷于对姐姐的恋情之中无法自拔。尤其是高二一刷的时候，真的是感同身受，和夕摩产生了强烈的共鸣。是啊，如果自己明明深爱着一个人，却要囿于世俗眼光而无法向其诉说爱意，真的太惨了。如果那个人也爱着自己，何不冲破牢笼呢？而且我也常常会丧，会逃避。表结局那个“停止了一切社会和经济活动”的“废人”夕摩有时候或许就是我的真实写照。对，很多时候，除了咬牙坚持，我也常选择逃避现实，尽管这样做真的很自私。但是有时候我甚至觉得，如果我真的在那个世界里，我会成为另一个有过之而无不及的夕摩。这种疯狂的爱虽然扭曲，却能深深地烙印在我的心中。背德感，崩坏感……</p><p>但玩了真结局，看清夕摩的阴谋之后，便好像没那么有代入感了，对夕摩也不是特别同情了。反而开始觉得和夕摩相比，我或许更像一花一点。我反正是做不到像夕摩那样静谧构思，心狠手辣。怎么说呢，这里总觉得作者想尝试更加狂气，创新的剧本，但俗话说步子迈太大容易扯着淡，没有处理得很好。虽然伏笔埋得好，但最后圆过来，作用好像也就是让叙事更加完整了，总之，有点怪。而且最重要的是，本游戏虽然致敬了俄罗斯作家陀思妥耶夫斯基的《罪与罚》，但拉斯科尔尼科夫虽然也犯下了许多罪行，但好歹去西伯利亚认真忏悔了一段时间， “罪” 与 “罚”均在天平之上。反观《镜4》中的二人完全没有任何忏悔的意思（当然，其他人物也是有着各自的“罪”的，但是！夕莉和夕摩就应该好好地为铃森一花酱道歉！），而且他们最后只是幸福地一起生活，没有得到其“罚”。如果你硬要说他们的双胞胎预示着轮回的“罚”的话，第一，游戏中没有任何直接描写，还是很难感受到；第二，在夕摩和夕莉的经历之后，就算他们的孩子真的又来一个轮回，我想夕摩夕莉是不会像夕香里和由纪夫那样做的。总之，游戏中对男女主“罚”的描写几乎可以忽略不计。不由得让我感觉封面的那个天平实在是多余了，只有一个鸟笼才是切切实实扣紧主题的。所以，如果一定要说这是“罪与罚的少女”的话，虽然难以接受，但一花线或许才是游戏的真结局。毕竟，弟弟对姐姐的爱根本就不是纯洁的，而是崩坏的，充斥着罪恶的。发生背叛也不是不可能。只有在这条线，男女主才真正遭受了“罚”——夕摩彻底走上不归路，再也无法回到正常的生活，而夕莉也走到了她的尽头。或许，只在这一条线出现了封面中下着大雪的空洞街道，也暗示了这条线的可能呢？可惜，这条线的完成度还是偏低了。</p><p>这部作品相对于其他万华镜系列作品来说，更加具有文学气息，实用度有所下降（虽然只看 CG 的话实用度肯定只高不低，但看了剧情就不好说了）。不仅引用了大量诗句（主要是中原中也、波德莱尔的，大多…呃，不如说全部，都充斥着阴郁的情感），而且相当的 BGM 都是采用的名曲，诸如《爱的礼赞》、肖邦的《小狗圆舞曲》、德彪西的《月光曲》，等等。当然，游戏自己编的 BGM 也非常出彩，点名表扬《青麦》。中原中也、梦久野作、波德莱尔等人的文学作品也与游戏的氛围特别搭。在游戏中遇到他们的诗句总会多琢磨一会儿，但是脱离这款游戏好像就没什么兴趣了哈哈……</p><p>要说其文学风格，大抵是一种“反艺术主义”，颠覆传统，甚至践踏传统，可能让固定了审美观念的人们感到不适。或许更进一步，可以说是一种“达达主义”，给人的感官以某种“侵犯”。但本游戏与传统美学又针锋相对得没有那么彻底。</p><p>说其剧本可以留在文学史上还是稍微有点过誉了，但要是把最后这稍微有点烂的摊子梳理一下，主题再更鲜明一点，或许也说不定呢。总归是非常接近文学作品的了，不过还是不要对官能小说的剧情期望太大吧（</p><h2 id="Part-4-结语"><a href="#Part-4-结语" class="headerlink" title="Part. 4 结语"></a>Part. 4 结语</h2><p>总之，未成年人最好还是不要玩这个游戏，对心灵的冲击实在太强烈了。高二的时候……现在回想起来，那个时候我的心情也濒临失控了。前几天二刷的时候感觉就好多了。</p><p>硬要说这游戏的教育意义的话，《镜3》可能就提到了环境保护、人工智能危机的问题，而《镜4》则是对家庭教育的思考。毕竟，没有如此畸形的家庭，也就不会有这样的夕摩和夕莉。或许，也暗含对封建家庭思想的批判吧（我不好说是不是真有）。</p><p>最后，引用剧本作者（们）在游戏中写的一首诗结束全篇吧（姐姐的占有欲好恐怖）</p><p><em>哪怕你将我的双眼戳瞎 我也会看着你</em></p><p><em>哪怕你将我的耳朵刺破 我也会倾听你</em></p><p><em>哪怕我失去了双腿 我也会朝你前进</em></p><p><em>哪怕我没有了嘴巴 我也会呼唤你的名字</em></p><p><em>哪怕双手被折断 我的心也会如同手一般抓住你</em></p><p><em>就算你将我的心脏碾碎 我的大脑也会像心脏一样鼓动</em></p><p><em>如果你将我的大脑投入烈火之中</em></p><p><em>那么 我的血恐怕也会继续嘲弄你吧</em></p><p><strong>*END*</strong></p><p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/bg_%E6%B2%B3%E5%B7%9D%E6%95%B7_%E6%98%BC.png" alt=""></p>]]></content>
    
    
    <summary type="html">今日狂风也依旧嘶吼</summary>
    
    
    
    <category term="杂谈" scheme="https://eykenis.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>坠入海底</title>
    <link href="https://eykenis.github.io/2021/12/22/%E5%9D%A0%E5%85%A5%E6%B5%B7%E5%BA%95/"/>
    <id>https://eykenis.github.io/2021/12/22/%E5%9D%A0%E5%85%A5%E6%B5%B7%E5%BA%95/</id>
    <published>2021-12-22T09:19:17.000Z</published>
    <updated>2021-12-22T08:30:48.852Z</updated>
    
    <content type="html"><![CDATA[<p>先把话说好，这篇文章可能会有很多负能量，看我写出来什么样吧。</p><p>上大学之前，我对大学生活的想象是什么样的？</p><p>当时，我很珍视我的高中生活，我珍视每一天。在我们一中这个小地方学习是一件很快乐的事，虽然也很辛苦。同时我也憧憬大学生活。我觉得这样一个一直一直都在不起眼的小县城里生活了这么久的我，要去一个省会城市长期生活，是一件难以想象的事，也是一件令人兴奋的事。我会告别我的家人。本来就是月假式的高中，让一个月一次回家变成一个学期一到两次回家。我会不会想家？我会不会习惯这个未知的大学生活？我这样一个社恐，在看上去需要特别多人际交流的大学里，会不会遇到很多困难？我知道困难肯定是会有的，我也肯定会尝试着去克服。我希望交新朋友，身边肯定会有许许多多有趣的人。作为985大学，课程想必会很生动有趣，具有启发意义吧。毕竟因为地域原因，这么多年来，我都是在小城市里接受着小规模学校的小班式教育。<strong>我急切想要知道，大城市里先进的教育理念是什么样子的，它又会将我带向何种引人入胜的知识殿堂</strong>。</p><p>当我在二十平米的小屋里，打开手机又一次查看录取通知时，欣喜地发现录取状态从“已投档”变为“已录取”。止不住的喜悦迸发出来，差点在椅子上哭出来。我又开始回忆。高考前一周，我感冒发烧，脑袋犯浑。而且高考时不烧了但还是咳嗽，考场上一边高速思考还要一边忍住咳嗽，生怕自己影响他人。考完后，我去我的床位揭掉了贴在墙上的手写“浙江大学”“武汉大学”便利贴，留了一套自己认为考得不错，而且题目质量也很高的理综套题在抽屉里留给学弟们<del>寻宝</del>参考（虽然下一届不考理综了）。嘛，好像这一些都无所谓了，全都释然了，就算考的不是特别理想也无所谓。尽管离自己最高的目标ZJU差了四十来分，尽管只要不犯那几个重大失误完完全全可以考上WHU/HUST，但我还是欣然接受了。我非常高兴。毕竟还是个985嘛，虽然是末流B的。毕竟人生总有缺憾嘛，都说求上而得中，这或许就是得中吧。我相信未来的生活仍然是充满希望的。</p><p>然而在上大学之前，我也总是很担心。我担心我这个几乎可以说是乡下来的土包子没法融入群体，我担心我这么个小个子不会去了大学特别“突出”吧QAQ，我担心许许多多大城市来的同学们在各个方面上对我都是降维打击，担心自己跟不上新的学习进度。（所以我早早地买了一本C++ Primer，然后请它吃了一暑假的灰QAQ）</p><p>然而事实证明我的担心不全对，对了一半。事实上大多数同学的见识其实也和我差不多，其实在这个网络的时代，我们并没有那么大的差距。当然也不乏能够“降维打击”我的同学，在他们眼里我真的是蒟蒻、小白，啥都不会，即使到现在也是，专业知识远远地被甩在后面（不过，我现在相信这些都是可以追赶的，只要我不再摆烂 ^ ^ 又开摆是吧）。</p><p>然后？然后就没有然后了。然后，学校就花了一年的时间，彻彻底底打破了我的幻想，又逼迫着我慢慢重建新的认知并朝之努力。重建的时间可能就是现在吧，比较晚了。</p><p>GitBook《<a href="[README - SurviveSJTUManual (gitbook.io">交大生存手册</a>](<a href="https://survivesjtu.gitbook.io/survivesjtumanual/))》开篇就说：">https://survivesjtu.gitbook.io/survivesjtumanual/))》开篇就说：</a></p><blockquote><p>各位同学们，在本书的开始，我不得不遗憾地告诉大家一个消息。<strong>国内绝大部分大学的本科教学，不是濒临崩溃，而是早已崩溃。</strong>在此，我无意争论是否复旦、中科大、或者清华、北大是否比我们崩溃的更少一些——这种争论是没有意义的。我只是看到了无数充满求知欲、激情、与年轻梦想的同学们，将要把自己的四年青春，充满希望与信任地交给大学来塑造。这使我心中非常不安。</p></blockquote><p>大一一年我逐渐地就是从充满希望到产生疑问，再到不解。直到不久前看到这本电子书 <em>SurviveSJTUManual</em>, 并产生了强烈共鸣后，我才知道，原来认为这一切本不该如此的人远远不止我一个。</p><p><strong>为什么会这样？</strong></p><p>说说到底发生了什么。</p><h3 id="我看到的CSEE专业是什么样子"><a href="#我看到的CSEE专业是什么样子" class="headerlink" title="我看到的CSEE专业是什么样子"></a>我看到的CSEE专业是什么样子</h3><hr><h4 id="Part-1-学校课程"><a href="#Part-1-学校课程" class="headerlink" title="Part 1. 学校课程"></a>Part 1. 学校课程</h4><p>初见大学课堂，我是对老师们怀着非常高的敬畏之心的，毕竟据说都是教授/副教授起步。高数（1）是一门理想的课程，老师讲的很好，也非常有亲和力，所学的知识也很合适。不过还是我自己的原因吧，学的并不是特别认真，两次机考的成绩都不太高，好像是85/75，期末考了60多。然而那次高数期末好像比较难，一个考场就没有几个人及格，所以我的成绩竟然也可以算得上偏上。到这里，大学给我的第一个不正常的反馈就来了。原来我不用这么努力，只是平时随便听听，考前突击也能取得较好的名次？或许大多数人真的没有那么努力。线代也是一样，基本靠网课+整天刷题的突击，效果也还算好。当然，这两门课都挺正常的。除此之外的另一门核心课程序设计（也就是C/C++入门教学），感觉老师讲的过细了，很多地方都过于手把手，不给我们自己探索，而且老师讲的也很慢很浅，很多东西虽然讲的多但是实在不怎么深，依靠自己还算勤奋的日常 coding，差不多到十月中旬就已经把整个学期讲的东西学的差不多了（除了文件IO操作）。好在课程的考核安排的较为合理，有课内OJ，多为上机考试，也穿插一些小项目，和期末大项目，比较有实践性。总结大一上：还算可以，没有什么太大的意见。</p><p>接着就是大一下，我终于能好好地听期待已久的数据结构课了——这当然是计算机基础中的重中之重。然而这门课，老师讲的过于不够深入。有多不深入呢？背包问题甚至对于 $O(2^n)$ 的暴力枚举大讲特讲，而对于 $O(n^2)$ 的动规算法只是半节课敷衍地过了一下，滚动数组更是只字未提。要不是提前有了解就被老师忽悠过去了。我寻思这东西不应该讲 DFS 的时候就给提完吗？这个算法讲得有点过分敷衍了。当然这只是一个例子，还有很多我真的真的，接受不了的内容。真的觉得这门课在求知上是敷衍人。不仅如此，数据结构的所谓小班讨论，就是上网搜资料，做PPT。拜托，抄网上内容，做出个PPT就能把高级数据结构学会？也不是不可以，就是这考核方式有点过于逆天了，看你 PPT 做得好不好，而不管你到底掌握的如何。同理还有 Word 文档，还有更多本该更深入的作业也在使用 PPT、Word 进行考核，直到现在都是，我相信未来还会有，我很失望，很失望。我觉得这是在亵渎我特别敬畏的计算机知识，尽管亵渎这个词不好听。不仅如此，期中期末的笔试题，比较各个容器优缺点，一个大题；写出AVL左旋右旋旋转过程，一个大题。差不多得了……另一门核心课，离散数学，我也知道老师为人师表，甘为人梯，是带着一腔热血和自信去教书的。但还是要冒昧地吐槽一下，老师您编写的教材质量实在太烂了…… 很多时候我不理解，为什么不按照业界统一的标准去编写教材？为什么不把各种定义写得更清楚明白一点，而要自作主张按照所谓例题去直接讲解知识点，还觉得自己“自成体系”？关键是这例题还出的不怎么样。一学期下来我只学会了做题，而且只会做这本教材的题，对什么概念都特模糊，都是一知半解。我的离散数学仍然没有入门，教材烂，我学的也烂。关键主编教材的老师还自我感觉良好，唉。所以说，这两门最重要的核心基础课程，全让我们奔着应试去了，几乎没有学到什么真家伙。</p><p>再到这学期，延续一年的所谓大学物理，我真的不想再多说了…… 电子电路课，对于所谓模拟电路，我不理解；对于所谓电子平台测试，我不理解。我不知道你教我们这些要深不深，要简单不简单的东西有什么用。有的老师用所谓“中国硬件行业缺人才”来当做借口让我们认真焊板子，接电路。可是你浪费那么多个上午中午去接电路焊板子，无非就是又一次复习了一次示波器的使用方法，无非就是又浪费了宝贵的课外时间去干那格式分高的一批的课程报告。等我们卷完、摆完之后呢？我们国家的硬件能力不会有任何提高，中国芯片不会有任何技术上的进步。美其名曰“基础”。给所有工科生不分门类全部加上一些自认为的学门核心课，以为给软件学大物这种操作就能打造所谓“复合型人才”……笑死，根本入不了门，还浪费时间。</p><p>我们的学习范围太宽太宽了，每一样都不好学，每一样学成了也是特别特别浅，关键是电子测试平台的老师，根本就不打算教会你。具体的也不想再说……很累。不过电子电路理论课的老师是个非常负责，非常热爱教书的老师。虽然模电我真的不配……数电课程算是我对于学校本科教育权威性认识的慰藉了，是好课，我也想学好。不说了，总结下来，本科的课程就是麻中麻，开始还好，后来越来越麻，中间可能遇到好老师能点通一下自己，以至于让自己的自学道路没有那么艰难……无意义的课程，教的一言难尽的课程，无限地消磨着我的意志，打击着我的积极性。</p><blockquote><p>就算你把课本上的内容搞得再烂熟，绝不代表你真正对这门课能有什么理解（相反，那些真正理解的人，却不一定能针对考点答出高分）。请务必牢记：大学四年留给你的是你的人生，在你毕业之时，那一串苍白的分数其实就已经作废了。</p><p>​                                    ——还是 <em>SuriviveSJTUManual</em></p></blockquote><p>大学大学，大不了自己学。把时间花在自己心悦诚服的事情上，献给自己对科学文化知识的渴望，其意义本就远大于“上课”。自学当然会苦于没有真的能够满足自己求知欲的课程，没有人指导，导致自己可能在自学时走很多弯路。好在当下这些苦难都减轻了很多——我们可以上网自己找网课不是吗。</p><p>以上，对事不对人。我知道老师们都没有恶意，也都十分辛苦，我仍然是敬佩他们的，不过不会喜爱他们。这不是他们的问题，这是教育体制的问题。学校水平，考核只看科研等指标，对于课堂，只看你学生报告写的好不好，PPT 做得漂不漂亮，格式合不合要求。至于学生上课听了什么，老师讲了什么？没有人在意。除了部分老师和部分学生自己，没有人在意学生的脑子里真的听进去了什么。对于老师来说，不仅教学没有科研有实际用处，而且为难学生只会让老师事情更多。这或许是导致许多本该讲的深入的课程异常简单甚至敷衍的重要原因吧。</p><blockquote><h4 id="写在中间"><a href="#写在中间" class="headerlink" title="写在中间"></a>写在中间</h4><p>我觉得我们真的应该多独立思考，多花时间去回过头来思考，这绝对不是浪费时间，绝对算不上内耗。相反，如果只是为了ddl、绩点而疲于奔命，那么我们真的就是在被这不合理的制度牵着鼻子走，逐步成为国内教育流水线的牺牲品……</p></blockquote><h4 id="Part-2-学校环境与个人"><a href="#Part-2-学校环境与个人" class="headerlink" title="Part 2. 学校环境与个人"></a>Part 2. 学校环境与个人</h4><p>刚入大学，我渴望求知，我渴望遇见更大的世界。我觉得既然都是贴着这么多 tag 的高校了，应该人人都很乐意去学好玩有趣的东西，去发现问题，深究问题吧？但很遗憾，我周围的<strong>大多数</strong>人好像并不这么认为。他们要么只看到绩点，要么就是绩点都不看。时至今日，我们大部分人，对于课本之外的知识知之甚少，仿佛整个专业学习校内课程就到头了。即使大二了，也很少有人在能遨游中发现那令人神往的广阔计算机天地…… 稍微去看看那些从业者的经验就知道，这种行为无异于自掘坟墓。就包括我，到现在依然是个小白，有很多东西真的不懂，我也希望自己能遇到大佬，一步一步跟进。我还是不理解，我们到底怎么了？我不该戾气这么重，或许我想的不对。身边对所学专业毫不了解，混世度日的人太多太多了。我不想成为那种人，我没有后路可言，我可以靠的只有自己，我没有资格去成天贪图享乐…… 我不配，但却又逐渐在成为那样的人。不得不说，到现在，我只不过是个眼高手低的烂人罢了。很遗憾，一年过去了，我几乎是什么也不会，一事无成。我是一个愚钝的人，而且不擅长寻找正确的方向，我希望我能多思考，多提升自己的效率，不要再忙了一年发现自己什么都没学成。<br>很多时候，我真的是不思进取，混吃等死，该骂。这一年多我有很多时间浪费在了无意义的娱乐上，特别是大一下学期最为严重，泛滥成灾。诚然，人不应该拒绝娱乐，但或许对于休息之余来说，我的程度有点过火了吧。我应该去思考，发生这种事的原因是什么？</p><p>$Ivory\ \ Tower$. 校园给了我们一个相对于社会的缓冲，在这个缓冲下没有高中学业的紧张，也没有社会的重压。相对稳定舒适的生活，不管是其他任何年龄段的人看来都是奢侈的。而如果我们永远不跳出这种幻象，不去真的为工业界 or 学术界的工作提前打下真本事，可能只会追悔莫及，四顾茫然吧。大学是一锅温水，小心被煮了青蛙。当世界都用糖果引诱你进入她的监狱的时候，你还能保持独立思考吗？</p><p>当然，保持独立思考听起来也不应是一件难事，毕竟你要做的仅仅只是拒绝糖果而已。不过你脑子里的多巴胺会同意吗？</p><p>我好差劲，我们都好差劲。</p><hr><p>所以说，大概这就是我所看到的大学。更不用说那种阴森恐怖的内卷氛围，只要不是熟人，在课业学习上就几乎是封闭的。绝大多数人对于小组作业毫不过问，只要不是自己一个人的作业，天塌了有个高的顶着。都是这样子想，甚至有人匿名互评作业打0分。有时候保持一颗热心，你只会发现所有的杂事都被你摊上，而你得不到任何好处，反而在帮别人做事。囚徒困境啊！！！我想我的热心与积极态度，大概也被消磨殆尽了。</p><h3 id="我在做什么"><a href="#我在做什么" class="headerlink" title="我在做什么"></a>我在做什么</h3><p>竞赛。对于日常生活学习的不尽人意，竞赛最大程度地满足了我的许多需求与幻想，同时也<strong>极大地打击了我</strong>。这未尝不是好事，这让我开始反省自己在深入思考学习上到底是一个什么水平的人，也让我能够及时更新自己（个P）。算法竞赛对我自己来说，只是少了一些打游戏和复习那些所谓专业课的时间而已，得到的收益是这两样远不能比拟的。</p><p>然而我收获了什么呢？训练一年几乎是毫无成果，cf只是勉强维持在蓝名，而且在大一下结束后，我进入了长达半年的低谷期。从暑假自训不上心，蓝名迟迟上不去，到多校被虐，再到做题做到自闭也没有什么成果，还因为疫情被锁在四川回不来了，暑假有一天夜里打完 div2 甚至爆1，对着电脑屏幕抓狂，可能也给 childofcuriosity 佬佬传了一些负能量:pensive:呜呜呜，感觉自己挺烦人的。再到开学ccf-csp爆炸，算是跌到了谷底。ccf爆炸到没有颜面去参加ccsp，只希望明年再来。好在继续训练，国庆后成功上了蓝名，并终于学会了可持久化数据结构，并且组好了新队。本以为转机终于要来了，谁知道接着又是低谷。我在我抱有一丝希望的区域赛接连打铁，甚至离铜牌区都还有距离。而且这其中，队友有一个训练极不积极。等打完区域赛，虽然没有真的哭出来，但心里的泪已经流的差不多了吧。当时都觉得，济南站 2 小时签到或许永远是我的耻辱柱。又一次，竞赛线跌入谷底，这之后我甚至退役的小作文都写好了，打算放弃竞赛去死磕图形学走直接走就业路线了（就是上上篇博客，不过原内容被我撤掉了），就差去校队里和各位讲清楚了，然而幸好有某位大一的oi爷鼓励我，安慰我，才让我厚着脸皮坚持下来——脸皮真的厚了起来，毕竟我这样水平的人去参赛XCPC都感觉对不起一队打来的名额。<br>我花了这么久，终于想明白，或许我的情况是：很多时候我只是拿刷算法题当一个挡箭牌。不想做 ddl，不想认真学习的时候，我就把自己埋在 codeforces 上自闭，埋在洛谷里看博客，做题。然而听起来是做题，实际上两边不讨好——很多时候我仅仅只是为了逃避而已，我也很少因为不想学习的原因去补高难度的题，说不定，仅仅只是在这些网站上继续浪费时间而已。那这又和我 间歇性无节制打游戏综合征 有何差异呢？我对于竞赛的态度可能就这样走歪了，这也是导致我区域赛连续打铁的重要原因。明明做了很多题，却仍然打铁。可能我只是在追求着A题的快感，逐渐忘了去沉下心来好好学算法，提升思维吧。在刚开始的那段时间，学的东西简单，或许这个大问题还没有突出，随着算法学习逐渐深入，问题越来越严重。毕竟电子竞技菜是原罪，XCPC不就是一种脑力的电子竞技吗？别人EDG整天十几个小时的训练，而我每天平均真正有效有用的训练可能2小时都没有。对不起，我不仅是菜狗，而且还是懒狗，这下献大丑了。希望自己再打一年，好好打。</p><p>除开竞赛，也就是课外的其他学习。我尝试过很多东西，Qt 学习因为大一上期末考中断了，回过头来看这工具也确实不适合；Unity 因为完全不懂相关专业知识强行学导致做出来的东西很蹩脚，也就放了；尝试做项目项目半途暴死；说要给学校 OJ 重做前端，开发小组到现在也是杳无音讯；再到现在，开始找 CG 领域的入门知识，开始学 GAMES101 入门（可以说是国内第一个全中文讲课的美国大学的课程了），才发现自己的学习习惯已经变得多么差了。GAMES101 真正给代码框架的作业不知比学校那些 PPT 作业好了多少，但我不擅长做了……（所以说，对于许多出国的学生，很多人都说这是觉得外国的月亮圆，但上了他们很多网课了才发现，国内的本科教育，那确确实实是被吊打）确实，除了学校要求的，以及竞赛，剩下的学习，都是我追梦的尝试。然而我的很多尝试，都因为各种各样的事搁置，可能现在确实也稍早了一点。不过，还是希望自己尽早好好入门图形学，努力成为一名领域人才。至于为什么学图形学，当然是兴趣爱好使然（毕竟从小到大都是一个打游戏又菜又有瘾的人），觉得这样的领域很适合我，很感兴趣。我觉得做游戏是一件很痛苦的事（制作过程很复杂，实现一个简单的东西可能需要很多工作），也是一件很快乐的事（正确运行起来的正反馈当然强）。有时候我不想再在这些几乎毫无用处的课业上浪费时间，只想早点投身工业界，却又怕自己的选择太单纯太激进…… 不久前，TX 的资深图形大佬毛星云坠楼结束了自己的生命。我不熟悉这些大佬，没有看过他的那些入门书籍，但看到了网上流传的他的一段话：</p><blockquote><p>我有一个梦想，有一天，西游记能出ACT，打神弑佛，那绝对比《战神》带感。<br>我有一个梦想，有一天，上海滩能出沙盒游戏，而不是玩《GTA》感受美国梦，亦或是玩《热血无赖》体验国外公司强行塞给我们的「中国文化」。<br>我有一个梦想，有一天，不少3A大作不需汉化，因为是我们自己的游戏，配音是中国的，文化也是中国的。<br>我有一个梦想，将来的某一天，国产游戏能像中国的其他产业一样，以一个领跑者的姿态，面对全世界，面对全宇宙，器宇轩昂，扬眉吐气。<br>这会是由我们一起去完成的梦想。</p><p>等着我们的好消息！</p></blockquote><p>这不就是我所想的吗？</p><p>虽然直到这个事件我才得以了解这位热爱游戏开发的大师（这何尝不是一件令人遗憾的事），但是看到这段他给自己出的书所写的序言，又怎么不能让人感动得流泪。我不知道他经历了什么，我也不清楚是什么的重压让他做出如此决定。未来的路还很长，前人未竟的事业，我希望我能够在有能力维持生活之余，为之出一份力。</p><p>我想做一个理想主义者，不要在被生活和现实逐渐蚕食时失去自我。我有自己想做的事。有很多。</p><p>愿我们在这不尽人意的世界，还能找到自己，抓住自己，坚持自己。</p>]]></content>
    
    
    <summary type="html">如何才能挣脱这束缚呢？</summary>
    
    
    
    <category term="杂谈" scheme="https://eykenis.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>Treap学习笔记及模板</title>
    <link href="https://eykenis.github.io/2021/12/14/Treap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%8F%8A%E6%A8%A1%E6%9D%BF/"/>
    <id>https://eykenis.github.io/2021/12/14/Treap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%8F%8A%E6%A8%A1%E6%9D%BF/</id>
    <published>2021-12-14T02:33:32.000Z</published>
    <updated>2021-12-14T07:37:06.210Z</updated>
    
    <content type="html"><![CDATA[<p>Treap是平衡搜索树的一种。所谓 “Treap”，即 “Tree” + “Heap”, 顾名思义，是使用堆方法对搜索树进行平衡的一种数据结构。</p><p>约定该篇文章讨论的二叉搜索树都遵守 “比当前节点值大的节点在右子树，小于等于当前节点值的节点在其左子树” 这一规定。</p><h2 id="Treap维护平衡的方式"><a href="#Treap维护平衡的方式" class="headerlink" title="Treap维护平衡的方式"></a>Treap维护平衡的方式</h2><p>Treap的目的主要是利用堆的性质来平衡原搜索树。因为堆是一棵完全二叉树，深度最优嘛。</p><p>对于一棵普通的二叉搜索树，我们对其每个节点再随机赋上一个优先级权值 $p$. 即对任意节点，多了一个变量 $p=random()$.</p><p>例如，如果我们以小根堆的规则来约束这个平衡树，那么插入和删除两个主要操作就会变成这样：</p><p><strong>插入</strong>：先按照普通平衡树的方式将元素插入到合适位置。然后我们需要向上回溯，在回溯的过程中检查这些节点关于 $p$ 是否符合小根堆的性质。如果当前节点的 $p$ 大于左右子节点 $p$ 的最小值，那么就不符合小根堆的性质。这个时候，如果左子节点的 $p$ 更小，我们就需要左旋，反之需要右旋，以此保证平衡。</p><p>至于旋转的具体操作，即：</p><blockquote><p>以右旋为例：</p><ol><li>将当前节点下放至其左子节点的位置</li><li>令<strong>右子节点的左子节点</strong> 称为当前节点的新的右子节点</li><li>右子节点的左子节点变为当前节点，取代当前节点的位置</li></ol></blockquote><p>删除操作当然是同理了，回溯的时候观察 $p$ 来维护平衡。由于 $p$ 值是随机的， Treap也不是严格的堆结构，所以它是一种期望平衡的<strong>弱平衡</strong>的平衡树，搜索、插入和删除的期望时间复杂度为 $O(\log n)$.</p><p>Treap的优势在于其实现起来非常简单，包含的也就上面这些东西了。</p><h2 id="模板部分"><a href="#模板部分" class="headerlink" title="模板部分"></a>模板部分</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> cnt; <span class="comment">// cnt 表示当前treap内节点总数，用于动态开点</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = XXXXX;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="comment">// 分别表示左右子节点、所在子树的大小、当前节点值以及p值</span></span><br><span class="line">    <span class="keyword">int</span> l, r, size, val, p;</span><br><span class="line">&#125;a[maxn];</span><br></pre></td></tr></table></figure><h3 id="回溯统计"><a href="#回溯统计" class="headerlink" title="回溯统计"></a>回溯统计</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[k].size = a[a[k].l].size + a[a[k].r].size + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="旋转"><a href="#旋转" class="headerlink" title="旋转"></a>旋转</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 右旋</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rrotate</span><span class="params">(<span class="keyword">int</span> &amp;k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = a[k].l;</span><br><span class="line">    a[k].l = a[tmp].r;</span><br><span class="line">    a[tmp].r = k;</span><br><span class="line">    a[tmp].size = a[k].size;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">    k = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 左旋</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lrotate</span><span class="params">(<span class="keyword">int</span> &amp;k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = a[k].r;</span><br><span class="line">    a[k].r = a[tmp].l;</span><br><span class="line">    a[tmp].l = k;</span><br><span class="line">    a[tmp].size = a[k].size;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">    k = tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> &amp;k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k == <span class="number">0</span>) &#123;</span><br><span class="line">        k = ++cnt;</span><br><span class="line">        a[k].val = val;</span><br><span class="line">        a[k].p = <span class="built_in">rand</span>();</span><br><span class="line">        a[k].size = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a[k].size++;</span><br><span class="line">    <span class="keyword">if</span> (val &gt;= a[k].val) &#123;</span><br><span class="line">        <span class="built_in">ins</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">ins</span>(a[k].l, val);</span><br><span class="line">    <span class="keyword">if</span> (a[k].l &amp;&amp; a[k].p &gt; a[a[k].l].p) &#123;</span><br><span class="line">        <span class="built_in">rrotate</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[k].r &amp;&amp; a[k].p &gt; a[a[k].r].p) &#123;</span><br><span class="line">        <span class="built_in">lrotate</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> &amp;k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    a[k].size--;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val == val) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!a[k].l &amp;&amp; !a[k].r) &#123;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!a[k].l || !a[k].r) &#123;</span><br><span class="line">            k = a[k].l + a[k].r;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a[a[k].l].p &lt; a[a[k].r].p) &#123;</span><br><span class="line">            <span class="built_in">rrotate</span>(k);</span><br><span class="line">            <span class="built_in">del</span>(a[k].r, val); <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">lrotate</span>(k);</span><br><span class="line">            <span class="built_in">del</span>(a[k].l, val); <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val &gt;= val) &#123;</span><br><span class="line">        <span class="built_in">del</span>(a[k].l, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">del</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>例题分割线~</p><p>例题：</p><h3 id="P3369-【模板】普通平衡树"><a href="#P3369-【模板】普通平衡树" class="headerlink" title="P3369 【模板】普通平衡树"></a><a href="https://www.luogu.com.cn/problem/P3369">P3369 【模板】普通平衡树</a></h3><p>其中还要维护查询排名，查询前驱后继等搜索操作。</p><p>当普通平衡树维护就可以啦，比较简单。</p><p>完整代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="keyword">int</span> root;</span><br><span class="line"><span class="comment">// 注意按p是小根堆</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, size, val, p;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[k].size = <span class="number">1</span> + a[a[k].l].size + a[a[k].r].size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rrotate</span><span class="params">(<span class="keyword">int</span> &amp;k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = a[k].l;</span><br><span class="line">    a[k].l = a[tmp].r;</span><br><span class="line">    a[tmp].r = k;</span><br><span class="line">    a[tmp].size = a[k].size;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">    k = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lrotate</span><span class="params">(<span class="keyword">int</span> &amp;k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = a[k].r;</span><br><span class="line">    a[k].r = a[tmp].l;</span><br><span class="line">    a[tmp].l = k;</span><br><span class="line">    a[tmp].size = a[k].size;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">    k = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> &amp;k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k == <span class="number">0</span>) &#123;</span><br><span class="line">        k = ++cnt;</span><br><span class="line">        a[k].val = val;</span><br><span class="line">        a[k].p = <span class="built_in">rand</span>();</span><br><span class="line">        a[k].size = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a[k].size++;</span><br><span class="line">    <span class="keyword">if</span> (val &gt;= a[k].val) &#123;</span><br><span class="line">        <span class="built_in">ins</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">ins</span>(a[k].l, val);</span><br><span class="line">    <span class="keyword">if</span> (a[k].l &amp;&amp; a[k].p &gt; a[a[k].l].p) &#123;</span><br><span class="line">        <span class="built_in">rrotate</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[k].r &amp;&amp; a[k].p &gt; a[a[k].r].p) &#123;</span><br><span class="line">        <span class="built_in">lrotate</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> &amp;k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    a[k].size--;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val == val) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!a[k].l &amp;&amp; !a[k].r) &#123;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!a[k].l || !a[k].r) &#123;</span><br><span class="line">            k = a[k].l + a[k].r;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a[a[k].l].p &lt; a[a[k].r].p) &#123;</span><br><span class="line">            <span class="built_in">rrotate</span>(k);</span><br><span class="line">            <span class="built_in">del</span>(a[k].r, val); <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">lrotate</span>(k);</span><br><span class="line">            <span class="built_in">del</span>(a[k].l, val); <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val &gt;= val) &#123;</span><br><span class="line">        <span class="built_in">del</span>(a[k].l, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">del</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rk</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (val &gt; a[k].val) &#123;</span><br><span class="line">        <span class="keyword">return</span> a[a[k].l].size + <span class="built_in">rk</span>(a[k].r, val) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">rk</span>(a[k].l, val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> rnk)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (rnk == a[a[k].l].size + <span class="number">1</span>) <span class="keyword">return</span> a[k].val;</span><br><span class="line">    <span class="keyword">if</span> (rnk &gt; a[a[k].l].size + <span class="number">1</span>) <span class="keyword">return</span> <span class="built_in">find</span>(a[k].r, rnk - a[a[k].l].size - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">find</span>(a[k].l, rnk);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query_pre</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val &gt;= val) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">query_pre</span>(a[k].l, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="built_in">query_pre</span>(a[k].r, val);</span><br><span class="line">    <span class="keyword">if</span> (!tmp) <span class="keyword">return</span> a[k].val;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query_suf</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val &lt;= val) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">query_suf</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="built_in">query_suf</span>(a[k].l, val);</span><br><span class="line">    <span class="keyword">if</span> (!tmp) <span class="keyword">return</span> a[k].val;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> opt, x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        cin &gt;&gt; opt &gt;&gt; x;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">ins</span>(root, x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="built_in">del</span>(root, x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">3</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">rk</span>(root, x) + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">4</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">find</span>(root, x) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">5</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">query_pre</span>(root, x) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="built_in">query_suf</span>(root, x) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">最简单的平衡树之一</summary>
    
    
    
    <category term="知识点" scheme="https://eykenis.github.io/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="平衡树" scheme="https://eykenis.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
    <category term="Treap" scheme="https://eykenis.github.io/tags/Treap/"/>
    
  </entry>
  
  <entry>
    <title>一个艰难的决定</title>
    <link href="https://eykenis.github.io/2021/12/05/%E4%B8%80%E4%B8%AA%E8%89%B0%E9%9A%BE%E7%9A%84%E5%86%B3%E5%AE%9A/"/>
    <id>https://eykenis.github.io/2021/12/05/%E4%B8%80%E4%B8%AA%E8%89%B0%E9%9A%BE%E7%9A%84%E5%86%B3%E5%AE%9A/</id>
    <published>2021-12-05T04:32:12.000Z</published>
    <updated>2021-12-07T08:12:18.237Z</updated>
    
    <content type="html"><![CDATA[<p>先别想这么多……</p><p>先别想这么多……</p><p>好好休息……好好休息……</p><p>再调整一会，再坚持一会</p><p>心态再放平一会……</p>]]></content>
    
    
    <summary type="html">沉稳，冷静，严谨，坚忍 ——敬爱的高中数学老师</summary>
    
    
    
    <category term="牢骚" scheme="https://eykenis.github.io/categories/%E7%89%A2%E9%AA%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>快速傅里叶变换(FFT)及NTT入门笔记</title>
    <link href="https://eykenis.github.io/2021/11/18/%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2-FFT-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://eykenis.github.io/2021/11/18/%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2-FFT-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</id>
    <published>2021-11-18T13:41:50.000Z</published>
    <updated>2021-12-14T03:05:41.079Z</updated>
    
    <content type="html"><![CDATA[<p>本博客学习于洛谷P3803各路大佬题解，所以你肯定会找到很多相似的地方QWQ</p><h2 id="什么是FFT"><a href="#什么是FFT" class="headerlink" title="什么是FFT"></a>什么是FFT</h2><p><strong>傅里叶变换</strong></p><p>傅里叶说明了：一切函数/波形都可以用有限或无限个弦函数/波形叠加形成。</p><p>例如，现在有一个由三个不同正弦波组成的近似矩形波，将这些波形关于 $x$ 轴平行地放在一起，就可以得到下图：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/97b88cfe9192ba702c13e817170e7a08.png" alt="img"></p><p>其中红色的是合成出来的近似矩形波。</p><p>（当然，图肯定是不太标准的，意思一下就行）</p><p>从 $xOz$ 平面看，我们可以获得各个波的时域信号，也就是 $t-f(t)$ 图像。而从 $zOy$ 平面看，则可以获得各个波的频域信号。</p><p>先不看频域信号中的红色部分，注意其他三个波其实是有排序规则的：按照频率大小排序。也就是说，频率越快， $y$ 越大。且每个频率下的 $z$ 将反映该波的振幅。两种不同的信号包含了不同的信息。</p><p>而傅里叶变换，就是对一个时域信号作变换，生成频域信号。</p><p><strong>离散傅里叶变换（DFT）</strong></p><p>顾名思义，离散傅里叶变换就是在确定时域信号和频域信号都是离散的时候作的傅里叶变换。</p><p>例如，现在有一个多项式函数 $f(x)=\sum_{i=0}^{n}a_ix^i$，那么这个函数其实就是“时域信号”，我们也可以将其表示成点集$\{P_0,P_1,…,P_n\}$，其中 $P_i$ 是函数图像上的某一个点。容易知道 $n$ 个点是可以确定一个 $n-1$ 次多项式的。那么这个点集其实就是“频域信号”。从函数式到点集的变化，就是一种离散傅里叶变换。</p><p>另外，我们称IDFT为DFT的逆运算，即从点集得到函数式的运算。</p><h2 id="为什么需要FFT"><a href="#为什么需要FFT" class="headerlink" title="为什么需要FFT"></a>为什么需要FFT</h2><p>离散型傅里叶变换解决的问题一般是多项式乘法问题。</p><p>最经典的FFT问题即多项式卷积问题：</p><p><a href="https://www.luogu.com.cn/problem/P3803">P3803 【模板】多项式乘法（FFT） - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)</a></p><p>给一个 $n$ 次多项式 $F(x)$ 和一个 $m$ 次多项式 $G(x)$，求 $F(x)$ 和 $G(x)$ 的卷积。</p><p>如果直接暴力计算，第一种就是直接展开函数式算，第二种就是执行一次DFT，将函数式转换为点集，通过对 $x$ 相同的点的 $y$ 值相乘，得到目标函数的点集，再通过 DFT 的逆运算 IDFT 转化为答案。</p><p>显然，不管采取哪种方法，一共都有 $m · n$ 项，复杂度为 $O((max\{n, m\})^2)$. 在 $nm\geq 1e9$ 的时候是无法接受的。虽然朴素方法下第二种方法的常数肯定比第一种还要大，但其实我们可以在DFT变换的基础上使用FFT来加速多项式乘法。实际上，FFT的加速原因在于其采用了分治的思想。</p><h2 id="多项式乘法问题"><a href="#多项式乘法问题" class="headerlink" title="多项式乘法问题"></a>多项式乘法问题</h2><h3 id="前置知识-复数根"><a href="#前置知识-复数根" class="headerlink" title="前置知识-复数根"></a>前置知识-复数根</h3><p>考虑欧拉公式</p><script type="math/tex; mode=display">e^{\theta i}= \cos\theta + i\sin\theta</script><p>，容易知道 $e^{2\pi i}=1$.</p><p>不妨令 $w_n=e^{2\pi i\over n}=\sin{2\pi i\over n}+i\cos{2\pi i\over n}$, 则 $w_n^n=1$.</p><p>则称 $w_n$ 为 $n$ 的一个复数单位根. 容易知道 $n$ 的复数根最多有 $n$ 个，为 $\{w_i|i\in [0,n-1]\}$. 这是因为复数根具有性质 $w_n^{n+k}=w_n^k$.</p><p>另外，还有一个通过消去定理得到的引理：$w_n^k=w_{n\over2}^{k\over2}$.</p><h3 id="使用FFT解决多项式乘法问题"><a href="#使用FFT解决多项式乘法问题" class="headerlink" title="使用FFT解决多项式乘法问题"></a>使用FFT解决多项式乘法问题</h3><p>例题：</p><p><a href="https://www.luogu.com.cn/problem/P3803">P3803 【模板】多项式乘法（FFT）</a></p><p><strong>DFT</strong></p><p>现在要将$F(x)$的表达式转化为点值表示法，那么我们需要取$n$个点。前面已经讨论过，朴素的取法复杂度是 $O(n^2)$ 的，现在我们需要构造一个可以分治的取法：</p><p>设$ F(x)$ 的项数 $n$ 为偶数，并令</p><p>$A(x)=a_0+a_2x+a_4x^2+…+a_nx^{n\over 2}$,</p><p>$B(x)=a_1+a_3x+a_5x^2+…+a_{n-1}x^{\frac{n}{2}-1}$.</p><p>则 $F(x)=A(x^2)+xB(x^2)$.</p><p>代入 $n$ 个单位复数根 $w_n^k, k\in[0, n - 1]$，有</p><p>$F(w_n^k)=A(w_{n}^{2k})+w_n^kB(w_n^{2k})$</p><p>而 $A(w_n^{2k})=a_0+a_2w_n^{2k}+…+a_nw_n^{2k\over n}$</p><p>$=a_0+a_2w_{n\over2}^k+…+a_nw_{n\over2}^{k\over n}$.</p><p>且对 $B(w_n^{2k})$，我们也有相似的结论。</p><p>故</p><p>$F(w_n^k)=A(w_{n\over2}^k)+w_n^kB(w_{n\over2}^{k})\ (k&lt;{n\over2})$.</p><p>考虑 $k\geq {n\over2}$ 的情况，令 $k+{n\over 2}$ 取代原来位置上的 $k$,</p>$F(w_n^{{n\over 2}+k})=A(w_n^{n+2k})+w_n^{{n\over 2}+k}B(w_n^{2k})$,$=A(w_n^{2k})-w_n^{k}B(w_n^{2k})$,$=A(w_{n\over2}^k)-w_n^kB(w_{n\over2}^k)$.那么在求 $F(w_n^k)$ 时，我们可以先求 $A(w_{n\over2}^{k})$ 以及 $B(w_{n\over2}^{k})$，然后再合并出 $F(w_n^k)$. 到这里，分治递归的可行性就十分显然了。由主定理可知复杂度为 $T(n)=T(\frac{n}{2})+O(n)=O(n\log n)$.**IDFT**IDFT 即 DFT 的逆变换。我们的目的是求最终表达式的各个系数，而通过 DFT 得到最终的点值表达式后，我们还需要将其逆向变回系数表达式。其实，这里只需要取 $w'=\overline {w_n^k}$. 即单位根的共轭复数，然后再执行一遍相似的分治，并且最后得到的多项式系数都除以一个 $n $ 就可以了。（不再展开证明 QWQ，了解就好，因为本蒟蒻也不会）CPP:<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// F[]即F(x)，注意n为A(x),B(x)的长度，op为1/-1表示进行的是FFT/IDFT</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FFT</span><span class="params">(complex&lt;<span class="keyword">double</span>&gt; F[], <span class="keyword">int</span> n, <span class="keyword">int</span> op)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!n) <span class="keyword">return</span>;</span><br><span class="line">    complex&lt;<span class="keyword">double</span>&gt; a[n], b[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        a[i] = F[i &lt;&lt; <span class="number">1</span>], b[i] = F[i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">FFT</span>(a, n &gt;&gt; <span class="number">1</span>, op), <span class="built_in">FFT</span>(b, n &gt;&gt; <span class="number">1</span>, op);</span><br><span class="line">    <span class="function">complex&lt;<span class="keyword">double</span>&gt; <span class="title">wn</span><span class="params">(cos(PI / n), sin(PI / n) * op)</span>, <span class="title">w</span><span class="params">(<span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        F[i] = a[i] + w * b[i];</span><br><span class="line">        F[i + n] = a[i] - w * b[i];</span><br><span class="line">        w *= wn;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>此为FFT的递归写法，由于单位根的原因需要使用 `double` 数据类型，且需要一个复数结构体，每层分治还要额外开数组，其常数比较大。另外还有一种FFT的迭代写法，常数更小。（需要的可以去别处找，或者我说不定会更？QAQ）****回到该问题，由于需要分治的任何时候都要保证 $n$ 为偶数，故我们需要把 $n,m$ 补成相同的一个 $2$ 的幂次方。项数补全不影响结果，只要让多出来的项系数都为0就行了。故整个流程即：1. 对 $F(x),G(x)$ 分别求 DFT2. 直接将每个点值相乘3. 通过IDFT将点值还原成系数表达式，得到答案对于例题[P3803](https://www.luogu.com.cn/problem/P3803)，AC代码如下：<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// op = 1 ? DFT : IDFT</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e6</span> + <span class="number">10</span>;</span><br><span class="line">complex &lt;<span class="keyword">double</span>&gt; F[maxn], G[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fft</span><span class="params">(complex&lt;<span class="keyword">double</span>&gt; f[], <span class="keyword">int</span> n, <span class="keyword">int</span> op)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!n) <span class="keyword">return</span>;</span><br><span class="line">    complex &lt;<span class="keyword">double</span>&gt; a[n], b[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; ++k) &#123;</span><br><span class="line">        a[k] = f[k &lt;&lt; <span class="number">1</span>], b[k] = f[k &lt;&lt; <span class="number">1</span> | <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fft</span>(a, n &gt;&gt; <span class="number">1</span>, op), <span class="built_in">fft</span>(b, n &gt;&gt; <span class="number">1</span>, op);</span><br><span class="line">    <span class="function">complex&lt;<span class="keyword">double</span>&gt; <span class="title">wn</span><span class="params">(cos(PI / n), sin(PI / n) * op)</span>, <span class="title">w</span><span class="params">(<span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; ++k, w *= wn) &#123;</span><br><span class="line">        f[k] = a[k] + w * b[k], f[k + n] = a[k] - w * b[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;F[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;G[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    m += n, n = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n &lt;= m) n &lt;&lt;= <span class="number">1</span>; <span class="comment">// 补足系数，保证是2的幂次</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// DFT</span></span><br><span class="line">    <span class="built_in">fft</span>(F, n &gt;&gt; <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">fft</span>(G, n &gt;&gt; <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) F[i] *= G[i];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IDFT</span></span><br><span class="line">    <span class="built_in">fft</span>(F, n &gt;&gt; <span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.0f &quot;</span>, <span class="built_in">fabs</span>(F[i].<span class="built_in">real</span>()) / n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>基本上和洛谷上<font color="grey">FlashHu</font>的题解代码一样...因为我的FFT基本上是从这里理解的## NTT-快速数论变换很多时候，要求的多项式系数并不会有多大，`double` 显得有些浪费空间了，而且很容易产生精度问题。故可以使用另一种 “原根” 替代复数来解决多项式乘法问题，这样就可以避免使用 `double` 以及 `complex<T>`. 如果有系数较大的多项式需要计算且考察 NTT 时，一般会要求对结果取模。### 前置知识-原根在 NTT 算法中，原根是 FFT 中复数的替代品。~~（？又说一遍）~~要理解原根，首先我们需要群论中的若干定义。**循环群**如果一个群 $A$ 的所有元素 $x$ 都是 $a$ 的幂次，即$\forall x\in A, x=a^i(i\in \Z)$，则称 $A$ 是一个循环群，$a$ 是它的生成元。**阶**假设 $e$ 是某个循环群的单位元，则若 $a^p=1$，则 $p$ 的最小值即为 $a$ 的阶，记作 $Ord(a)$.**原根**原根的一般定义是：对于群 $G$, $\exist g\in G$, $Ord(g)=|G|$，则 $g$ 是 $G$ 的原根。现在有一个以加法取模为运算，元素为整数的群，容易知道这是一个循环群，单位元是1. 我们约定，如果这样的一个群的模数是 $p$，则其所在的群是 $G_p$.那么如果我们的问题是这样：求多项式系数，同时多项式系数对一个模数 $p$ 取余，显然系数构成一个群 $G_p$. 设 $n=|G|$，容易知道 $g^{p-1}=1$, 则不妨令 $g_n=g^{\frac{p-1}{n}}$, 有 $g_n^n=1$.从这里我们就看出，$g_n$ 和 FFT 中的 $w_n$ 是有一一对应关系的，所以我们只需要将 FFT 的点值取值修改为 $g_n^0,g_n^1,...g_n^{n-1}$ 即可。至于原根如何求出，我们可以找一个 $p-1$ 的质因子 $q$, 则 $g$ 为原根 $\lrArr$ $g^{\frac{p-1}{q}}\neq 1$ （由欧拉定理可证），将 $p-1$ 的质因子逐个找出再判断一下即可。通常题目会要求 $p=119×2^{23}+1=998244353,\ g=3$.> 据说，因为大多数NTT题目都会取更方便造数据的998244353为模数，这就导致很多题一看模数就知道这题是要做NTT。所以后来许多和NTT无关甚至完全不需要取模的题目也会加上一句“对998244353取模”。理解粗浅，还是老老实实看模板吧。<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// op = 1 ? DFT : IDFT</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> F[maxn], G[maxn];</span><br><span class="line"><span class="keyword">int</span> r[maxn];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fpow</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p) &#123;</span><br><span class="line">        <span class="keyword">if</span>(p &amp; <span class="number">1</span>) ans = (ans * a) % mod;</span><br><span class="line">        a = (a * a) % mod;</span><br><span class="line">        p &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ntt</span><span class="params">(<span class="keyword">int</span> f[], <span class="keyword">int</span> n, <span class="keyword">int</span> op)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!n) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; r[i]) <span class="built_in">swap</span>(f[i], f[r[i]]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> mid = <span class="number">1</span>; mid &lt; n; mid &lt;&lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> wn = <span class="built_in">fpow</span>(op == <span class="number">1</span> ? <span class="number">3</span> : <span class="number">332748118</span>, (mod - <span class="number">1</span>) / (mid &lt;&lt; <span class="number">1</span>));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j += (mid &lt;&lt; <span class="number">1</span>)) &#123;</span><br><span class="line">            <span class="keyword">int</span> w = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; mid; ++k, w = w * wn % mod) &#123;</span><br><span class="line">                <span class="keyword">int</span> x = f[j + k], y = w * f[j + k + mid] % mod;</span><br><span class="line">                f[j + k] = (x + y) % mod;</span><br><span class="line">                f[j + k + mid] = ((x - y) % mod + mod) % mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;F[i]);</span><br><span class="line">        F[i] = (F[i] + mod) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        G[i] = (G[i] + mod) % mod;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;G[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    m += n, n = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n &lt;= m) n &lt;&lt;= <span class="number">1</span>, cnt++; <span class="comment">// 补足系数，保证是2的幂次</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) r[i] = (r[i &gt;&gt; <span class="number">1</span>] &gt;&gt; <span class="number">1</span>) | ((i &amp; <span class="number">1</span>) &lt;&lt; (cnt - <span class="number">1</span>));</span><br><span class="line">    <span class="comment">// DFT</span></span><br><span class="line">    <span class="built_in">ntt</span>(F, n, <span class="number">1</span>), <span class="built_in">ntt</span>(G, n, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) F[i] = (F[i] * G[i]) % mod;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IDFT</span></span><br><span class="line">    <span class="built_in">ntt</span>(F, n, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">int</span> inv = <span class="built_in">fpow</span>(n, mod - <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld &quot;</span>, (F[i] * inv) % mod);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">打死不学数学FLAG系列...</summary>
    
    
    
    <category term="知识点" scheme="https://eykenis.github.io/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="FFT" scheme="https://eykenis.github.io/tags/FFT/"/>
    
    <category term="NTT" scheme="https://eykenis.github.io/tags/NTT/"/>
    
    <category term="数学" scheme="https://eykenis.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>2021ICPC济南记</title>
    <link href="https://eykenis.github.io/2021/11/17/2021ICPC%E6%B5%8E%E5%8D%97%E8%AE%B0/"/>
    <id>https://eykenis.github.io/2021/11/17/2021ICPC%E6%B5%8E%E5%8D%97%E8%AE%B0/</id>
    <published>2021-11-17T03:12:06.000Z</published>
    <updated>2021-12-05T04:31:32.991Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2021-11-14-济南打铁…"><a href="#2021-11-14-济南打铁…" class="headerlink" title="2021.11.14 济南打铁…"></a>2021.11.14 济南打铁…</h2><p>抛开题目本身严重出锅的问题，也是因为自己签到慢的一批还乱WA而导致签到就能拿的铜牌不翼而飞…</p><p>对不起，以后再也不要让本蒟蒻来做签到了qwq（CF签到我2分钟一个，区域赛签到我两小时调不出，真的绝绝子）</p><p>队友死磕D无果，G有思路但时间不够+赛后发现离正解也差得远，C越想越糊，其余题开不动。</p><p>就这样本队第一次出征打铁了。</p><p>感觉在区域赛这方面自己还是一片空白，目前的进度只是学会了很多板子和CF做一做1800以下的题而已。而意识到这些之后，上海站也只剩下十来天了。。。看来得寄希望于明年了。（废物JBer叹气）</p><p>感觉自己是真的废物。。。废到不敢吱声那种。</p><p>以后我就是双铁战神了！（十天以后三铁战神flag）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2021-11-14-济南打铁…&quot;&gt;&lt;a href=&quot;#2021-11-14-济南打铁…&quot; class=&quot;headerlink&quot; title=&quot;2021.11.14 济南打铁…&quot;&gt;&lt;/a&gt;2021.11.14 济南打铁…&lt;/h2&gt;&lt;p&gt;抛开题目本身严重出锅的问题，</summary>
      
    
    
    
    <category term="随笔" scheme="https://eykenis.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>Codeforces Round 371 Div. 1</title>
    <link href="https://eykenis.github.io/2021/11/11/Codeforces-Round-371-Div-1/"/>
    <id>https://eykenis.github.io/2021/11/11/Codeforces-Round-371-Div-1/</id>
    <published>2021-11-11T12:57:16.000Z</published>
    <updated>2021-11-12T02:06:25.076Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Sonya-and-Queries"><a href="#A-Sonya-and-Queries" class="headerlink" title="A. Sonya and Queries"></a>A. Sonya and Queries</h1><p>由于默认补足前导0，而且必须从低到高匹配，可以直接使用map.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mp;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="keyword">char</span> op;</span><br><span class="line">        <span class="keyword">int</span> num;</span><br><span class="line">        cin &gt;&gt; op &gt;&gt; num;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="string">&#x27;?&#x27;</span>) &#123;</span><br><span class="line">            cout &lt;&lt; mp[num] &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; num; i *= <span class="number">10</span>) &#123;</span><br><span class="line">            res += (num &amp; <span class="number">1</span>) * i;</span><br><span class="line">            num /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="string">&#x27;+&#x27;</span>) mp[res]++;</span><br><span class="line">        <span class="keyword">else</span> mp[res]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Searching-Rectangles"><a href="#B-Searching-Rectangles" class="headerlink" title="B. Searching Rectangles"></a>B. Searching Rectangles</h1><p>一道有点毒瘤的二分交互题。</p><p>由于两个矩形不相交，一定存在一条竖线/横线使得两个矩形分别在线的两侧，通过两次二分找到一条符合条件的线即可。</p><p>找到分割线后，分别在两个区域内询问出一个矩形的上下左右边界，求各个边界也用二分即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">2</span>][<span class="number">4</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x1, <span class="keyword">int</span> y1, <span class="keyword">int</span> x2, <span class="keyword">int</span> y2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;? %d %d %d %d\n&quot;</span>, x1, y1, x2, y2);</span><br><span class="line">    <span class="built_in">fflush</span>(stdout);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;tmp);</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">while</span>(l + <span class="number">1</span> &lt; r) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        x = <span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, mid, n);</span><br><span class="line">        y = <span class="built_in">query</span>(mid + <span class="number">1</span>, <span class="number">1</span>, n, n);</span><br><span class="line">        <span class="keyword">if</span>(!x &amp;&amp; !y) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x &amp;&amp; !y) r = mid;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!x &amp;&amp; y) l = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x &amp;&amp; y) <span class="keyword">return</span> mid;</span><br><span class="line">    &#125;</span><br><span class="line">    x = <span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, l, n);</span><br><span class="line">    y = <span class="built_in">query</span>(r, <span class="number">1</span>, n, n);</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">1</span> &amp;&amp; y == <span class="number">1</span>) <span class="keyword">return</span> l;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ud</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">while</span>(l + <span class="number">1</span> &lt; r) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        x = <span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n, mid);</span><br><span class="line">        y = <span class="built_in">query</span>(<span class="number">1</span>, mid + <span class="number">1</span>, n, n);</span><br><span class="line">        <span class="keyword">if</span>(!x &amp;&amp; !y) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x &amp;&amp; !y) r = mid;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!x &amp;&amp; y) l = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x &amp;&amp; y) <span class="keyword">return</span> mid;</span><br><span class="line">    &#125;</span><br><span class="line">    x = <span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n, l);</span><br><span class="line">    y = <span class="built_in">query</span>(<span class="number">1</span>, r, n, n);</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">1</span> &amp;&amp; y == <span class="number">1</span>) <span class="keyword">return</span> l;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">queryRec</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> x1, <span class="keyword">int</span> y1, <span class="keyword">int</span> x2, <span class="keyword">int</span> y2)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//upper_bound</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="comment">// right</span></span><br><span class="line">    <span class="keyword">int</span> l = x1, r = x2;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        x = <span class="built_in">query</span>(x1, y1, mid, y2);</span><br><span class="line">        <span class="keyword">if</span>(x) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans[id][<span class="number">2</span>] = l;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// left</span></span><br><span class="line">    l = x1, r = x2;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = ((l + r) &amp; <span class="number">1</span>) ? ((l + r) &gt;&gt; <span class="number">1</span>) + <span class="number">1</span> : ((l + r) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        x = <span class="built_in">query</span>(mid, y1, x2, y2);</span><br><span class="line">        <span class="keyword">if</span>(x) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans[id][<span class="number">0</span>] = r;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// up</span></span><br><span class="line">    l = y1, r = y2;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        x = <span class="built_in">query</span>(x1, y1, x2, mid);</span><br><span class="line">        <span class="keyword">if</span>(x) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans[id][<span class="number">3</span>] = l;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// down</span></span><br><span class="line">    l = y1, r = y2;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = ((l + r) &amp; <span class="number">1</span>) ? ((l + r) &gt;&gt; <span class="number">1</span>) + <span class="number">1</span> : ((l + r) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        x = <span class="built_in">query</span>(x1, mid, x2, y2);</span><br><span class="line">        <span class="keyword">if</span>(x) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans[id][<span class="number">1</span>] = r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">int</span> u = <span class="built_in">lr</span>();</span><br><span class="line">    <span class="keyword">if</span>(u) &#123;</span><br><span class="line">        <span class="built_in">queryRec</span>(<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, u, n);</span><br><span class="line">        <span class="built_in">queryRec</span>(<span class="number">1</span>, u + <span class="number">1</span>, <span class="number">1</span>, n, n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        u = <span class="built_in">ud</span>();</span><br><span class="line">        <span class="built_in">queryRec</span>(<span class="number">0</span>, <span class="number">1</span>, u + <span class="number">1</span>, n, n);</span><br><span class="line">        <span class="built_in">queryRec</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, n, u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;!&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">1</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">3</span>; ++j) <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, ans[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fflush</span>(stdout);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Sonya-and-Problem-Without-a-Legend"><a href="#C-Sonya-and-Problem-Without-a-Legend" class="headerlink" title="C. Sonya and Problem Without a Legend"></a>C. Sonya and Problem Without a Legend</h1><p>要严格单调增，不好求。尝试让每第 $i$ 个元素减掉 $i$, 即加上一个等差数列 $(1, 1)$，减出来的数列求一下其非严格单调递增的结果，再还原就能得到一个严格单调递增的数组。且容易知道减掉后答案是不会变的。</p><p>怎么求这个非严格单调递增数列呢？为了让答案尽可能小，第 $i$ 个元素要么不变（已经符合严格不下降的条件），要么就变成第 $i-1$ 个元素。</p><p>这是因为：如果变得比第 $i-1$ 个元素更大的话，不仅当前答案会增加，对之后的修改也有弊无利。故可以推出：最终的数组中所有元素的值都是原数组的某一个元素值。</p><p>再看 $n\leq 3000$, 考虑 $O(n^2)$ 的动态规划。设 $dp[i][j]$ 表示修改完成前 $i$ 个数，且第 $i$ 个数变成了原数组<strong>第 $j$ 大</strong>的数的答案。</p><p>那么</p><script type="math/tex; mode=display">dp[i][j]=min(dp[i-1][m]) + |a[i]-b[j]|,1 \leq m \leq j</script><p>其中 $b$ 是原数组排序后的数组。</p><p>这个式子是 $O(n^3)$ 的。但其实可以用滚动数组优化掉对 $m$ 的枚举, 伪代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">for i from 1 to n</span><br><span class="line">int res = INF</span><br><span class="line">for j from 1 to n</span><br><span class="line">res = min(res, dp[i - 1][j])</span><br><span class="line">dp[i][j] = res + abs(a[i] - b[j])</span><br></pre></td></tr></table></figure><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3005</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">1e18</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], b[maxn];</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i], a[i] -= i, b[i] = a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) dp[i][j] = inf;</span><br><span class="line">    <span class="built_in">sort</span>(b + <span class="number">1</span>, b + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) dp[<span class="number">1</span>][i] = <span class="built_in">abs</span>(a[<span class="number">1</span>] - b[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> res = inf;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">            res = <span class="built_in">min</span>(dp[i - <span class="number">1</span>][j], res);</span><br><span class="line">            dp[i][j] = res + <span class="built_in">abs</span>(a[i] - b[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = inf;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, dp[n][i]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">补ABC题</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 115 (Rated for Div. 2)</title>
    <link href="https://eykenis.github.io/2021/11/03/Educational-Codeforces-Round-115-Rated-for-Div-2/"/>
    <id>https://eykenis.github.io/2021/11/03/Educational-Codeforces-Round-115-Rated-for-Div-2/</id>
    <published>2021-11-03T13:28:09.000Z</published>
    <updated>2021-11-12T02:07:23.932Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-Delete-Two-Elements"><a href="#C-Delete-Two-Elements" class="headerlink" title="C. Delete Two Elements"></a>C. Delete Two Elements</h1><p><strong>题意</strong></p><p>删去两个数，使原数组平均值不变，问有多少种不同的删法</p><p><strong>分析</strong></p><p>先算出平均数，再哈希一下求组合数即可。</p><p>$ans+=\sum_{i=1}^{n}num[a[i]]<em>num[2</em>avr-a[i]],a[i]\neq avr \&amp;\&amp; a[i]&lt;avr,$</p><p>$ans+=C_{num[avr]}^{2}$.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :deb.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-10-12</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line">map&lt;<span class="keyword">double</span>,<span class="keyword">int</span>&gt; mp;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">int</span> rhs;</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">        fors (i, <span class="number">1</span>, n) &#123; cin &gt;&gt; rhs; mp[rhs]++; sum += rhs;&#125;</span><br><span class="line">        sum /= n;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;x:mp)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x.first &gt; sum) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(x.first == sum) ans += (x.second * (x.second - <span class="number">1</span>)) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span> ans += x.second * (mp[<span class="number">2</span> * sum - x.first]);</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        mp.<span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-Training-Session"><a href="#D-Training-Session" class="headerlink" title="D. Training Session"></a>D. Training Session</h1><p><strong>分析</strong></p><p>要求的事件为：3个标题都不同 或 3个标题难度都不同</p><p>考虑对立事件：3个有的标题相同 且 3个有的难度相同</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :deb.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-10-12</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> ab[maxn], ba[maxn];</span><br><span class="line"><span class="keyword">int</span> a[maxn], b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        fors(i , <span class="number">1</span>, n) cin &gt;&gt; a[i] &gt;&gt; b[i], ab[a[i]]++, ba[b[i]]++;</span><br><span class="line">        <span class="keyword">int</span> ans = n * (n - <span class="number">1</span>) * (n - <span class="number">2</span>) / <span class="number">6</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) &#123;</span><br><span class="line">            <span class="keyword">int</span> res = ab[a[i]] - <span class="number">1</span>;</span><br><span class="line">            res *= ba[b[i]] - <span class="number">1</span>;</span><br><span class="line">            ans -= res;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) ab[a[i]]--, ba[b[i]]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">平凡解题报告</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>展望</title>
    <link href="https://eykenis.github.io/2021/10/25/Where-s-the-way/"/>
    <id>https://eykenis.github.io/2021/10/25/Where-s-the-way/</id>
    <published>2021-10-25T03:12:27.000Z</published>
    <updated>2021-10-25T03:11:54.421Z</updated>
    
    <content type="html"><![CDATA[<p>最近真的有点力不从心。</p><p>总感觉自己有时候思路顺畅，有时候又感觉没有动力，思维停滞。</p><p>越是往前走越见不到光明，反而越是发现这不是一条好走的路。果然热爱算法竞赛和热爱游戏的性质是不同的吧。</p><p>不知道怎么去处理人际关系，找不到满意的队友一起打比赛，再加上社恐且不会说话，说不定无意之中就会让一些人不高兴。</p><p>（UPD：还是顺利组队了吧）</p><h2 id="竞赛"><a href="#竞赛" class="headerlink" title="竞赛"></a>竞赛</h2><p>大一的队长暑假集训就开始失联了，或许他是觉得算法竞赛这条路实在不适合自己吧。和另外一个队友坚持到暑假结束。但其实暑假的时候我也没认真训练，总是沉迷游戏，直接导致一年来进展极其缓慢。即使在学校也很少有沉下心来刷题的时候，或许真该少呆在寝室里，多出去走走，多去外面学习。</p><p>想争取个OI爷来但是好像无果，一个巨巨貌似很忙而且没想好要不要打竞赛，看他好像也在前端折腾的比较多，我还是不要打扰比较好。（不会被学弟讨厌了吧）</p><p>貌似情况越来越糟糕了……. </p><p>单挑CCPC网络赛，签完两题挂机。洛谷上面到现在还不能稳定出蓝题（甚至绿题也可能会被卡），CF上了蓝名之后没有进步，而还有一个多月就要到年底了。。。核心课也学不会（电子电路有点无语），专业技能也几乎为0…</p><p>竞赛这条道越走越觉得不好走，但还是相信柳暗花明，只不过需要我对自己做一些改良…我自己的学习状态还是很糟糕的。</p><h2 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h2><p>规划是得照着目标来的。我真的真的真的很想进入游戏行业，看了一圈各大厂的校招，适合的大概是各大厂的程序技术类。。（图形渲染、引擎研发、技术美术之类）</p><p>所以我得往图形学方面靠，多多动手。</p><p>但这些怎么说呢，现阶段专业课还没学明白，而且图形学专业敲门砖要好一点，还是得读研，再多沉淀几年技术。。（大二还基本没开始，要是直接就业我有点慌了）</p><p>要是得读研的话，那就大概率必须去保研了。保研，大一的成绩在16%，勉强在20%以内，但是除了本校要保个好研究生够呛……图形学的实验室大概是，，浙大、中科大、清华、北航山大国科大这些比较强？。。。也不太懂。总之现在我有个当务之急就是把综测成绩拉起来，绩点拉起来，好好学，学的知识p用没有你也认了，就当是高考学的那些东西。</p><p>所以说保研必须得拉满绩点，有点艰难。大一已经有点失败了，大二读了一个多月感觉也有点糟糕。可是大三结束就要排名了，时间不多了呀。</p><p>所以说真的不能再玩了，真的不能再玩了， 真的不能再玩了！！！！！</p><p>其次是竞赛方面，要做好的话还得大下功夫。停止玩游戏吧。假期余额多用在竞赛上。有人学了一年还是个蓝名，我不说是谁。有人学了一年打练习赛只会签到，我不说是谁。</p><p>再落实到具体行动上，就是平时多严格要求自己，少呆在寝室，好好锻炼，尽量住自习的地方。。。</p><p>每周设定定量的任务去完成，每节课上完一定搞懂。</p><p>笔记本专门记录每天的学习情况。</p><p>好好吃饭，不要熬夜，不要贪早床，睡够6小时，睡午觉，不超过1小时。</p>]]></content>
    
    
    <summary type="html">这下改过自新了</summary>
    
    
    
    <category term="牢骚" scheme="https://eykenis.github.io/categories/%E7%89%A2%E9%AA%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>Codeforces Round 747 (Div. 2)</title>
    <link href="https://eykenis.github.io/2021/10/09/Codeforces-Round-747-Div-2/"/>
    <id>https://eykenis.github.io/2021/10/09/Codeforces-Round-747-Div-2/</id>
    <published>2021-10-09T01:15:13.000Z</published>
    <updated>2021-11-03T13:26:52.244Z</updated>
    
    <content type="html"><![CDATA[<p>上蓝了！</p><h1 id="A-Consecutive-Sum-Riddle"><a href="#A-Consecutive-Sum-Riddle" class="headerlink" title="A. Consecutive Sum Riddle"></a>A. Consecutive Sum Riddle</h1><p><strong>题意</strong></p><p>给一个$n$，你需要构造一个整数区间$[L,R]$,其和等于$n$<br><strong>分析</strong></p><p>取$[-n+1,n]$即可。</p><h1 id="B-Special-Numbers"><a href="#B-Special-Numbers" class="headerlink" title="B. Special Numbers"></a>B. Special Numbers</h1><p><strong>题意</strong></p><p>给出一个 $n$ , 另一个数 $m$ 如果可以表示成 $n$ 的不同幂次之和，则称 $m$ 是 special 的。现在给出 $n$， 将所有 special 的数升序排序，问第 $k$ 个数是多少。</p><p><strong>分析</strong></p><p>假如一个数是 $n^0+n^1+n^4$ ， 我们不妨用二进制表示，转化为 $10011_{(2)}$ ，也就是说现在给了一个二进制的数，但是其每个位的权值要乘以 $n$. 那么第 $k$ 个数表示成二进制自然就是 $k_{(2)}$ 本身了，模拟快速幂求即可。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="keyword">int</span> n, k;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(k) &#123;</span><br><span class="line">            <span class="keyword">if</span>(k &amp; <span class="number">1</span>) &#123;</span><br><span class="line">                ans = (ans + x) % mod;</span><br><span class="line">            &#125;</span><br><span class="line">            x = (x * n) % mod;</span><br><span class="line">            k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Make-Them-Equal"><a href="#C-Make-Them-Equal" class="headerlink" title="C. Make Them Equal"></a>C. Make Them Equal</h1><p><strong>题意</strong></p><p>给一串字符串，你要通过一些操作把它的所有字符全部变成 $c$：</p><p>选择一个数字 $x, 1\leq x\leq n$. 字符串中所有下标 $i$ 中 $i\ mod\ x \neq 0$ 的下标都将被替换为 $c$.</p><p><strong>分析</strong></p><p>首先贪心考虑，如果 $x$ 取 $n$，那么 $[1,n-1]$ 必定全部都可以替换，接下来再取个 $n-1$，把 $n$ 替换即可。故不管怎样，答案最多为2.</p><p>所以只需要考虑答案为1的情况了。这里我们可以直接暴力统计所有不等于 $c$ 的下标的因数，如果不同因数的个数小于 $n$ ，说明一定可以找到一个 $x$ 使得所有字符为 $c$.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> v[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        string s; <span class="keyword">char</span> c;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        s += <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">        string tmp;</span><br><span class="line">        cin &gt;&gt; c;</span><br><span class="line">        cin &gt;&gt; tmp;</span><br><span class="line">        s += tmp;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; pos;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) v[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="keyword">if</span>(s[i] != c) &#123;</span><br><span class="line">            flag = <span class="number">0</span>; pos.<span class="built_in">pb</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : pos) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!v[i]) v[i] = <span class="number">1</span>, cnt++;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j * j &lt;= i; ++j) &#123;</span><br><span class="line">                <span class="keyword">if</span>(i % j == <span class="number">0</span> &amp;&amp; !v[j]) v[j] = <span class="number">1</span>, cnt++;</span><br><span class="line">                <span class="keyword">if</span>(i % j == <span class="number">0</span> &amp;&amp; !v[i / j]) v[i / j] = <span class="number">1</span>, cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (cnt == n) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">            cout &lt;&lt; n &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; n - <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="keyword">if</span>(!v[i]) &#123;</span><br><span class="line">                cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-The-Number-of-Imposters"><a href="#D-The-Number-of-Imposters" class="headerlink" title="D. The Number of Imposters"></a>D. The Number of Imposters</h1><p><strong>题意</strong></p><p>有一张 $n$ 个节点的图，每条边都是单向边 $(i,j,c)$ 表示第 $i$ 个人说第 $j$ 个人是个说谎的人/说实话的人。且如果一个人是说谎的人，那他说的一定是假，否则一定是真。</p><p>问这张图最多有几个说实话的人。</p><p><strong>分析</strong></p><p>单向图其实可以直接转化为无向图，这是等价的。 $a$ 说 $b$ 是假的，其实和 $b$ 说 $a$ 假是一样的，可以列真值表证明。</p><p>而且，只要连通图中有一个人的真假确定了，其他人的真假一定也确定了。</p><p>所以，转化为无向图之后再记忆化搜索就可以了，对每个连通块进行 dfs ，$dp[i][0]$ 表示第 $i$ 人说谎的情况下他和他的子节点中说实话的人有多少；$dp[i][1]$ 表示 $i$ 说实话的情况下的答案。</p><p>注意矛盾的情况，搜索过程中每个节点要保存自己的当前真假情况，这样在子节点指回祖先节点时判断一下矛不矛盾就可以了。</p><p>所以对每个连通块搜索的根节点，假设其为实话或者谎话，分别 dfs 两次，取最大值即可。</p><hr><p>其实也可以写的更简单的，但是昨天越写越奇怪，有点没稳住，思路太乱了。</p><p>不仅思路较为冗杂，代码也特别丑qwq</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][<span class="number">2</span>]; <span class="comment">// i号节点说谎/不说谎的答案</span></span><br><span class="line">vector&lt;pii&gt; e[maxn];</span><br><span class="line"><span class="keyword">bool</span> v[maxn];</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> fa[maxn];</span><br><span class="line"><span class="keyword">int</span> st[maxn]; <span class="comment">// 当前的status 1说谎，2不说谎</span></span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; tmp;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> l)</span> </span>&#123; <span class="comment">// l:0说谎，1不说谎</span></span><br><span class="line">    tmp.<span class="built_in">pb</span>(i);</span><br><span class="line">    st[i] = l + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;x : e[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(st[x.first]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(l == <span class="number">1</span> &amp;&amp; x.second == <span class="number">0</span> &amp;&amp; st[x.first] == <span class="number">2</span>)&#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(l == <span class="number">1</span> &amp;&amp; x.second == <span class="number">1</span> &amp;&amp; st[x.first] == <span class="number">1</span>) &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(l == <span class="number">0</span> &amp;&amp; x.second == <span class="number">1</span> &amp;&amp; st[x.first] == <span class="number">2</span>) &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(l == <span class="number">0</span> &amp;&amp; x.second == <span class="number">0</span> &amp;&amp; st[x.first] == <span class="number">1</span>) &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(l == <span class="number">1</span> &amp;&amp; x.second == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">dfs</span>(x.first, <span class="number">0</span>);</span><br><span class="line">            dp[i][<span class="number">1</span>] += dp[x.first][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(l == <span class="number">1</span> &amp;&amp; x.second == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">dfs</span>(x.first, <span class="number">1</span>);</span><br><span class="line">            dp[i][<span class="number">1</span>] += dp[x.first][<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(l == <span class="number">0</span> &amp;&amp; x.second == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">dfs</span>(x.first, <span class="number">1</span>);</span><br><span class="line">            dp[i][<span class="number">0</span>] += dp[x.first][<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">dfs</span>(x.first, <span class="number">0</span>);</span><br><span class="line">            dp[i][<span class="number">0</span>] += dp[x.first][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">        flag = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="number">0</span>, dp[i][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">            fa[i] = i;</span><br><span class="line">            v[i] = <span class="number">0</span>;</span><br><span class="line">            st[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> l, r; string s;</span><br><span class="line">        <span class="keyword">while</span>(m--) &#123;</span><br><span class="line">            cin &gt;&gt; l &gt;&gt; r &gt;&gt; s;</span><br><span class="line">            <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="string">&#x27;i&#x27;</span>) &#123;</span><br><span class="line">                e[l].<span class="built_in">pb</span>(&#123;r, <span class="number">0</span>&#125;);</span><br><span class="line">                e[r].<span class="built_in">pb</span>(&#123;l, <span class="number">0</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                e[l].<span class="built_in">pb</span>(&#123;r, <span class="number">1</span>&#125;);</span><br><span class="line">                e[r].<span class="built_in">pb</span>(&#123;l, <span class="number">1</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!st[i]) &#123;</span><br><span class="line">                tmp.<span class="built_in">clear</span>();</span><br><span class="line">                <span class="built_in">dfs</span>(i, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;x : tmp) st[x] = <span class="number">0</span>;</span><br><span class="line">                <span class="built_in">dfs</span>(i, <span class="number">1</span>);</span><br><span class="line">                ans += <span class="built_in">max</span>(dp[i][<span class="number">0</span>], dp[i][<span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag) cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) e[i].<span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="E1-Rubik’s-Cube-Coloring-easy-version"><a href="#E1-Rubik’s-Cube-Coloring-easy-version" class="headerlink" title="E1. Rubik’s Cube Coloring (easy version)"></a>E1. Rubik’s Cube Coloring (easy version)</h1><p>这种E1还是放Div. 3去吧，能当A做了，我不好说。</p><p>属于是送经验了（</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(y) &#123;</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) &#123;</span><br><span class="line">            ans = (ans * x) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        x = (x * x) % mod;</span><br><span class="line">        y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    t = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="keyword">int</span> k;</span><br><span class="line">        cin &gt;&gt; k;</span><br><span class="line">        <span class="keyword">int</span> p = (<span class="number">1LL</span> &lt;&lt; k) - <span class="number">1LL</span>;</span><br><span class="line">        cout &lt;&lt; (<span class="built_in">fpow</span>(<span class="number">4</span>, p - <span class="number">1LL</span>) * <span class="number">6LL</span>) % mod &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">蓝名力</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>luogu</title>
    <link href="https://eykenis.github.io/2021/09/23/luogu/"/>
    <id>https://eykenis.github.io/2021/09/23/luogu/</id>
    <published>2021-09-23T11:51:33.000Z</published>
    <updated>2022-01-19T04:29:41.549Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="9-23"><a href="#9-23" class="headerlink" title="9.23"></a>9.23</h1><h2 id="P2032-扫描"><a href="#P2032-扫描" class="headerlink" title="P2032 扫描"></a><a href="https://www.luogu.com.cn/problem/P2032">P2032 扫描</a></h2><p>单调队列求滑动窗口最大值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">deque&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt; q;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pu</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i] &gt;= q.<span class="built_in">front</span>().first)&#123;</span><br><span class="line">        q.<span class="built_in">clear</span>();</span><br><span class="line">        q.<span class="built_in">push_front</span>(&#123;a[i], i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(a[i] &gt;= q.<span class="built_in">back</span>().first) q.<span class="built_in">pop_back</span>();</span><br><span class="line">        q.<span class="built_in">push_back</span>(&#123;a[i], i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    q.<span class="built_in">push_front</span>(&#123;a[<span class="number">1</span>], <span class="number">1</span>&#125;);</span><br><span class="line">    fors(i, <span class="number">2</span>, k)&#123;</span><br><span class="line">        <span class="built_in">pu</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; q.<span class="built_in">front</span>().first &lt;&lt; endl;</span><br><span class="line">    fors(i, k + <span class="number">1</span>, n)&#123;</span><br><span class="line">        <span class="keyword">while</span>(q.<span class="built_in">front</span>().second &lt; <span class="number">1</span> - k + i)&#123;</span><br><span class="line">            q.<span class="built_in">pop_front</span>(); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">pu</span>(i);</span><br><span class="line">        cout &lt;&lt; q.<span class="built_in">front</span>().first &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1440-求m区间内的最小值"><a href="#P1440-求m区间内的最小值" class="headerlink" title="P1440 求m区间内的最小值"></a><a href="https://www.luogu.com.cn/problem/P1440#submit">P1440 求m区间内的最小值</a></h2><p>单调队列の双倍经验</p><p>注意要卡常（不开LL，用快读，printf）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">deque&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt; q;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pu</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        q.<span class="built_in">push_front</span>(&#123;a[i], i&#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a[i] &lt;= q.<span class="built_in">front</span>().first)&#123;</span><br><span class="line">        q.<span class="built_in">clear</span>();</span><br><span class="line">        q.<span class="built_in">push_front</span>(&#123;a[i], i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(a[i] &lt;= q.<span class="built_in">back</span>().first) q.<span class="built_in">pop_back</span>();</span><br><span class="line">        q.<span class="built_in">push_back</span>(&#123;a[i], i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> data = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(ch &lt; <span class="string">&#x27;0&#x27;</span>||ch &gt; <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">            f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(ch &gt;= <span class="string">&#x27;0&#x27;</span>&amp;&amp;ch &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        data = (data&lt;&lt;<span class="number">3</span>) + (data&lt;&lt;<span class="number">1</span>) + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * data; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// DDLC_ESCAPE_PLAN_FAILED;</span></span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    n = <span class="built_in">rd</span>(), k = <span class="built_in">rd</span>();</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        a[i] = <span class="built_in">rd</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">    q.<span class="built_in">push_front</span>(&#123;a[<span class="number">1</span>], <span class="number">1</span>&#125;);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, q.<span class="built_in">front</span>().first);</span><br><span class="line">    fors(i, <span class="number">2</span>, n - <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!q.<span class="built_in">empty</span>() &amp;&amp; q.<span class="built_in">front</span>().second &lt; <span class="number">1</span> - k + i)&#123;</span><br><span class="line">            q.<span class="built_in">pop_front</span>(); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">pu</span>(i);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, q.<span class="built_in">front</span>().first);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1886-滑动窗口"><a href="#P1886-滑动窗口" class="headerlink" title="P1886 滑动窗口"></a><a href="https://www.luogu.com.cn/problem/P1886">P1886 滑动窗口</a></h2><p>三倍经验，滑动窗口也可以写得更简洁。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line">deque&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt; mx, mn;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; x, y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!mx.<span class="built_in">empty</span>() &amp;&amp; a[i] &gt;= mx.<span class="built_in">back</span>().first) mx.<span class="built_in">pop_back</span>();</span><br><span class="line">        <span class="keyword">while</span>(!mx.<span class="built_in">empty</span>() &amp;&amp; mx.<span class="built_in">front</span>().second &lt; i - k + <span class="number">1</span>) mx.<span class="built_in">pop_front</span>();</span><br><span class="line">        mx.<span class="built_in">push_back</span>(&#123;a[i], i&#125;);</span><br><span class="line">        <span class="keyword">while</span>(!mn.<span class="built_in">empty</span>() &amp;&amp; a[i] &lt;= mn.<span class="built_in">back</span>().first) mn.<span class="built_in">pop_back</span>();</span><br><span class="line">        <span class="keyword">while</span>(!mn.<span class="built_in">empty</span>() &amp;&amp; mn.<span class="built_in">front</span>().second &lt; i - k + <span class="number">1</span>) mn.<span class="built_in">pop_front</span>();</span><br><span class="line">        mn.<span class="built_in">push_back</span>(&#123;a[i], i&#125;);</span><br><span class="line">        <span class="keyword">if</span>(i &gt;= k) x.<span class="built_in">push_back</span>(mx.<span class="built_in">front</span>().first), y.<span class="built_in">push_back</span>(mn.<span class="built_in">front</span>().first);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x.<span class="built_in">size</span>(); ++i) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, y[i]); <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; y.<span class="built_in">size</span>(); ++i) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, x[i]); <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3143-USACO16OPEN-Diamond-Collector-S"><a href="#P3143-USACO16OPEN-Diamond-Collector-S" class="headerlink" title="P3143 [USACO16OPEN]Diamond Collector S"></a><a href="https://www.luogu.com.cn/problem/P3143">P3143 [USACO16OPEN]Diamond Collector S</a></h2><p>双指针，注意题目要求两个区间不能重叠，故要左右分别枚举，再遍历更新答案。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">50005</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> L[maxn] = &#123;<span class="number">0</span>&#125;, R[maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">sort</span>(a, a + n);</span><br><span class="line">    <span class="keyword">int</span> r = <span class="number">0</span>, l = n - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        <span class="keyword">while</span>(r &lt; n &amp;&amp; a[r] - a[i] &lt;= k) r++;</span><br><span class="line">        R[i] = r - i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i)&#123;</span><br><span class="line">        <span class="keyword">while</span>(l &gt;= <span class="number">0</span> &amp;&amp; a[i] - a[l] &lt;= k) l--;</span><br><span class="line">        L[i] = i - l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>, lmax = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        ans = <span class="built_in">max</span>(ans, lmax + R[i]);</span><br><span class="line">        lmax = <span class="built_in">max</span>(L[i], lmax);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="9-25"><a href="#9-25" class="headerlink" title="9.25"></a>9.25</h1><p>打了网络赛才发现，自己的数学就是一坨⑩，让人完全看不下去。学！</p><h2 id="P1143-进制转换"><a href="#P1143-进制转换" class="headerlink" title="P1143 进制转换"></a><a href="https://www.luogu.com.cn/problem/P1143">P1143 进制转换</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;    </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    t = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="keyword">int</span> to;</span><br><span class="line">        cin &gt;&gt; to;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line">                ans = ans * n + s[i] - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> ans = ans * n + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        string fin;</span><br><span class="line">        <span class="keyword">while</span>(ans)&#123;</span><br><span class="line">            <span class="keyword">int</span> res = ans % to;</span><br><span class="line">            <span class="keyword">if</span>(res &gt;= <span class="number">10</span>) res = res - <span class="number">10</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">            <span class="keyword">else</span> res += <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            fin += res;</span><br><span class="line">            ans /= to;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">reverse</span>(fin.<span class="built_in">begin</span>(), fin.<span class="built_in">end</span>());</span><br><span class="line">        cout &lt;&lt; fin &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1469-找筷子"><a href="#P1469-找筷子" class="headerlink" title="P1469 找筷子"></a><a href="https://www.luogu.com.cn/problem/P1469">P1469 找筷子</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">int</span> x, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n--) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x), ans ^= x;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1100-高低位交换"><a href="#P1100-高低位交换" class="headerlink" title="P1100 高低位交换"></a><a href="https://www.luogu.com.cn/problem/P1100">P1100 高低位交换</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> x;</span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    cout &lt;&lt; (x &lt;&lt; <span class="number">16</span>) + (x &gt;&gt; <span class="number">16</span>) &lt;&lt; endl; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1017-NOIP2000-提高组-进制转换"><a href="#P1017-NOIP2000-提高组-进制转换" class="headerlink" title="P1017 [NOIP2000 提高组] 进制转换"></a><a href="https://www.luogu.com.cn/problem/P1017">P1017 [NOIP2000 提高组] 进制转换</a></h2><p>余数可能出现负数，将其加上进制数，将商减去进制数即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x, to;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;to);</span><br><span class="line">    string ans;</span><br><span class="line">    <span class="keyword">int</span> r = x;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        <span class="keyword">int</span> res = x % to;</span><br><span class="line">        <span class="keyword">if</span>(res &lt; <span class="number">0</span>) res -= to, x += to;</span><br><span class="line">        <span class="keyword">if</span>(res &gt;= <span class="number">10</span>) res = res - <span class="number">10</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> res = res + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ans += res;</span><br><span class="line">        x /= to;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">reverse</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d=%s(base%d)&quot;</span>, r, ans.<span class="built_in">c_str</span>(), to);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1866-编号-洛谷"><a href="#P1866-编号-洛谷" class="headerlink" title="P1866 编号 - 洛谷"></a><a href="https://www.luogu.com.cn/problem/P1866">P1866 编号 - 洛谷</a></h2><p>高中最简单的排列组合方法之一——优限法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">55</span>;</span><br><span class="line"><span class="keyword">int</span> m[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;N);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;m[i]);</span><br><span class="line">    <span class="built_in">sort</span>(m + <span class="number">1</span>, m + <span class="number">1</span> + N);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i)&#123;</span><br><span class="line">        ans = (ans * (m[i] - i + <span class="number">1</span>)) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2822-NOIP2016-提高组-组合数问题"><a href="#P2822-NOIP2016-提高组-组合数问题" class="headerlink" title="P2822 [NOIP2016 提高组] 组合数问题"></a><a href="https://www.luogu.com.cn/problem/P2822">P2822 [NOIP2016 提高组] 组合数问题</a></h2><p>二维前缀和</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> t, k;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2005</span>;</span><br><span class="line"><span class="keyword">int</span> c[maxn][maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> pre[maxn][maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prework</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    pre[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2000</span>; ++i)&#123;</span><br><span class="line">        c[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        pre[i][<span class="number">0</span>] = (<span class="number">1</span> % k == <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2000</span>; ++j)&#123;</span><br><span class="line">            c[i][j] = c[i - <span class="number">1</span>][j - <span class="number">1</span>] + c[i - <span class="number">1</span>][j];</span><br><span class="line">            c[i][j] %= k;</span><br><span class="line">            pre[i][j] = pre[i - <span class="number">1</span>][j] + pre[i][j - <span class="number">1</span>] - pre[i - <span class="number">1</span>][j - <span class="number">1</span>] + (j &lt;= i &amp;&amp; c[i][j] == <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; t &gt;&gt; k;</span><br><span class="line">    <span class="built_in">prework</span>();</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n, m;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">        <span class="keyword">if</span>(n &lt; m) m = n;</span><br><span class="line">        cout &lt;&lt; pre[n][m] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2789-直线交点数"><a href="#P2789-直线交点数" class="headerlink" title="P2789 直线交点数"></a><a href="https://www.luogu.com.cn/problem/P2789">P2789 直线交点数</a></h2><p>注意构造好的搜索方式</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">bool</span> f[<span class="number">100005</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!f[r]) f[r] = <span class="number">1</span>, ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> s = p; s; --s)&#123;</span><br><span class="line">        <span class="built_in">dfs</span>(p - s, r + (p - s) * s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">dfs</span>(n, <span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3913-车的攻击"><a href="#P3913-车的攻击" class="headerlink" title="P3913 车的攻击"></a><a href="https://www.luogu.com.cn/problem/P3913">P3913 车的攻击</a></h2><p>容斥</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line">unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">bool</span>&gt; r, c;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; ++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">        r[x] = <span class="number">1</span>, c[y] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; (r.<span class="built_in">size</span>() + c.<span class="built_in">size</span>()) * n - r.<span class="built_in">size</span>() * c.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2638-安全系统"><a href="#P2638-安全系统" class="headerlink" title="P2638 安全系统"></a><a href="https://www.luogu.com.cn/problem/P2638#submit">P2638 安全系统</a></h2><p>组合数学只会瞎搞</p><p>隔板法，请</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int unsigned long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, a, b;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">55</span>;</span><br><span class="line"><span class="keyword">int</span> c[maxn][maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prework</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    c[<span class="number">1</span>][<span class="number">0</span>] = c[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">50</span>; ++i)&#123;</span><br><span class="line">        c[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; ++j)&#123;</span><br><span class="line">            c[i][j] = c[i - <span class="number">1</span>][j - <span class="number">1</span>] + c[i - <span class="number">1</span>][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">prework</span>();</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= a; ++i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= b; ++j)&#123;</span><br><span class="line">            ans += c[n + i - <span class="number">1</span>][n - <span class="number">1</span>] * c[n + j - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="9-26"><a href="#9-26" class="headerlink" title="9.26"></a>9.26</h1><h2 id="P1029-NOIP2001-普及组-最大公约数和最小公倍数问题"><a href="#P1029-NOIP2001-普及组-最大公约数和最小公倍数问题" class="headerlink" title="P1029 [NOIP2001 普及组] 最大公约数和最小公倍数问题"></a><a href="https://www.luogu.com.cn/problem/P1029">P1029 [NOIP2001 普及组] 最大公约数和最小公倍数问题</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    <span class="comment">// 找x*y的因子</span></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> u = x * y;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= u; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(u % i) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> r1 = i, r2 = u / i;</span><br><span class="line">        <span class="keyword">int</span> p = __gcd(r1, r2);</span><br><span class="line">        <span class="keyword">if</span>(p != x || u / p != y) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(r1 == r2) ans++;</span><br><span class="line">        <span class="keyword">else</span> ans += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1072-NOIP2009-提高组-Hankson-的趣味题"><a href="#P1072-NOIP2009-提高组-Hankson-的趣味题" class="headerlink" title="P1072 [NOIP2009 提高组] Hankson 的趣味题"></a><a href="https://www.luogu.com.cn/problem/P1072">P1072 [NOIP2009 提高组] Hankson 的趣味题</a></h2><p>菜</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a0, a1, b0, b1;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;a0, &amp;a1, &amp;b0, &amp;b1);</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i * i &lt;= b1; ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b1 % i) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%a1==<span class="number">0</span>&amp;&amp;<span class="built_in">gcd</span>(i/a1,a0/a1)==<span class="number">1</span>&amp;&amp;<span class="built_in">gcd</span>(b1/b0,b1/i)==<span class="number">1</span>) ans++;</span><br><span class="line">            <span class="keyword">int</span> y = b1 / i;</span><br><span class="line">            <span class="keyword">if</span>(i == y) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(y%a1==<span class="number">0</span>&amp;&amp;<span class="built_in">gcd</span>(y/a1,a0/a1)==<span class="number">1</span>&amp;&amp;<span class="built_in">gcd</span>(b1/b0,b1/y)==<span class="number">1</span>) ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1908-逆序对"><a href="#P1908-逆序对" class="headerlink" title="P1908 逆序对"></a><a href="https://www.luogu.com.cn/problem/P1908">P1908 逆序对</a></h2><p>就多练</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> tmp[maxn];</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(r == l) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">merge</span>(l, mid), <span class="built_in">merge</span>(mid + <span class="number">1</span>, r);</span><br><span class="line">    <span class="keyword">int</span> p1 = l, p2 = mid + <span class="number">1</span>, p3 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p1 &lt;= mid || p2 &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span>((p1 &gt; mid) || (p2 &lt;= r &amp;&amp; a[p1] &gt; a[p2])) tmp[p3++] = a[p2++], ans += mid - p1 + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> tmp[p3++] = a[p1++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = l; i &lt;= r; ++i)&#123;</span><br><span class="line">        a[i] = tmp[i - l];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="built_in">merge</span>(<span class="number">1</span>, n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1966-NOIP2013-提高组-火柴排队"><a href="#P1966-NOIP2013-提高组-火柴排队" class="headerlink" title="P1966 [NOIP2013 提高组] 火柴排队"></a><a href="https://www.luogu.com.cn/problem/P1966#submit">P1966 [NOIP2013 提高组] 火柴排队</a></h2><p>先找出数学性质，知道可以让其中一组不动，另一组中每个火柴二分找到第一组中和自己最接近的高度的位置，然后按这个位置归并计数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e8</span> - <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> val, idx, midx;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node&amp; x)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> val &lt; x.val;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> ==(<span class="keyword">const</span> <span class="keyword">int</span>&amp; x)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> val == x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn], b[maxn], tmp[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[mid].val &gt;= x)&#123;</span><br><span class="line">            r = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(r == l) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">merge</span>(l, mid), <span class="built_in">merge</span>(mid + <span class="number">1</span>, r);</span><br><span class="line">    <span class="keyword">int</span> p1 = l, p2 = mid + <span class="number">1</span>, p3 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p1 &lt;= mid || p2 &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p1 &gt; mid || (p2 &lt;= r &amp;&amp; b[p2].midx &lt; b[p1].midx)) tmp[p3++] = b[p2++], ans += mid - p1 + <span class="number">1</span>, ans %= mod;</span><br><span class="line">        <span class="keyword">else</span> tmp[p3++] = b[p1++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = l; i &lt;= r; ++i) b[i] = tmp[i - l];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]), a[i].idx = i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;b[i]), b[i].idx = i;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> r = <span class="built_in">bs</span>(b[i].val);</span><br><span class="line">        b[i].midx = a[r].idx;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">merge</span>(<span class="number">1</span>, n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="9-29"><a href="#9-29" class="headerlink" title="9.29"></a>9.29</h1><p>前两天满课太难受了…都在补CF的题，感觉补CF的题效率有点低，一补就是一晚上还补不到几题。</p><p>看到CDQ分治本来想直接学，但发现树状数组没学，再往前又发现倍增的思想也不熟……我的知识还是没成体系啊</p><h2 id="P3374-【模板】树状数组-1"><a href="#P3374-【模板】树状数组-1" class="headerlink" title="P3374 【模板】树状数组 1"></a><a href="https://www.luogu.com.cn/problem/P3374">P3374 【模板】树状数组 1</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) x&amp;(-(x))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], c[maxn];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span>&#123; <span class="comment">// 单点加k</span></span><br><span class="line">    <span class="keyword">while</span>(x &lt;= n)&#123;</span><br><span class="line">        c[x] += k;</span><br><span class="line">        x += <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = x; i &lt;= n; i += <span class="built_in">lowbit</span>(i))&#123;</span><br><span class="line">        c[i] += y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123; <span class="comment">// sum of 1...x</span></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">        ans += c[x];</span><br><span class="line">        x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">intsum</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(r) - <span class="built_in">sum</span>(l - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">int</span> z;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;z);</span><br><span class="line">        <span class="built_in">update</span>(i, z, n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> x, k;</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;z, &amp;x, &amp;k);</span><br><span class="line">        <span class="keyword">if</span>(z == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">add</span>(x, k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">intsum</span>(x, k));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3368-【模板】树状数组-2"><a href="#P3368-【模板】树状数组-2" class="headerlink" title="P3368 【模板】树状数组 2"></a><a href="https://www.luogu.com.cn/problem/P3368">P3368 【模板】树状数组 2</a></h2><p>差分一下，就能把<strong>单点修改+区间查询</strong>变成<strong>单点查询+区间修改</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) x&amp;(-(x))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], b[maxn], c[maxn];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x &lt;= n)&#123;</span><br><span class="line">        c[x] += k;</span><br><span class="line">        x += <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">        ans += c[x];</span><br><span class="line">        x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) b[i] = a[i] - a[i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">add</span>(i, b[i]);</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> z, x, y, k;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;z);</span><br><span class="line">        <span class="keyword">if</span>(z == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;k);</span><br><span class="line">            <span class="built_in">add</span>(x, k), <span class="built_in">add</span>(y + <span class="number">1</span>, -k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sum</span>(x));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过复习一下之后就回想起来，树状数组也确实很好理解，难怪是普及题啊</p><h2 id="P2345-USACO04OPEN-MooFest-G"><a href="#P2345-USACO04OPEN-MooFest-G" class="headerlink" title="P2345 [USACO04OPEN]MooFest G"></a><a href="https://www.luogu.com.cn/problem/P2345">P2345 [USACO04OPEN]MooFest G</a></h2><p>排序离散化后树状数组直接解，但是还没想清楚CDQ分治应该怎么做</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v, x, id;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node&amp; y)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x &lt; y.x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> node&amp; x, <span class="keyword">const</span> node&amp; y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.v &lt; y.v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> c[maxn], s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x &lt;= n)&#123;</span><br><span class="line">        c[x] += k;</span><br><span class="line">        x += <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adds</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x &lt;= n)&#123;</span><br><span class="line">        s[x] += k;</span><br><span class="line">        x += <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">        ans += c[x];</span><br><span class="line">        x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sums</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">        ans += s[x];</span><br><span class="line">        x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;a[i].v, &amp;a[i].x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) a[i].id = i;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n, cmp);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="built_in">sum</span>(a[i].id - <span class="number">1</span>);</span><br><span class="line">        ans += a[i].v * (cnt * a[i].x - <span class="built_in">sums</span>(a[i].id - <span class="number">1</span>));</span><br><span class="line">        cnt = <span class="built_in">sum</span>(n) - <span class="built_in">sum</span>(a[i].id);</span><br><span class="line">        ans += a[i].v * (<span class="built_in">sums</span>(n) - <span class="built_in">sums</span>(a[i].id) - cnt * a[i].x);</span><br><span class="line">        <span class="built_in">add</span>(a[i].id, <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">adds</span>(a[i].id, a[i].x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2926-USACO08DEC-Patting-Heads-S"><a href="#P2926-USACO08DEC-Patting-Heads-S" class="headerlink" title="P2926 [USACO08DEC]Patting Heads S"></a><a href="https://www.luogu.com.cn/problem/P2926">P2926 [USACO08DEC]Patting Heads S</a></h2><p>题意讲反了，本来一点也不难吧</p><p>不过都一样，求因子复杂度$O(\sqrt n)$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">100005</span>];</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> d[<span class="number">100005</span>];</span><br><span class="line"><span class="comment">// vector&lt;int&gt; v[maxn];</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">        d[i] = x;</span><br><span class="line">        <span class="comment">// v[x].push_back(i);</span></span><br><span class="line">        a[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j * j &lt;= d[i]; ++j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(d[i] % j) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[j])&#123;</span><br><span class="line">                ans[i] += a[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(j == d[i]) ans[i]--;</span><br><span class="line">            <span class="keyword">if</span>(j == d[i] / j) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[d[i] / j])&#123;</span><br><span class="line">                ans[i] += a[d[i] / j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(d[i] / j == d[i]) ans[i]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-1"><a href="#10-1" class="headerlink" title="10.1"></a>10.1</h1><p>国庆假期的学习计划：</p><p>目前需要学的知识点：</p><p><strong>CDQ分治，主席树（可持久化线段树）</strong></p><p>然后就是打牛客的国庆派对，补题，看看还有哪些可学的知识点</p><p>还有个任务就是上蓝名</p><h1 id="10-4"><a href="#10-4" class="headerlink" title="10.4"></a>10.4</h1><h2 id="P3810-【模板】三维偏序（陌上花开）"><a href="#P3810-【模板】三维偏序（陌上花开）" class="headerlink" title="P3810 【模板】三维偏序（陌上花开）"></a><a href="https://www.luogu.com.cn/problem/P3810">P3810 【模板】三维偏序（陌上花开）</a></h2><p>看cdq的概念解读，各种解释，OI wiki，总是不提怎么归并处理，怎么解决影响问题。真做了题，才算是祛魅，也不是多么复杂的算法嘛（CDQ套CDQ警告）</p><p>知乎上的洛谷日报对基础CDQ讲的很透彻，点赞。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> z[maxn];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> cnt[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(x &lt;= m) &#123;</span><br><span class="line">z[x] += k;</span><br><span class="line">x += <span class="built_in">lowbit</span>(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(x &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">ans += z[x];</span><br><span class="line">x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> a, b, c, id;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node&amp; x)<span class="keyword">const</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(a != x.a) <span class="keyword">return</span> a &lt; x.a;</span><br><span class="line"><span class="keyword">if</span>(c != x.c) <span class="keyword">return</span> c &lt; x.c;</span><br><span class="line"><span class="keyword">return</span> b &lt; x.b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;s[maxn], tmp[maxn];</span><br><span class="line">map&lt; pair &lt;pii, <span class="keyword">int</span>&gt;, <span class="keyword">int</span>&gt; mp;</span><br><span class="line"><span class="keyword">int</span> ans[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span> </span>&#123;</span><br><span class="line">fors(i, <span class="number">1</span>, n) &#123;</span><br><span class="line">cnt[i] += mp[<span class="built_in">make_pair</span>(<span class="built_in">make_pair</span>(s[i].a, s[i].b), s[i].c)];</span><br><span class="line">ans[i] += cnt[i] - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cdq</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(r == l) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">cdq</span>(l, mid);</span><br><span class="line"><span class="built_in">cdq</span>(mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="comment">// 统计答案并按b排序</span></span><br><span class="line"><span class="comment">// (c)建树状数组</span></span><br><span class="line"><span class="keyword">int</span> p1 = l, p2 = mid + <span class="number">1</span>, p3 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (p1 &lt;= mid || p2 &lt;= r) &#123;</span><br><span class="line"><span class="keyword">if</span> (p1 &gt; mid || (p2 &lt;= r &amp;&amp; s[p1].b &gt; s[p2].b)) &#123;</span><br><span class="line">ans[s[p2].id] += <span class="built_in">sum</span>(s[p2].c);</span><br><span class="line">tmp[p3++] = s[p2++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">add</span>(s[p1].c, cnt[s[p1].id]);</span><br><span class="line"><span class="comment">// ans[s[p2].id] += sum(s[p2].c - 1);</span></span><br><span class="line">tmp[p3++] = s[p1++];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt;= mid; ++i) <span class="built_in">add</span>(s[i].c, -cnt[s[i].id]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt;= r; ++i) &#123;</span><br><span class="line">s[i] = tmp[i - l];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> f[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">t = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">int</span> all = n;</span><br><span class="line">fors (i, <span class="number">1</span>, n) &#123;</span><br><span class="line">cin &gt;&gt; s[i].a &gt;&gt; s[i].b &gt;&gt; s[i].c, s[i].id = i;</span><br><span class="line">mp[&#123;&#123;s[i].a, s[i].b&#125;, s[i].c&#125;]++;</span><br><span class="line"><span class="keyword">if</span> (mp[&#123;&#123;s[i].a, s[i].b&#125;, s[i].c&#125;] &gt; <span class="number">1</span>) &#123;</span><br><span class="line">i--, n--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pre</span>();</span><br><span class="line"><span class="built_in">sort</span> (s + <span class="number">1</span>, s + <span class="number">1</span> + n);</span><br><span class="line"><span class="built_in">cdq</span>(<span class="number">1</span>, n);</span><br><span class="line">fors (i, <span class="number">1</span>, n) &#123;</span><br><span class="line">f[ans[i]] += cnt[i];</span><br><span class="line">&#125;</span><br><span class="line">fors (i, <span class="number">1</span>, all) &#123;</span><br><span class="line">cout &lt;&lt; f[i - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2717-寒假作业"><a href="#P2717-寒假作业" class="headerlink" title="P2717 寒假作业"></a><a href="https://www.luogu.com.cn/problem/P2717">P2717 寒假作业</a></h2><p>转化一下，求平均数$\geq k$的子段$\Lrarr$每个数减去$k$后求平均数$\geq 0$的子段。</p><p>再接着转化，把原数组改为前缀和数组，则求$(0,n)$内$pre[j]-pre[i]&gt;=0$的点对，也即求$(0,n)$内的顺序对数目，和求逆序对一样分治即可。</p><p>所以不需要用cdq（（</p><p>如果cdq的话，貌似要尺取。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], tmp[maxn];</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(r == l) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">solve</span>(l, mid); <span class="built_in">solve</span>(mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="keyword">int</span> p1 = l, p2 = mid + <span class="number">1</span>, p3 = l;</span><br><span class="line"><span class="keyword">while</span>(p1 &lt;= mid || p2 &lt;= r) &#123;</span><br><span class="line"><span class="keyword">if</span>(p1 &gt; mid || (p2 &lt;= r &amp;&amp; a[p1] &lt;= a[p2])) &#123;</span><br><span class="line">ans += mid - p1 + <span class="number">1</span>;</span><br><span class="line">tmp[p3++] = a[p2++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">tmp[p3++] = a[p1++];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = l; i &lt;= r; ++i) a[i] = tmp[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">fors(i, <span class="number">1</span>, n) cin &gt;&gt; a[i], a[i] -= k;</span><br><span class="line">fors(i, <span class="number">1</span>, n) a[i] = a[i - <span class="number">1</span>] + a[i];</span><br><span class="line"><span class="built_in">solve</span>(<span class="number">0</span>, n);</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-6"><a href="#10-6" class="headerlink" title="10.6"></a>10.6</h1><h2 id="P3919-【模板】可持久化线段树-1（可持久化数组）"><a href="#P3919-【模板】可持久化线段树-1（可持久化数组）" class="headerlink" title="P3919 【模板】可持久化线段树 1（可持久化数组）"></a><a href="https://www.luogu.com.cn/problem/P3919">P3919 【模板】可持久化线段树 1（可持久化数组）</a></h2><p>任务完成！我学会了CDQ和主席树！（至少模板题过了呜呜呜）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :deb.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-10-06</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="comment">// 可持久化数组版</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">1</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> rt, lc, rc, sum; <span class="comment">// 区间和..</span></span><br><span class="line">&#125;a[maxn * <span class="number">24</span>];</span><br><span class="line"><span class="keyword">int</span> cnt; <span class="comment">// 记录版本数</span></span><br><span class="line"><span class="keyword">int</span> x[maxn]; <span class="comment">// 初始数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> &amp;rt, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    rt = ++cnt;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        a[rt].sum = x[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(a[rt].lc, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(a[rt].rc, mid + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> &amp;rt, <span class="keyword">int</span> f, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x, <span class="keyword">int</span> val)</span> </span>&#123; <span class="comment">// 节点编号，来源版本，左边界，有边界，下标，要改的值</span></span><br><span class="line">    rt = ++cnt;</span><br><span class="line">    a[rt].lc = a[f].lc, a[rt].rc = a[f].rc, a[rt].sum = a[f].sum;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        a[rt].sum = val;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (x &lt;= mid) &#123;</span><br><span class="line">        <span class="built_in">update</span>(a[rt].lc, a[f].lc, l, mid, x, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">update</span>(a[rt].rc, a[f].rc, mid + <span class="number">1</span>, r, x, val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> rt, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x)</span> </span>&#123; <span class="comment">// 节点编号，左右边界，要查的下标</span></span><br><span class="line">    <span class="keyword">if</span> (r == l) &#123;</span><br><span class="line">        <span class="keyword">return</span> a[rt].sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt;= mid) <span class="keyword">return</span> <span class="built_in">query</span>(a[rt].lc, l, mid, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">query</span>(a[rt].rc, mid + <span class="number">1</span>, r, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    fors (i, <span class="number">1</span>, n) cin &gt;&gt; x[i];</span><br><span class="line">    <span class="built_in">build</span> (a[<span class="number">0</span>].rt, <span class="number">1</span>, n);</span><br><span class="line">    fors (j, <span class="number">1</span>, m) &#123;</span><br><span class="line">        <span class="keyword">int</span> v, loc, value, op;</span><br><span class="line">        cin &gt;&gt; v &gt;&gt; op;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) &#123;</span><br><span class="line">            cin &gt;&gt; loc &gt;&gt; value;</span><br><span class="line">            <span class="built_in">update</span>(a[j].rt, a[v].rt, <span class="number">1</span>, n, loc, value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            cin &gt;&gt; loc;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">query</span>(a[v].rt, <span class="number">1</span>, n, loc) &lt;&lt; endl;</span><br><span class="line">            a[j].rt = a[v].rt;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-8"><a href="#10-8" class="headerlink" title="10.8"></a>10.8</h1><h2 id="P3396-哈希冲突"><a href="#P3396-哈希冲突" class="headerlink" title="P3396 哈希冲突"></a><a href="https://www.luogu.com.cn/problem/P3396">P3396 哈希冲突</a></h2><p>根号算法，思想和分块高度重合，但个人认为不是分块（</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">150000</span> + <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> mp[<span class="number">1005</span>][<span class="number">1005</span>]; <span class="comment">// 模i意义下第j个池的和</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j * j &lt;= n; ++j) &#123;</span><br><span class="line">            <span class="keyword">int</span> p = i % j;</span><br><span class="line">            mp[j][p] += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">char</span> cmd; <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">        cin &gt;&gt; cmd &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        <span class="keyword">if</span>(cmd == <span class="string">&#x27;C&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i * i &lt;= n; ++i) &#123;</span><br><span class="line">                <span class="keyword">int</span> p = x % i;</span><br><span class="line">                mp[i][p] -= a[x];</span><br><span class="line">                mp[i][p] += y;</span><br><span class="line">            &#125;</span><br><span class="line">            a[x] = y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (x * x &lt;= n) &#123;</span><br><span class="line">                cout &lt;&lt; mp[x][y] &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (y &gt;= x) &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = y; i &lt;= n; i += x) &#123;</span><br><span class="line">                    ans += a[i];</span><br><span class="line">                &#125;</span><br><span class="line">                cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-11"><a href="#10-11" class="headerlink" title="10.11"></a>10.11</h1><h2 id="P3379-【模板】最近公共祖先（LCA）"><a href="#P3379-【模板】最近公共祖先（LCA）" class="headerlink" title="P3379 【模板】最近公共祖先（LCA）"></a><a href="https://www.luogu.com.cn/problem/P3379">P3379 【模板】最近公共祖先（LCA）</a></h2><p>蒟蒻开始学倍增，赶快把不会的知识点都补了，希望未来几个月能组个正常的队（有腿抱最好了qwq，所以要加油）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, m, s;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e6</span> + <span class="number">10</span>;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; e[maxn];</span><br><span class="line"><span class="keyword">int</span> dep[maxn];</span><br><span class="line"><span class="keyword">int</span> fa[maxn][<span class="number">31</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span> <span class="params">(<span class="keyword">int</span> now, <span class="keyword">int</span> f, <span class="keyword">int</span> d)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;x : e[now]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(x != f) &#123;</span><br><span class="line">            fa[x][<span class="number">0</span>] = now;</span><br><span class="line">            dep[x] = d;</span><br><span class="line">            <span class="built_in">dfs</span>(x, now, d + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> lg[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fd</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = lg[n] + <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(fa[x][i] != fa[y][i]) &#123;</span><br><span class="line">            x = fa[x][i], y = fa[y][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fa[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span>||c&gt;<span class="string">&#x27;9&#x27;</span>)&#123;<span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;c=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>) x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; n &gt;&gt; m &gt;&gt; s;</span></span><br><span class="line">    n = <span class="built_in">read</span>(); m = <span class="built_in">read</span>(); s = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i == (<span class="number">1</span> &lt;&lt; p)) &#123;</span><br><span class="line">            p++;</span><br><span class="line">            lg[i] = lg[i - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> lg[i] = lg[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        x = <span class="built_in">read</span>(); y = <span class="built_in">read</span>();</span><br><span class="line">        e[x].<span class="built_in">pb</span>(y), e[y].<span class="built_in">pb</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(s, <span class="number">-1</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lg[n] + <span class="number">1</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">            fa[j][i] = fa[fa[j][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        x = <span class="built_in">read</span>(); y = <span class="built_in">read</span>();</span><br><span class="line">        <span class="keyword">if</span> (dep[x] &lt; dep[y]) <span class="built_in">swap</span>(x, y);</span><br><span class="line">        <span class="keyword">while</span> (dep[x] &gt; dep[y]) &#123;</span><br><span class="line">            x = fa[x][(<span class="keyword">int</span>)lg[dep[x] - dep[y]]];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(x == y) cout &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="built_in">fd</span>(x, y) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-12"><a href="#10-12" class="headerlink" title="10.12"></a>10.12</h1><h2 id="P1613-跑路"><a href="#P1613-跑路" class="headerlink" title="P1613 跑路"></a><a href="https://www.luogu.com.cn/problem/P1613">P1613 跑路</a></h2><p>忘了C++11好像不支持堆变量自动初始化，害的白wa了好几次qwq</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">55</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">bool</span> e[maxn][maxn][<span class="number">70</span>];</span><br><span class="line"><span class="keyword">int</span> f[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">int</span> u, v;</span><br><span class="line">    <span class="built_in">memset</span>(e, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(e));</span><br><span class="line">    <span class="built_in">memset</span>(f, <span class="number">10</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(f));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;u, &amp;v);</span><br><span class="line">        e[u][v][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        f[u][v] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">64</span>; ++j) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">1</span>; x &lt;= n; ++x) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!e[i][x][j - <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">1</span>; y &lt;= n; ++y) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (e[x][y][j - <span class="number">1</span>]) &#123;</span><br><span class="line">                        e[i][y][j] = <span class="number">1</span>;</span><br><span class="line">                        f[i][y] = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; ++k) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">                f[i][j] = <span class="built_in">min</span>(f[i][j], f[i][k] + f[k][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, f[<span class="number">1</span>][n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P5002-专心OI-找祖先"><a href="#P5002-专心OI-找祖先" class="headerlink" title="P5002 专心OI - 找祖先"></a><a href="https://www.luogu.com.cn/problem/P5002">P5002 专心OI - 找祖先</a></h2><p>一道递归组合题，和LCA其实没关系</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, r, m;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; e[maxn];</span><br><span class="line"><span class="keyword">int</span> sz[maxn]; <span class="comment">// 以i为根节点的子树大小</span></span><br><span class="line"><span class="keyword">int</span> ans[maxn]; <span class="comment">// 记忆答案</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> f)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;x : e[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(x == f) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(x, i);</span><br><span class="line">        sz[i] += sz[x];</span><br><span class="line">    &#125;</span><br><span class="line">    sz[i]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(y) &#123;</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) ans = (ans * x) % mod;</span><br><span class="line">        x = (x * x) % mod;</span><br><span class="line">        y &gt;&gt;= <span class="number">1ll</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> an = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;x : e[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(sz[x] &gt; sz[i]) <span class="keyword">continue</span>;</span><br><span class="line">        an = (an + (s * sz[x]) % mod) % mod;</span><br><span class="line">        s = (s + sz[x]) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    an = (an * <span class="number">2</span>) % mod;</span><br><span class="line">    an = (an + <span class="number">2</span> * sz[i] - <span class="number">1</span>) % mod;</span><br><span class="line">    ans[i] = an;</span><br><span class="line">    <span class="keyword">return</span> an;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(ans, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(ans));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;n, &amp;r, &amp;m);</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        e[a].<span class="built_in">push_back</span>(b);</span><br><span class="line">        e[b].<span class="built_in">push_back</span>(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(r, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;a);</span><br><span class="line">        <span class="keyword">if</span>(ans[a]) <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans[a]);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">get</span>(a));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3402-可持久化并查集"><a href="#P3402-可持久化并查集" class="headerlink" title="P3402 可持久化并查集"></a><a href="https://www.luogu.com.cn/problem/P3402">P3402 可持久化并查集</a></h2><p>按照题解写的启发式合并，貌似跑的飞快。。（$\leq 200ms$）</p><p>按秩合并应该更快吧</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> rt, lc, rc;</span><br><span class="line">&#125;a[maxn &lt;&lt; <span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> dep[maxn &lt;&lt; <span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> fa[maxn &lt;&lt; <span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> &amp;rt, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    rt = ++cnt;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        fa[rt] = l;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(a[rt].lc, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(a[rt].rc, mid + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> &amp;rt, <span class="keyword">int</span> x1, <span class="keyword">int</span> x2, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> f)</span> </span>&#123; <span class="comment">// 将x1的父亲修改为x2</span></span><br><span class="line">    rt = ++cnt;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        fa[rt] = x2;</span><br><span class="line">        dep[rt] = dep[f];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a[rt].lc = a[f].lc, a[rt].rc = a[f].rc;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x1 &lt;= mid) <span class="built_in">join</span>(a[rt].lc, x1, x2, l, mid, a[f].lc);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">join</span>(a[rt].rc, x1, x2, mid + <span class="number">1</span>, r, a[f].rc);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> rt, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x)</span> </span>&#123; <span class="comment">// x的直属父亲</span></span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        <span class="keyword">return</span> rt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt;= mid) <span class="keyword">return</span> <span class="built_in">query</span>(a[rt].lc, l, mid, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">query</span>(a[rt].rc, mid + <span class="number">1</span>, r, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> rt, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        dep[rt]++; <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt;= mid) <span class="built_in">add</span>(a[rt].lc, l, mid, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">add</span>(a[rt].rc, mid + <span class="number">1</span>, r, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findfa</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> x)</span> </span>&#123; <span class="comment">// 版本i中x的祖先</span></span><br><span class="line">    <span class="keyword">int</span> fx = <span class="built_in">query</span>(a[i].rt, <span class="number">1</span>, n, x);</span><br><span class="line">    <span class="keyword">if</span>(fa[fx] == x) <span class="keyword">return</span> fx;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">findfa</span>(i, fa[fx]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dep, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(dep));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="built_in">build</span>(a[<span class="number">0</span>].rt, <span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">int</span> opt, k, x, y;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;opt);</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">            a[i].rt = a[i - <span class="number">1</span>].rt;</span><br><span class="line">            <span class="keyword">int</span> fx = <span class="built_in">findfa</span>(i, x), fy = <span class="built_in">findfa</span>(i, y);</span><br><span class="line">            <span class="keyword">if</span>(fa[fx] == fa[fy]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(dep[fx] &gt; dep[fy]) <span class="built_in">swap</span>(fx, fy);</span><br><span class="line">            <span class="built_in">join</span>(a[i].rt, fa[fx], fa[fy], <span class="number">1</span>, n, a[i - <span class="number">1</span>].rt);</span><br><span class="line">            <span class="keyword">if</span>(dep[fx] == dep[fy]) <span class="built_in">add</span>(a[i].rt, <span class="number">1</span>, n, fa[fy]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">            a[i].rt = a[k].rt;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">            a[i].rt = a[i - <span class="number">1</span>].rt;</span><br><span class="line">            <span class="keyword">int</span> fx = <span class="built_in">findfa</span>(i, x), fy = <span class="built_in">findfa</span>(i, y);</span><br><span class="line">            <span class="keyword">if</span>(fa[fx] == fa[fy]) <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-16"><a href="#10-16" class="headerlink" title="10.16"></a>10.16</h1><h2 id="P2801-教主的魔法"><a href="#P2801-教主的魔法" class="headerlink" title="P2801 教主的魔法"></a><a href="https://www.luogu.com.cn/problem/P2801">P2801 教主的魔法</a></h2><p>再次说明我的大题coding能力就跟坨⑩一样。。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :debug.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-10-16</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> blc[maxn]; <span class="comment">// i在第几块内</span></span><br><span class="line"><span class="keyword">int</span> rb[maxn / <span class="number">1000</span> + <span class="number">100</span>] = &#123;<span class="number">0</span>&#125;, lb[maxn / <span class="number">1000</span> + <span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> d[maxn]; <span class="comment">// 排序后的</span></span><br><span class="line"><span class="keyword">int</span> n, q;</span><br><span class="line"><span class="keyword">int</span> sn;</span><br><span class="line"><span class="keyword">int</span> tag[maxn / <span class="number">1000</span> + <span class="number">100</span>]; <span class="comment">// 整块tag，用于整块操作的数据维护,表示整个区间都被加上了tag[i]</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(blc[l] == blc[r]) &#123;</span><br><span class="line">fors(i, l, r) a[i] += w;</span><br><span class="line">fors(i, l, r) d[i] = a[i];</span><br><span class="line"><span class="built_in">sort</span>(d + lb[blc[l]], d + <span class="number">1</span> + rb[blc[l]]);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, l, rb[blc[l]]) &#123;</span><br><span class="line">a[i] += w;</span><br><span class="line">&#125; fors(i, lb[blc[l]], rb[blc[l]]) d[i] = a[i];</span><br><span class="line"><span class="built_in">sort</span>(d + lb[blc[l]], d + rb[blc[l]] + <span class="number">1</span>);</span><br><span class="line">fors(i, lb[blc[r]], r) &#123;</span><br><span class="line">a[i] += w;</span><br><span class="line">&#125; fors(i, lb[blc[r]], rb[blc[r]]) d[i] = a[i];</span><br><span class="line"><span class="built_in">sort</span>(d + lb[blc[r]], d + rb[blc[r]] + <span class="number">1</span>);</span><br><span class="line">fors(i, blc[l] + <span class="number">1</span>, blc[r] - <span class="number">1</span>) &#123;</span><br><span class="line">tag[i] += w;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lbound</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> c, <span class="keyword">int</span> i)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(blc[l] == blc[r]) &#123;</span><br><span class="line">fors(i, l, r) <span class="keyword">if</span>(a[i] + tag[blc[i]] &gt;= c) ans++;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, l, rb[blc[l]]) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] + tag[blc[i]] &gt;= c) ans++;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, lb[blc[r]], r) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] + tag[blc[i]] &gt;= c) ans++;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, blc[l] + <span class="number">1</span>, blc[r] - <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">// int p = lower_bound(d + lb[i], d + rb[i] + 1, c - tag[i]) - d;</span></span><br><span class="line"></span><br><span class="line">ans += <span class="built_in">lbound</span>(lb[i], rb[i], c, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lbound</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> c, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ll = l, rr = r, ans = <span class="number">0</span>, mid;</span><br><span class="line"><span class="keyword">while</span>(ll &lt;= rr) &#123;</span><br><span class="line">mid = (ll + rr) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(d[mid] + tag[i] &gt;= c) rr = mid - <span class="number">1</span>, ans = rb[i] - mid + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> ll = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cread</span><span class="params">(<span class="keyword">char</span> &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(x != <span class="string">&#x27;M&#x27;</span> &amp;&amp;x != <span class="string">&#x27;A&#x27;</span>) x = <span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 某个快读模板qwq</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Tp&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(Tp &amp;x)</span></span>&#123;</span><br><span class="line">    x=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="number">1</span>;<span class="keyword">int</span> fh;</span><br><span class="line">    <span class="keyword">while</span>(ch!=<span class="string">&#x27;-&#x27;</span>&amp;&amp;(ch&gt;<span class="string">&#x27;9&#x27;</span>||ch&lt;<span class="string">&#x27;0&#x27;</span>))&#123;</span><br><span class="line">        ch=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">        fh=<span class="number">-1</span>;ch=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span> fh=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">        x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+ch-<span class="string">&#x27;0&#x27;</span>;ch=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    x*=fh;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// freopen(&quot;in.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    <span class="comment">// freopen(&quot;out.txt&quot;, &quot;w&quot;, stdout);</span></span><br><span class="line"><span class="built_in">read</span>(n); <span class="built_in">read</span>(q);</span><br><span class="line">fors(i, <span class="number">1</span>, n) &#123; <span class="built_in">read</span>(a[i]); d[i] = a[i]; &#125;</span><br><span class="line">sn = <span class="built_in">sqrt</span>(n);</span><br><span class="line"><span class="keyword">int</span> bid;</span><br><span class="line">bid = n / sn;</span><br><span class="line"><span class="keyword">if</span>(n % sn) bid++;</span><br><span class="line">fors(i ,<span class="number">1</span>, n) &#123;</span><br><span class="line">blc[i] = (i - <span class="number">1</span>) / sn + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, <span class="number">1</span>, bid) &#123;</span><br><span class="line">lb[i] = (i - <span class="number">1</span>) * sn + <span class="number">1</span>;</span><br><span class="line">rb[i] = i * sn;</span><br><span class="line">&#125;</span><br><span class="line">rb[bid] = n;</span><br><span class="line">fors(i, <span class="number">1</span>, bid) &#123;</span><br><span class="line"><span class="built_in">sort</span>(d + lb[i], d + rb[i] + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> x;</span><br><span class="line"><span class="keyword">int</span> l, r, w;</span><br><span class="line">fors(i, <span class="number">1</span>, q) &#123;</span><br><span class="line"><span class="built_in">cread</span>(x);</span><br><span class="line"><span class="built_in">read</span>(l);</span><br><span class="line"><span class="built_in">read</span>(r);</span><br><span class="line"><span class="built_in">read</span>(w);</span><br><span class="line"><span class="keyword">if</span>(x == <span class="string">&#x27;M&#x27;</span>) <span class="built_in">add</span>(l, r, w);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">query</span>(l, r, w));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P4135-作诗"><a href="#P4135-作诗" class="headerlink" title="P4135 作诗"></a><a href="https://www.luogu.com.cn/problem/P4135">P4135 作诗</a></h2><p>分块+预处理</p><p>很好的紫题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, c, m;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">355</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> f[N][N] = &#123;<span class="number">0</span>&#125;; <span class="comment">// 从i到j（块），有多少个数出现了偶数次</span></span><br><span class="line"><span class="keyword">int</span> s[N][maxn] = &#123;<span class="number">0</span>&#125;; <span class="comment">// 前i块中j出现了多少次</span></span><br><span class="line"><span class="keyword">int</span> blc[N];</span><br><span class="line"><span class="keyword">int</span> l[N], r[N];</span><br><span class="line"><span class="keyword">int</span> mp[maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;c, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">int</span> ll, rr;</span><br><span class="line">    <span class="keyword">int</span> sn = <span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">int</span> tot = n / sn; <span class="keyword">if</span>(n % sn) tot++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        blc[i] = (i - <span class="number">1</span>) / sn + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; ++i) &#123;</span><br><span class="line">        l[i] = (i - <span class="number">1</span>) * sn + <span class="number">1</span>;</span><br><span class="line">        r[i] = i * sn;</span><br><span class="line">    &#125;</span><br><span class="line">    r[tot] = n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= c; ++j) s[i][j] = s[i - <span class="number">1</span>][j];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = l[i]; j &lt;= r[i]; ++j) &#123;</span><br><span class="line">            s[i][a[j]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// unordered_map&lt;int, int&gt; mp;</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &lt;= tot; ++j) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = l[j]; k &lt;= r[j]; ++k) &#123;</span><br><span class="line">                mp[a[k]]++;</span><br><span class="line">                <span class="keyword">if</span> (mp[a[k]] &gt; <span class="number">1</span> &amp;&amp; (mp[a[k]] &amp; <span class="number">1</span>)) ans--;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (!(mp[a[k]] &amp; <span class="number">1</span>)) ans++;</span><br><span class="line">            &#125;</span><br><span class="line">            f[i][j] = ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= c; ++j) mp[j] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> aa = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= m; ++k) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;ll, &amp;rr);</span><br><span class="line">        ll = (ll + aa) % n + <span class="number">1</span>;</span><br><span class="line">        rr = (rr + aa) % n + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (ll &gt; rr) <span class="built_in">swap</span>(ll, rr);</span><br><span class="line">        <span class="comment">// unordered_map&lt;int, int&gt; mp;</span></span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (blc[ll] == blc[rr]) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= rr; ++i) &#123;</span><br><span class="line">                mp[a[i]]++;</span><br><span class="line">                <span class="keyword">if</span> (mp[a[i]] &gt; <span class="number">1</span> &amp;&amp; (mp[a[i]] &amp; <span class="number">1</span>)) ans--;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (!(mp[a[i]] &amp; <span class="number">1</span>)) ans++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">            aa = ans;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= rr; ++i) mp[a[i]]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> ans = f[blc[ll] + <span class="number">1</span>][blc[rr] - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= r[blc[ll]]; ++i) &#123;</span><br><span class="line">                mp[a[i]]++;</span><br><span class="line">                <span class="keyword">int</span> res = (mp[a[i]] + s[blc[rr] - <span class="number">1</span>][a[i]] - s[blc[ll]][a[i]]);</span><br><span class="line">                <span class="keyword">if</span>(res &gt; <span class="number">1</span> &amp;&amp; (res &amp; <span class="number">1</span>)) ans--;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(!(res &amp; <span class="number">1</span>)) ans++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = l[blc[rr]]; i &lt;= rr; ++i) &#123;</span><br><span class="line">                mp[a[i]]++;</span><br><span class="line">                <span class="keyword">int</span> res = (mp[a[i]] + s[blc[rr] - <span class="number">1</span>][a[i]] - s[blc[ll]][a[i]]);</span><br><span class="line">                <span class="keyword">if</span>(res &gt; <span class="number">1</span> &amp;&amp; (res &amp; <span class="number">1</span>)) ans--;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(!(res &amp; <span class="number">1</span>)) ans++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= r[blc[ll]]; ++i) mp[a[i]]--;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = l[blc[rr]]; i &lt;= rr; ++i) mp[a[i]]--;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">            aa = ans;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P4168-Violet-蒲公英"><a href="#P4168-Violet-蒲公英" class="headerlink" title="P4168 [Violet]蒲公英"></a><a href="https://www.luogu.com.cn/problem/P4168">P4168 [Violet]蒲公英</a></h2><p>区间众数问题</p><p>和上面的P4135一样也是个好题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">4e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">205</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> val, id, des;</span><br><span class="line">&#125;Node[maxn];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(<span class="keyword">const</span> node&amp; x, <span class="keyword">const</span> node&amp; y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.val == y.val ? x.id &lt; y.id : x.val &lt; y.val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(<span class="keyword">const</span> node &amp;x, <span class="keyword">const</span> node&amp; y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.id &lt; y.id;</span><br><span class="line">&#125;</span><br><span class="line">unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; src;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">descrete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">sort</span>(Node + <span class="number">1</span>, Node + <span class="number">1</span> + n, cmp1);</span><br><span class="line">    Node[<span class="number">1</span>].des = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(Node[i].val == Node[i - <span class="number">1</span>].val) Node[i].des = Node[i - <span class="number">1</span>].des;</span><br><span class="line">        <span class="keyword">else</span> Node[i].des = Node[i - <span class="number">1</span>].des + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(Node + <span class="number">1</span>, Node + <span class="number">1</span> + n, cmp2);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!src.<span class="built_in">count</span>(Node[i].des)) src[Node[i].des] = Node[i].val;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) a[i] = Node[i].des;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> blc[maxn];</span><br><span class="line"><span class="keyword">int</span> l[N], r[N];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"><span class="keyword">int</span> d[N][N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> f[N][maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> mp[maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prework</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sn = <span class="built_in">sqrt</span>(n);</span><br><span class="line">    tot = n / sn; <span class="keyword">if</span>(n % sn) tot++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) blc[i] = (i - <span class="number">1</span>) / sn + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; ++i) &#123;</span><br><span class="line">        l[i] = (i - <span class="number">1</span>) * sn + <span class="number">1</span>;</span><br><span class="line">        r[i] = i * sn;</span><br><span class="line">    &#125;</span><br><span class="line">    r[tot] = n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>, ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &lt;= tot; ++j) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = l[j]; k &lt;= r[j]; ++k) &#123;</span><br><span class="line">                mp[a[k]]++;</span><br><span class="line">                <span class="comment">// cnt = max(cnt, mp[a[k]]);</span></span><br><span class="line">                <span class="keyword">if</span>(mp[a[k]] &gt; cnt) &#123;</span><br><span class="line">                    cnt = mp[a[k]];</span><br><span class="line">                    ans = a[k];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(mp[a[k]] == cnt) ans = <span class="built_in">min</span>(ans, a[k]);</span><br><span class="line">            &#125;</span><br><span class="line">            d[i][j] = ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) mp[j] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) f[i][j] = f[i - <span class="number">1</span>][j];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = l[i]; j &lt;= r[i]; ++j) &#123;</span><br><span class="line">            f[i][a[j]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;Node[i].val), Node[i].id = i;</span><br><span class="line">    <span class="built_in">descrete</span>();</span><br><span class="line">    <span class="built_in">prework</span>();</span><br><span class="line">    <span class="keyword">int</span> lans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ll, rr;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> o = <span class="number">1</span>; o &lt;= m; ++o) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;ll, &amp;rr);</span><br><span class="line">        ll = (ll + lans - <span class="number">1</span>) % n + <span class="number">1</span>;</span><br><span class="line">        rr = (rr + lans - <span class="number">1</span>) % n + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(ll &gt; rr) <span class="built_in">swap</span>(ll, rr);</span><br><span class="line">        <span class="keyword">int</span> ans, cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(blc[ll] == blc[rr]) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= rr; ++i) &#123;</span><br><span class="line">                mp[a[i]]++;</span><br><span class="line">                <span class="keyword">if</span>(mp[a[i]] &gt; cnt) &#123;</span><br><span class="line">                    cnt = mp[a[i]];</span><br><span class="line">                    ans = a[i];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(mp[a[i]] == cnt) ans = <span class="built_in">min</span>(ans, a[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, src[ans]);</span><br><span class="line">            lans = src[ans];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= rr; ++i) mp[a[i]]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            ans = d[blc[ll] + <span class="number">1</span>][blc[rr] - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> cnt = f[blc[rr] - <span class="number">1</span>][ans] - f[blc[ll]][ans];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= r[blc[ll]]; ++i) &#123;</span><br><span class="line">                mp[a[i]]++;</span><br><span class="line">                <span class="keyword">int</span> res = f[blc[rr] - <span class="number">1</span>][a[i]] - f[blc[ll]][a[i]] + mp[a[i]];</span><br><span class="line">                <span class="comment">// ans = max(ans, res);</span></span><br><span class="line">                <span class="keyword">if</span>(res &gt; cnt) &#123;</span><br><span class="line">                    cnt = res;</span><br><span class="line">                    ans = a[i];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(res == cnt) ans = <span class="built_in">min</span>(ans, a[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = l[blc[rr]]; i &lt;= rr; ++i) &#123;</span><br><span class="line">                mp[a[i]]++;</span><br><span class="line">                <span class="keyword">int</span> res = f[blc[rr] - <span class="number">1</span>][a[i]] - f[blc[ll]][a[i]] + mp[a[i]];</span><br><span class="line">                <span class="comment">// ans = max(ans, res);</span></span><br><span class="line">                <span class="keyword">if</span>(res &gt; cnt) &#123;</span><br><span class="line">                    cnt = res;</span><br><span class="line">                    ans = a[i];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(res == cnt) ans = <span class="built_in">min</span>(ans, a[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, src[ans]);</span><br><span class="line">            lans = src[ans];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= r[blc[ll]]; ++i) mp[a[i]]--;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = l[blc[rr]]; i &lt;= rr; ++i) mp[a[i]]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-18"><a href="#10-18" class="headerlink" title="10.18"></a>10.18</h1><h2 id="P4097-HEOI2013-Segment"><a href="#P4097-HEOI2013-Segment" class="headerlink" title="P4097 [HEOI2013]Segment"></a><a href="https://www.luogu.com.cn/problem/P4097">P4097 [HEOI2013]Segment</a></h2><p>说是李超线段树，但感觉用一般的维护方法也可以写，只不过常数大了一点（还是老老实实<del>抄</del>记了一遍模板）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pdi pair<span class="meta-string">&lt;double, int&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">39989</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="keyword">double</span> K[maxn], b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x_, <span class="keyword">int</span> y_, <span class="keyword">int</span> x__, <span class="keyword">int</span> y__)</span> </span>&#123;</span><br><span class="line">++cnt;</span><br><span class="line"><span class="keyword">if</span> (x_ == x__) &#123;</span><br><span class="line">K[cnt] = <span class="number">0</span>, b[cnt] = <span class="built_in">max</span>(y_, y__);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">K[cnt] = <span class="number">1.0</span> * (y__ - y_) / (x__ - x_);</span><br><span class="line">b[cnt] = y_ - K[cnt] * x_;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x * K[i] + b[i]; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> cl, <span class="keyword">int</span> cr, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> mid = (cl + cr) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> rr = a[k];</span><br><span class="line"><span class="keyword">if</span>(r &lt; cl || l &gt; cr) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">double</span> resu = <span class="built_in">cal</span>(u, mid);</span><br><span class="line"><span class="keyword">double</span> resv = <span class="built_in">cal</span>(a[k], mid);</span><br><span class="line"><span class="keyword">if</span>(l &lt;= cl &amp;&amp; r &gt;= cr) &#123;</span><br><span class="line"><span class="keyword">if</span>(cl == cr) &#123;</span><br><span class="line"><span class="keyword">if</span>(resu &gt; resv) a[k] = u; <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(K[a[k]] &lt; K[u]) &#123;</span><br><span class="line"><span class="keyword">if</span>(resu &gt; resv) &#123;</span><br><span class="line">a[k] = u;</span><br><span class="line"><span class="comment">// 修改可能区间</span></span><br><span class="line"><span class="built_in">change</span>(lson, cl, mid, l, r, rr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">change</span>(rson, mid + <span class="number">1</span>, cr, l, r, u);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(K[a[k]] &gt; K[u]) &#123;</span><br><span class="line"><span class="keyword">if</span>(resu &gt; resv) &#123;</span><br><span class="line">a[k] = u;</span><br><span class="line"><span class="built_in">change</span>(rson, mid + <span class="number">1</span>, cr, l, r, rr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">change</span>(lson, cl, mid, l, r, u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(b[u] &gt; b[a[k]]) a[k] = u;</span><br><span class="line">&#125; <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">change</span>(lson, cl, mid, l, r, u);</span><br><span class="line"><span class="built_in">change</span>(rson, mid + <span class="number">1</span>, cr, l, r, u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">pdi <span class="title">Max</span><span class="params">(pdi x, pdi y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x.first &lt; y.first) <span class="keyword">return</span> y;</span><br><span class="line"><span class="keyword">if</span>(x.first &gt; y.first) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">return</span> x.second &lt; y.second ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">pdi <span class="title">query</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> d)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(r &lt; d || d &lt; l) <span class="keyword">return</span> &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">double</span> res = <span class="built_in">cal</span>(a[k], d);</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> &#123;res, a[k]&#125;;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Max</span>(&#123;res, a[k]&#125;, <span class="built_in">Max</span>(<span class="built_in">query</span>(lson, l, mid, d), <span class="built_in">query</span>(rson, mid + <span class="number">1</span>, r, d))); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> lans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">pro</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x + lans - <span class="number">1</span> + b) % b + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">int</span> op, x_, y_, x__, y__;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;op);</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;x_, &amp;y_, &amp;x__, &amp;y__);</span><br><span class="line">x_ = <span class="built_in">pro</span>(x_, N);</span><br><span class="line">y_ = <span class="built_in">pro</span>(y_, mod);</span><br><span class="line">x__ = <span class="built_in">pro</span>(x__, N);</span><br><span class="line">y__ = <span class="built_in">pro</span>(y__, mod);</span><br><span class="line"><span class="keyword">if</span>(x_ &gt; x__) &#123;</span><br><span class="line"><span class="built_in">swap</span>(x_, x__);</span><br><span class="line"><span class="built_in">swap</span>(y_, y__);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">add</span>(x_, y_, x__, y__);</span><br><span class="line"><span class="built_in">change</span>(<span class="number">1</span>, <span class="number">1</span>, N, x_, x__, cnt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x_);</span><br><span class="line">x_ = <span class="built_in">pro</span>(x_, N);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, lans = <span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, N, x_).second);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-28"><a href="#10-28" class="headerlink" title="10.28"></a>10.28</h1><h2 id="CF242E-XOR-on-Segment"><a href="#CF242E-XOR-on-Segment" class="headerlink" title="CF242E XOR on Segment"></a><a href="https://www.luogu.com.cn/problem/CF242E">CF242E XOR on Segment</a></h2><p>按位运算，分别维护每一位就可以维护整个异或和了，属于是白给紫题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;bits/stdc++.h&gt;</span><br><span class="line">#define lson k &lt;&lt; 1</span><br><span class="line">#define rson k &lt;&lt; 1 | 1</span><br><span class="line">typedef long long ll;</span><br><span class="line">using namespace std;</span><br><span class="line">const int maxn = 1e5 + 10;</span><br><span class="line">struct node &#123;</span><br><span class="line">    int l, r, tag; // 该区间是否异或过1</span><br><span class="line">    ll s;</span><br><span class="line">&#125;a[25][maxn * 4];</span><br><span class="line">int num[maxn];</span><br><span class="line">inline void pushup(int k, int c) &#123;</span><br><span class="line">    a[c][k].s = a[c][lson].s + a[c][rson].s;</span><br><span class="line">    a[c][k].tag = 0;</span><br><span class="line">&#125;</span><br><span class="line">void build(int k, int c, int l, int r) &#123;</span><br><span class="line">    a[c][k].l = l, a[c][k].r = r;</span><br><span class="line">    if(l == r) &#123;</span><br><span class="line">        a[c][k].s = (num[l] &gt;&gt; (c - 1ll)) &amp; 1ll;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    int mid = (l + r) &gt;&gt; 1ll;</span><br><span class="line">    build(lson, c, l, mid);</span><br><span class="line">    build(rson, c, mid + 1, r);</span><br><span class="line">    pushup(k, c);</span><br><span class="line">&#125;</span><br><span class="line">void pushdown(int k, int c) &#123;</span><br><span class="line">    if(!a[c][k].tag) return;</span><br><span class="line">    a[c][lson].s = a[c][lson].r - a[c][lson].l + 1 - a[c][lson].s;</span><br><span class="line">    a[c][rson].s = a[c][rson].r - a[c][rson].l + 1 - a[c][rson].s;</span><br><span class="line">    a[c][lson].tag ^= 1, a[c][rson].tag ^= 1;</span><br><span class="line">    a[c][k].tag = 0;</span><br><span class="line">&#125;</span><br><span class="line">void add(int k, int c, int l, int r) &#123;</span><br><span class="line">    if(a[c][k].l &gt; r || a[c][k].r &lt; l) return;</span><br><span class="line">    if(a[c][k].l &gt;= l &amp;&amp; a[c][k].r &lt;= r) &#123;</span><br><span class="line">        a[c][k].s = a[c][k].r - a[c][k].l + 1 - a[c][k].s;</span><br><span class="line">        a[c][k].tag ^= 1;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    pushdown(k, c);</span><br><span class="line">    add(lson, c, l, r);</span><br><span class="line">    add(rson, c, l, r);</span><br><span class="line">    pushup(k, c);</span><br><span class="line">&#125;</span><br><span class="line">ll query(int k, int c, int l, int r) &#123;</span><br><span class="line">    if(a[c][k].l &gt; r || a[c][k].r &lt; l) return 0;</span><br><span class="line">    if(a[c][k].l &gt;= l &amp;&amp; a[c][k].r &lt;= r) return a[c][k].s;</span><br><span class="line">    pushdown(k, c);</span><br><span class="line">    return query(lson, c, l, r) + query(rson, c, l, r);</span><br><span class="line">&#125;</span><br><span class="line">signed main () </span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;n);</span><br><span class="line">    for (int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;num[i]);</span><br><span class="line">    for (int i = 1; i &lt;= 24; ++i) build(1, i, 1, n);</span><br><span class="line">    int op, l, r, k;</span><br><span class="line">    int m;</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;m);</span><br><span class="line">    while (m--) &#123;</span><br><span class="line">        scanf(&quot;%d%d%d&quot;, &amp;op, &amp;l, &amp;r);</span><br><span class="line">        if(op == 1) &#123;</span><br><span class="line">            ll ans = 0;</span><br><span class="line">            for (int i = 1; i &lt;= 24; ++i) ans += query(1, i, l, r) * (1ll &lt;&lt; (i - 1));</span><br><span class="line">            printf(&quot;%lld\n&quot;, ans);</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            scanf(&quot;%d&quot;, &amp;k);</span><br><span class="line">            if(k == 0) continue;</span><br><span class="line">            for (int i = 1; i &lt;= 24; ++i) &#123;</span><br><span class="line">                if(k &amp; 1) add(1, i, l, r);</span><br><span class="line">                k &gt;&gt;= 1;</span><br><span class="line">                if(!k) break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="11-4"><a href="#11-4" class="headerlink" title="11.4"></a>11.4</h1><h2 id="P2122-还教室"><a href="#P2122-还教室" class="headerlink" title="P2122 还教室"></a><a href="https://www.luogu.com.cn/problem/P2122">P2122 还教室</a></h2><p>维护区间方差与平均值，实际上维护区间的和以及平方和就可以了。</p><p>另：<strong>11-04 21:16:20 洛谷AC150题纪念。</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k &lt;&lt; 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k &lt;&lt; 1 | 1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, sum, tag, sqr;</span><br><span class="line">&#125;a[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> num[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[k].sum = a[lson].sum + a[rson].sum;</span><br><span class="line">    a[k].sqr = a[lson].sqr + a[rson].sqr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    a[k].l = l, a[k].r = r;</span><br><span class="line">    a[k].tag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        a[k].sum = num[l];</span><br><span class="line">        a[k].sqr = num[l] * num[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(lson, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(rson, mid + <span class="number">1</span>, r);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushtag</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    a[k].sqr += a[k].sum * <span class="number">2</span> * x + x * x * (a[k].r - a[k].l + <span class="number">1</span>);</span><br><span class="line">    a[k].sum += (a[k].r - a[k].l + <span class="number">1</span>) * x;</span><br><span class="line">    a[k].tag += x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].tag) &#123;</span><br><span class="line">        <span class="built_in">pushtag</span>(lson, a[k].tag);</span><br><span class="line">        <span class="built_in">pushtag</span>(rson, a[k].tag);</span><br><span class="line">        a[k].tag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt;= l &amp;&amp; a[k].r &lt;= r) &#123;</span><br><span class="line">        <span class="built_in">pushtag</span>(k, x);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="built_in">add</span>(lson, l, r, x);</span><br><span class="line">    <span class="built_in">add</span>(rson, l, r, x);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">querysum</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt;= l &amp;&amp; a[k].r &lt;= r) <span class="keyword">return</span> a[k].sum;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">querysum</span>(lson, l, r) + <span class="built_in">querysum</span>(rson, l, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">querysqr</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt;= l &amp;&amp; a[k].r &lt;= r) <span class="keyword">return</span> a[k].sqr;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">querysqr</span>(lson, l, r) + <span class="built_in">querysqr</span>(rson, l, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; num[i];</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">int</span> op, l, r, d;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(m--) &#123;</span><br><span class="line">        cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) &#123;</span><br><span class="line">            cin &gt;&gt; d;</span><br><span class="line">            <span class="built_in">add</span>(<span class="number">1</span>, l, r, d);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> res = <span class="built_in">querysum</span>(<span class="number">1</span>, l, r);</span><br><span class="line">            <span class="keyword">if</span>(res == <span class="number">0</span>) &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;0/1&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> ret = __gcd(res, r - l + <span class="number">1</span>);</span><br><span class="line">            cout &lt;&lt; res / ret &lt;&lt; <span class="string">&#x27;/&#x27;</span> &lt;&lt; (r - l + <span class="number">1</span>) / ret &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> res1 = <span class="built_in">querysum</span>(<span class="number">1</span>, l, r);</span><br><span class="line">            <span class="keyword">int</span> res2 = <span class="built_in">querysqr</span>(<span class="number">1</span>, l, r);</span><br><span class="line">            <span class="keyword">int</span> ret;</span><br><span class="line">            <span class="keyword">int</span> fz = res2 * (r - l + <span class="number">1</span>) - res1 * res1;</span><br><span class="line">            <span class="keyword">int</span> fm = (r - l + <span class="number">1</span>) * (r - l + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(fz == <span class="number">0</span>) &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;0/1&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ret = __gcd(fz, fm);</span><br><span class="line">            cout &lt;&lt; fz / ret &lt;&lt; <span class="string">&#x27;/&#x27;</span> &lt;&lt; fm / ret &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="11-9"><a href="#11-9" class="headerlink" title="11.9"></a>11.9</h1><h2 id="P4145-上帝造题的七分钟-2-花神游历各国"><a href="#P4145-上帝造题的七分钟-2-花神游历各国" class="headerlink" title="P4145 上帝造题的七分钟 2 / 花神游历各国"></a><a href="https://www.luogu.com.cn/problem/P4145">P4145 上帝造题的七分钟 2 / 花神游历各国</a></h2><p>看上去好像没法维护平方根数据结构，实际上 $10^{12}$ 内的数最多开方不到10次就成1了，遇到全为1的区间时停止修改即可。记这个最大次数为 $X$, 用线段树/树状数组维护的复杂度都是$O(Xn\log m)$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k &lt;&lt; 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k &lt;&lt; 1 | 1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, sum;</span><br><span class="line">&#125;a[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> num[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[k].sum = a[lson].sum + a[rson].sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    a[k].l = l, a[k].r = r;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        a[k].sum = num[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(lson, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(rson, mid + <span class="number">1</span>, r);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].r - a[k].l + <span class="number">1</span> == a[k].sum) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l == a[k].r) &#123;</span><br><span class="line">        a[k].sum = <span class="built_in">sqrt</span>(a[k].sum);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">change</span>(lson, l, r);</span><br><span class="line">    <span class="built_in">change</span>(rson, l, r);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt;= l &amp;&amp; a[k].r &lt;= r) <span class="keyword">return</span> a[k].sum;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">query</span>(lson, l, r) + <span class="built_in">query</span>(rson, l, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// freopen(&quot;in.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    <span class="comment">// freopen(&quot;out.txt&quot;, &quot;w&quot;, stdout);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; num[i];</span><br><span class="line">    cin &gt;&gt; m;</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">int</span> op, l, r;</span><br><span class="line">    <span class="keyword">while</span>(m--) &#123;</span><br><span class="line">        cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="keyword">if</span>(l &gt; r) <span class="built_in">swap</span>(l, r);</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">change</span>(<span class="number">1</span>, l, r);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">query</span>(<span class="number">1</span>, l, r) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="11-18"><a href="#11-18" class="headerlink" title="11.18"></a>11.18</h1><h2 id="P3803-【模板】多项式乘法（FFT）"><a href="#P3803-【模板】多项式乘法（FFT）" class="headerlink" title="P3803 【模板】多项式乘法（FFT）"></a><a href="https://www.luogu.com.cn/problem/P3803">P3803 【模板】多项式乘法（FFT）</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// op = 1 ? DFT : IDFT</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e6</span> + <span class="number">10</span>;</span><br><span class="line">complex &lt;<span class="keyword">double</span>&gt; F[maxn], G[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fft</span><span class="params">(complex&lt;<span class="keyword">double</span>&gt; f[], <span class="keyword">int</span> n, <span class="keyword">int</span> op)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!n) <span class="keyword">return</span>;</span><br><span class="line">    complex &lt;<span class="keyword">double</span>&gt; a[n], b[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; ++k) &#123;</span><br><span class="line">        a[k] = f[k &lt;&lt; <span class="number">1</span>], b[k] = f[k &lt;&lt; <span class="number">1</span> | <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fft</span>(a, n &gt;&gt; <span class="number">1</span>, op), <span class="built_in">fft</span>(b, n &gt;&gt; <span class="number">1</span>, op);</span><br><span class="line">    <span class="function">complex&lt;<span class="keyword">double</span>&gt; <span class="title">wn</span><span class="params">(cos(PI / n), sin(PI / n) * op)</span>, <span class="title">w</span><span class="params">(<span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; ++k, w *= wn) &#123;</span><br><span class="line">        f[k] = a[k] + w * b[k], f[k + n] = a[k] - w * b[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;F[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;G[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    m += n, n = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n &lt;= m) n &lt;&lt;= <span class="number">1</span>; <span class="comment">// 补足系数，保证是2的幂次</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// DFT</span></span><br><span class="line">    <span class="built_in">fft</span>(F, n &gt;&gt; <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">fft</span>(G, n &gt;&gt; <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) F[i] *= G[i];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IDFT</span></span><br><span class="line">    <span class="built_in">fft</span>(F, n &gt;&gt; <span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.0f &quot;</span>, <span class="built_in">fabs</span>(F[i].<span class="built_in">real</span>()) / n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>11.21的NTT写法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// op = 1 ? DFT : IDFT</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> F[maxn], G[maxn];</span><br><span class="line"><span class="keyword">int</span> r[maxn];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fpow</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p) &#123;</span><br><span class="line">        <span class="keyword">if</span>(p &amp; <span class="number">1</span>) ans = (ans * a) % mod;</span><br><span class="line">        a = (a * a) % mod;</span><br><span class="line">        p &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ntt</span><span class="params">(<span class="keyword">int</span> f[], <span class="keyword">int</span> n, <span class="keyword">int</span> op)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!n) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; r[i]) <span class="built_in">swap</span>(f[i], f[r[i]]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> mid = <span class="number">1</span>; mid &lt; n; mid &lt;&lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> wn = <span class="built_in">fpow</span>(op == <span class="number">1</span> ? <span class="number">3</span> : <span class="number">332748118</span>, (mod - <span class="number">1</span>) / (mid &lt;&lt; <span class="number">1</span>));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j += (mid &lt;&lt; <span class="number">1</span>)) &#123;</span><br><span class="line">            <span class="keyword">int</span> w = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; mid; ++k, w = w * wn % mod) &#123;</span><br><span class="line">                <span class="keyword">int</span> x = f[j + k], y = w * f[j + k + mid] % mod;</span><br><span class="line">                f[j + k] = (x + y) % mod;</span><br><span class="line">                f[j + k + mid] = ((x - y) % mod + mod) % mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;F[i]);</span><br><span class="line">        F[i] = (F[i] + mod) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        G[i] = (G[i] + mod) % mod;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;G[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    m += n, n = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n &lt;= m) n &lt;&lt;= <span class="number">1</span>, cnt++; <span class="comment">// 补足系数，保证是2的幂次</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) r[i] = (r[i &gt;&gt; <span class="number">1</span>] &gt;&gt; <span class="number">1</span>) | ((i &amp; <span class="number">1</span>) &lt;&lt; (cnt - <span class="number">1</span>));</span><br><span class="line">    <span class="comment">// DFT</span></span><br><span class="line">    <span class="built_in">ntt</span>(F, n, <span class="number">1</span>), <span class="built_in">ntt</span>(G, n, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) F[i] = (F[i] * G[i]) % mod;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IDFT</span></span><br><span class="line">    <span class="built_in">ntt</span>(F, n, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">int</span> inv = <span class="built_in">fpow</span>(n, mod - <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld &quot;</span>, (F[i] * inv) % mod);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="11-23"><a href="#11-23" class="headerlink" title="11.23"></a>11.23</h1><h2 id="P3389-【模板】高斯消元法"><a href="#P3389-【模板】高斯消元法" class="headerlink" title="P3389 【模板】高斯消元法"></a><a href="https://www.luogu.com.cn/problem/P3389">P3389 【模板】高斯消元法</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(2)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">105</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> a[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n + <span class="number">1</span>; ++j) &#123;</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> mx = i;</span><br><span class="line">        <span class="comment">// 选出该列最大系数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">fabs</span>(a[j][i]) &gt; <span class="built_in">fabs</span>(a[mx][i])) &#123;</span><br><span class="line">                mx = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n + <span class="number">1</span>; ++j) &#123;</span><br><span class="line">            <span class="built_in">swap</span>(a[i][j], a[mx][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!a[i][i]) &#123;</span><br><span class="line">            <span class="comment">// Solution not </span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;No Solution&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span>(j != i) &#123;</span><br><span class="line">                <span class="keyword">double</span> tmp = a[j][i] / a[i][i];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = i + <span class="number">1</span>; k &lt;= n + <span class="number">1</span>; ++k) &#123;</span><br><span class="line">                    a[j][k] -= a[i][k] * tmp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        cout &lt;&lt; a[i][n + <span class="number">1</span>] / a[i][i] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="11-25"><a href="#11-25" class="headerlink" title="11.25"></a>11.25</h1><h2 id="CF438D-The-Child-and-Sequence"><a href="#CF438D-The-Child-and-Sequence" class="headerlink" title="CF438D The Child and Sequence"></a><a href="https://www.luogu.com.cn/problem/CF438D">CF438D The Child and Sequence</a></h2><p>类似P4145，每个点被修改的次数有限，可以适当暴力</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k &lt;&lt; 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k &lt;&lt; 1 | 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, sum, mx, add;</span><br><span class="line">&#125;a[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> num[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[k].sum = a[lson].sum + a[rson].sum;</span><br><span class="line">    a[k].mx = <span class="built_in">max</span>(a[lson].mx, a[rson].mx);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    a[k].l = l, a[k].r = r;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        a[k].sum = num[l];</span><br><span class="line">        a[k].mx = num[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(lson, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(rson, mid + <span class="number">1</span>, r);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[lson].sum += a[k].add;</span><br><span class="line">    a[rson].sum += a[k].add;</span><br><span class="line">    a[lson].mx += a[k].add;</span><br><span class="line">    a[rson].mx += a[k].add;</span><br><span class="line">    a[lson].add += a[k].add;</span><br><span class="line">    a[rson].add += a[k].add;</span><br><span class="line">    a[k].add = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mod</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].mx &lt; p) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l == a[k].r) &#123;</span><br><span class="line">        a[k].sum %= p;</span><br><span class="line">        a[k].mx = a[k].sum;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="built_in">mod</span>(lson, l, r, p);</span><br><span class="line">    <span class="built_in">mod</span>(rson, l, r, p);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; l || a[k].r &lt; l) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l == a[k].r) &#123;</span><br><span class="line">        a[k].sum = x;</span><br><span class="line">        a[k].mx = x;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="built_in">change</span>(lson, l, x);</span><br><span class="line">    <span class="built_in">change</span>(rson, l, x);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt;= l &amp;&amp; a[k].r &lt;= r) &#123;</span><br><span class="line">        <span class="keyword">return</span> a[k].sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">query</span>(lson, l, r) + <span class="built_in">query</span>(rson, l, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;num[i]);</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">int</span> op, l, r, x;</span><br><span class="line">    <span class="keyword">while</span>(m--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;op, &amp;l, &amp;r);</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">query</span>(<span class="number">1</span>, l, r));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;x);</span><br><span class="line">            <span class="built_in">mod</span>(<span class="number">1</span>, l, r, x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="built_in">change</span>(<span class="number">1</span>, l, r);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CF1000F-One-Occurrence"><a href="#CF1000F-One-Occurrence" class="headerlink" title="CF1000F One Occurrence"></a><a href="https://www.luogu.com.cn/problem/CF1000F">CF1000F One Occurrence</a></h2><p>卡常的道路越走越远（</p><p>又是用根号算法卡 $\log$ 的 std （逃</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(3)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(<span class="meta-string">&quot;Ofast&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rint register int</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">query</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">    <span class="keyword">int</span> idx, blc;</span><br><span class="line">&#125;q[maxn];</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> mp[maxn];</span><br><span class="line"><span class="keyword">int</span> pos[maxn];</span><br><span class="line"><span class="keyword">int</span> stk[maxn];</span><br><span class="line"><span class="keyword">int</span> top = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> query&amp; x, <span class="keyword">const</span> query&amp; y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.blc == y.blc) <span class="keyword">if</span>(x.blc &amp; <span class="number">1</span>) <span class="keyword">return</span> x.r &lt; y.r; <span class="keyword">else</span> <span class="keyword">return</span> x.r &gt; y.r;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> x.l &lt; y.l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">gc</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">char</span> buf[<span class="number">100000</span>],*p1=buf,*p2=buf;</span><br><span class="line">    <span class="keyword">return</span> p1==p2&amp;&amp;(p2=(p1=buf)+<span class="built_in">fread</span>(buf,<span class="number">1</span>,<span class="number">100000</span>,stdin),p1==p2)?EOF:*p1++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> c = <span class="built_in">gc</span>();</span><br><span class="line"><span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span>||c&gt;<span class="string">&#x27;9&#x27;</span>) c = <span class="built_in">gc</span>();</span><br><span class="line"><span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">x = (x&lt;&lt;<span class="number">3</span>)+(x&lt;&lt;<span class="number">1</span>)+(c^<span class="number">48</span>);</span><br><span class="line">c = <span class="built_in">gc</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (rint i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">read</span>(a[i]);</span><br><span class="line">    <span class="built_in">read</span>(m);</span><br><span class="line">    <span class="keyword">int</span> u = (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (rint i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">read</span>(q[i].l);</span><br><span class="line">        <span class="built_in">read</span>(q[i].r);</span><br><span class="line">        q[i].idx = i;</span><br><span class="line">        q[i].blc = (q[i].l - <span class="number">1</span>) / u + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(q + <span class="number">1</span>, q + <span class="number">1</span> + m, cmp);</span><br><span class="line">    stk[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    rint l = <span class="number">1</span>, r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (rint i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="keyword">while</span>(l &gt; q[i].l) &#123;</span><br><span class="line">            l--;</span><br><span class="line">            mp[a[l]]++;</span><br><span class="line">            <span class="keyword">if</span>(mp[a[l]] == <span class="number">1</span>) &#123;</span><br><span class="line">                stk[++top] = a[l];</span><br><span class="line">                pos[a[l]] = top;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(mp[a[l]] == <span class="number">2</span>) &#123;</span><br><span class="line">                stk[pos[a[l]]] = stk[top];</span><br><span class="line">                pos[stk[top]] = pos[a[l]];</span><br><span class="line">                stk[top--] = pos[a[l]] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(r &lt; q[i].r) &#123;</span><br><span class="line">            r++;</span><br><span class="line">            mp[a[r]]++;</span><br><span class="line">            <span class="keyword">if</span>(mp[a[r]] == <span class="number">1</span>) &#123;</span><br><span class="line">                stk[++top] = a[r];</span><br><span class="line">                pos[a[r]] = top;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(mp[a[r]] == <span class="number">2</span>) &#123;</span><br><span class="line">                stk[pos[a[r]]] = stk[top];</span><br><span class="line">                pos[stk[top]] = pos[a[r]];</span><br><span class="line">                stk[top--] = pos[a[r]] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(l &lt; q[i].l) &#123;</span><br><span class="line">            mp[a[l]]--;</span><br><span class="line">            <span class="keyword">if</span>(mp[a[l]] == <span class="number">1</span>) &#123;</span><br><span class="line">                stk[++top] = a[l];</span><br><span class="line">                pos[a[l]] = top;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(mp[a[l]] == <span class="number">0</span>) &#123;</span><br><span class="line">                stk[pos[a[l]]] = stk[top];</span><br><span class="line">                pos[stk[top]] = pos[a[l]];</span><br><span class="line">                stk[top--] = pos[a[l]] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(r &gt; q[i].r) &#123;</span><br><span class="line">            mp[a[r]]--;</span><br><span class="line">            <span class="keyword">if</span>(mp[a[r]] == <span class="number">1</span>) &#123;</span><br><span class="line">                stk[++top] = a[r];</span><br><span class="line">                pos[a[r]] = top;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(mp[a[r]] == <span class="number">0</span>) &#123;</span><br><span class="line">                stk[pos[a[r]]] = stk[top];</span><br><span class="line">                pos[stk[top]] = pos[a[r]];</span><br><span class="line">                stk[top--] = pos[a[r]] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            r--;</span><br><span class="line">        &#125;</span><br><span class="line">        ans[q[i].idx] = stk[top];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (rint i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2184-贪婪大陆"><a href="#P2184-贪婪大陆" class="headerlink" title="P2184 贪婪大陆"></a><a href="https://www.luogu.com.cn/problem/P2184">P2184 贪婪大陆</a></h2><p>一次过，今天码力在线qwq</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k &lt;&lt; 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k &lt;&lt; 1 | 1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">    <span class="keyword">int</span> pre, lst;</span><br><span class="line">    <span class="keyword">int</span> tp, tl;</span><br><span class="line">&#125;a[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> num[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    a[k].l = l, a[k].r = r;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(lson, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(rson, mid + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[k].pre = a[lson].pre + a[rson].pre;</span><br><span class="line">    a[k].lst = a[lson].lst + a[rson].lst;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushtag</span> <span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    a[k].tp += x;</span><br><span class="line">    a[k].pre += x;</span><br><span class="line">    a[k].lst += y;</span><br><span class="line">    a[k].tl += y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">pushtag</span>(lson, a[k].tp, a[k].tl);</span><br><span class="line">    <span class="built_in">pushtag</span>(rson, a[k].tp, a[k].tl);</span><br><span class="line">    a[k].tp = a[k].tl = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt;= l &amp;&amp; a[k].r &lt;= r) &#123;</span><br><span class="line">        <span class="keyword">if</span>(type == <span class="number">1</span>) a[k].pre++, a[k].tp++;</span><br><span class="line">        <span class="keyword">else</span> a[k].lst++, a[k].tl++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="built_in">add</span>(lson, l, r, type);</span><br><span class="line">    <span class="built_in">add</span>(rson, l, r, type);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; x || a[k].r &lt; x) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l == a[k].r) &#123;</span><br><span class="line">        <span class="keyword">if</span>(type == <span class="number">1</span>) <span class="keyword">return</span> a[k].pre;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> a[k].lst;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">query</span>(lson, x, type) + <span class="built_in">query</span>(rson, x, type);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>, <span class="number">0</span>, n);</span><br><span class="line">    <span class="keyword">int</span> q, l, r;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;q, &amp;l, &amp;r);</span><br><span class="line">        <span class="keyword">if</span>(q == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">add</span>(<span class="number">1</span>, l, n, <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">add</span>(<span class="number">1</span>, r, n, <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="built_in">query</span>(<span class="number">1</span>, r, <span class="number">1</span>);</span><br><span class="line">            ans -= <span class="built_in">query</span>(<span class="number">1</span>, l - <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="11-28"><a href="#11-28" class="headerlink" title="11.28"></a>11.28</h1><h2 id="P1637-三元上升子序列"><a href="#P1637-三元上升子序列" class="headerlink" title="P1637 三元上升子序列"></a><a href="https://www.luogu.com.cn/problem/P1637">P1637 三元上升子序列</a></h2><p>维护两个树状数组</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> c[maxn];</span><br><span class="line"><span class="keyword">int</span> d[maxn];</span><br><span class="line"><span class="keyword">int</span> b[maxn];</span><br><span class="line">map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mp;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> pos;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(k &lt;= pos) &#123;</span><br><span class="line">        c[k] += x;</span><br><span class="line">        k += <span class="built_in">lowbit</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">        ans += c[x];</span><br><span class="line">        x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add2</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(k &lt;= pos) &#123;</span><br><span class="line">        d[k] += x;</span><br><span class="line">        k += <span class="built_in">lowbit</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query2</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">        ans += d[x];</span><br><span class="line">        x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]), b[i] = a[i];</span><br><span class="line">    <span class="built_in">sort</span>(b + <span class="number">1</span>, b + <span class="number">1</span> + n);</span><br><span class="line">    b[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i] != b[i - <span class="number">1</span>]) &#123;</span><br><span class="line">            mp[b[i]] = ++pos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">add2</span>(mp[a[i]], <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">add2</span>(mp[a[i]], <span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">int</span> r1 = <span class="built_in">query</span>(mp[a[i]] - <span class="number">1</span>), r2 = <span class="built_in">query2</span>(pos) - <span class="built_in">query2</span>(mp[a[i]]);</span><br><span class="line">        ans += r1 * r2;</span><br><span class="line">        <span class="built_in">add</span>(mp[a[i]], <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="12-9"><a href="#12-9" class="headerlink" title="12.9"></a>12.9</h1><p>回新手村练练手，希望重新找回A题的快感，停止自闭……手太生了，感觉特别差…….明明没有休整几天的说（也有十来天了吧喂！）。总之，必须快点重整旗鼓。</p><p>今日目标：刷完洛谷贪心题单（整个题单就没有难题啊喂！）。</p><h2 id="P1803-凌乱的yyy-线段覆盖"><a href="#P1803-凌乱的yyy-线段覆盖" class="headerlink" title="P1803 凌乱的yyy / 线段覆盖"></a><a href="https://www.luogu.com.cn/problem/P1803">P1803 凌乱的yyy / 线段覆盖</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> r &lt; x.r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i].l &gt;&gt; a[i].r;</span><br><span class="line">    <span class="built_in">sort</span> (a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> now = a[<span class="number">1</span>].r;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i].l &gt;= now) &#123;</span><br><span class="line">            ans++;</span><br><span class="line">            now = a[i].r;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2240-【深基12-例1】部分背包问题"><a href="#P2240-【深基12-例1】部分背包问题" class="headerlink" title="P2240 【深基12.例1】部分背包问题"></a><a href="https://www.luogu.com.cn/problem/P2240">P2240 【深基12.例1】部分背包问题</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">double</span> ans;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">105</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> weight;</span><br><span class="line">    <span class="keyword">double</span> x; <span class="comment">// 单位价值</span></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;y) &#123;</span><br><span class="line">        <span class="keyword">return</span> x &gt; y.x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, t;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; t;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        a[i].weight = x;</span><br><span class="line">        a[i].x = <span class="number">1.0</span> * y / x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i].weight &gt; t) &#123;</span><br><span class="line">            ans += a[i].x * t;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans += a[i].x * a[i].weight;</span><br><span class="line">        t -= a[i].weight;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1223-排队接水"><a href="#P1223-排队接水" class="headerlink" title="P1223 排队接水"></a><a href="https://www.luogu.com.cn/problem/P1223">P1223 排队接水</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">1005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, id;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp; y) &#123;</span><br><span class="line">        <span class="keyword">return</span> x &lt; y.x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) a[i].id = i, cin &gt;&gt; a[i].x;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cout &lt;&lt; a[i].id &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        ans += (n - i) * a[i].x;</span><br><span class="line">    &#125;</span><br><span class="line">    ans /= n;</span><br><span class="line">    cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3817-小A的糖果"><a href="#P3817-小A的糖果" class="headerlink" title="P3817 小A的糖果"></a><a href="https://www.luogu.com.cn/problem/P3817">P3817 小A的糖果</a></h2><p>不开<code>long long</code>见祖宗！</p><p>我怎么就是甜蜜的改不过来？？？？</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n, x;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] + a[i - <span class="number">1</span>] &gt; x) &#123;</span><br><span class="line">            ans += a[i] + a[i - <span class="number">1</span>] - x;</span><br><span class="line">            a[i] = x - a[i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1106-删数问题"><a href="#P1106-删数问题" class="headerlink" title="P1106 删数问题"></a><a href="https://www.luogu.com.cn/problem/P1106">P1106 删数问题</a></h2><p>删峰即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">255</span>;</span><br><span class="line"><span class="keyword">bool</span> v[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    cin &gt;&gt; k;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; ++i) &#123;</span><br><span class="line">        <span class="comment">// 去前导0</span></span><br><span class="line">        <span class="keyword">while</span> (v[l] || s[l] == <span class="string">&#x27;0&#x27;</span>) l++;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = l; j &lt; s.<span class="built_in">size</span>(); ) &#123;</span><br><span class="line">            <span class="keyword">while</span> (j &lt; s.<span class="built_in">size</span>() &amp;&amp; v[j]) j++;</span><br><span class="line">            <span class="keyword">int</span> p1 = j++;</span><br><span class="line">            <span class="keyword">while</span> (j &lt; s.<span class="built_in">size</span>() &amp;&amp; v[j]) j++;</span><br><span class="line">            <span class="keyword">if</span> (p1 &lt; s.<span class="built_in">size</span>() &amp;&amp; (j &gt;= s.<span class="built_in">size</span>() || s[p1] &gt; s[j])) &#123;</span><br><span class="line">                v[p1] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt; s.<span class="built_in">size</span>(); ++i) <span class="keyword">if</span>(!v[i]) cout &lt;&lt; s[i];</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.luogu.com.cn/problem/P1478">P1478 陶陶摘苹果（升级版）</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;other) &#123;</span><br><span class="line">        <span class="keyword">return</span> y &lt; other.y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n, s;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; s;</span><br><span class="line">    <span class="keyword">int</span> u, v;</span><br><span class="line">    cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i].x &gt;&gt; a[i].y;</span><br><span class="line">    <span class="built_in">sort</span> (a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i].x &lt;= u + v &amp;&amp; a[i].y &lt;= s) &#123;</span><br><span class="line">            s -= a[i].y;</span><br><span class="line">            ans ++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P4447-AHOI2018初中组-分组"><a href="#P4447-AHOI2018初中组-分组" class="headerlink" title="P4447 [AHOI2018初中组]分组"></a><a href="https://www.luogu.com.cn/problem/P4447">P4447 [AHOI2018初中组]分组</a></h2><p>蒟蒻跪了orz</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line">map&lt;<span class="keyword">int</span>, priority_queue&lt;<span class="keyword">int</span>, vector&lt;<span class="keyword">int</span>&gt;, greater&lt;<span class="keyword">int</span>&gt;&gt;&gt; mp;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mp[a[i] - <span class="number">1</span>].<span class="built_in">empty</span>()) &#123;</span><br><span class="line">            mp[a[i]].<span class="built_in">push</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> r = mp[a[i] - <span class="number">1</span>].<span class="built_in">top</span>();</span><br><span class="line">            mp[a[i] - <span class="number">1</span>].<span class="built_in">pop</span>();</span><br><span class="line">            mp[a[i]].<span class="built_in">push</span>(r + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;x : mp) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.second.<span class="built_in">empty</span>()) <span class="keyword">continue</span>;</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, (<span class="keyword">int</span>)x.second.<span class="built_in">top</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1094-NOIP2007-普及组-纪念品分组"><a href="#P1094-NOIP2007-普及组-纪念品分组" class="headerlink" title="P1094 [NOIP2007 普及组] 纪念品分组"></a><a href="https://www.luogu.com.cn/problem/P1094">P1094 [NOIP2007 普及组] 纪念品分组</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">bool</span> v[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> w;</span><br><span class="line">    cin &gt;&gt; w;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="comment">// int cnt = 0;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">        <span class="keyword">while</span> (r &gt; l &amp;&amp; a[l] + a[r] &gt; w) r--;</span><br><span class="line">        <span class="keyword">if</span> (r &gt; l) &#123;</span><br><span class="line">            ans++;</span><br><span class="line">            v[l] = <span class="number">1</span>;</span><br><span class="line">            v[r] = <span class="number">1</span>;</span><br><span class="line">            l++;</span><br><span class="line">            r--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="keyword">if</span>(!v[i]) ans++;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="12-14"><a href="#12-14" class="headerlink" title="12.14"></a>12.14</h1><h2 id="P3369-【模板】普通平衡树"><a href="#P3369-【模板】普通平衡树" class="headerlink" title="P3369 【模板】普通平衡树"></a><a href="https://www.luogu.com.cn/problem/P3369">P3369 【模板】普通平衡树</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="keyword">int</span> root;</span><br><span class="line"><span class="comment">// 注意按p是小根堆</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, size, val, p;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[k].size = <span class="number">1</span> + a[a[k].l].size + a[a[k].r].size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rrotate</span><span class="params">(<span class="keyword">int</span> &amp;k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = a[k].l;</span><br><span class="line">    a[k].l = a[tmp].r;</span><br><span class="line">    a[tmp].r = k;</span><br><span class="line">    a[tmp].size = a[k].size;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">    k = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lrotate</span><span class="params">(<span class="keyword">int</span> &amp;k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = a[k].r;</span><br><span class="line">    a[k].r = a[tmp].l;</span><br><span class="line">    a[tmp].l = k;</span><br><span class="line">    a[tmp].size = a[k].size;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">    k = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> &amp;k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k == <span class="number">0</span>) &#123;</span><br><span class="line">        k = ++cnt;</span><br><span class="line">        a[k].val = val;</span><br><span class="line">        a[k].p = <span class="built_in">rand</span>();</span><br><span class="line">        a[k].size = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a[k].size++;</span><br><span class="line">    <span class="keyword">if</span> (val &gt;= a[k].val) &#123;</span><br><span class="line">        <span class="built_in">ins</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">ins</span>(a[k].l, val);</span><br><span class="line">    <span class="keyword">if</span> (a[k].l &amp;&amp; a[k].p &gt; a[a[k].l].p) &#123;</span><br><span class="line">        <span class="built_in">rrotate</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[k].r &amp;&amp; a[k].p &gt; a[a[k].r].p) &#123;</span><br><span class="line">        <span class="built_in">lrotate</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> &amp;k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    a[k].size--;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val == val) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!a[k].l &amp;&amp; !a[k].r) &#123;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!a[k].l || !a[k].r) &#123;</span><br><span class="line">            k = a[k].l + a[k].r;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a[a[k].l].p &lt; a[a[k].r].p) &#123;</span><br><span class="line">            <span class="built_in">rrotate</span>(k);</span><br><span class="line">            <span class="built_in">del</span>(a[k].r, val); <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">lrotate</span>(k);</span><br><span class="line">            <span class="built_in">del</span>(a[k].l, val); <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val &gt;= val) &#123;</span><br><span class="line">        <span class="built_in">del</span>(a[k].l, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">del</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rk</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (val &gt; a[k].val) &#123;</span><br><span class="line">        <span class="keyword">return</span> a[a[k].l].size + <span class="built_in">rk</span>(a[k].r, val) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">rk</span>(a[k].l, val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> rnk)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (rnk == a[a[k].l].size + <span class="number">1</span>) <span class="keyword">return</span> a[k].val;</span><br><span class="line">    <span class="keyword">if</span> (rnk &gt; a[a[k].l].size + <span class="number">1</span>) <span class="keyword">return</span> <span class="built_in">find</span>(a[k].r, rnk - a[a[k].l].size - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">find</span>(a[k].l, rnk);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query_pre</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val &gt;= val) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">query_pre</span>(a[k].l, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="built_in">query_pre</span>(a[k].r, val);</span><br><span class="line">    <span class="keyword">if</span> (!tmp) <span class="keyword">return</span> a[k].val;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query_suf</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val &lt;= val) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">query_suf</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="built_in">query_suf</span>(a[k].l, val);</span><br><span class="line">    <span class="keyword">if</span> (!tmp) <span class="keyword">return</span> a[k].val;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> opt, x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        cin &gt;&gt; opt &gt;&gt; x;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">ins</span>(root, x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="built_in">del</span>(root, x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">3</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">rk</span>(root, x) + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">4</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">find</span>(root, x) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">5</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">query_pre</span>(root, x) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="built_in">query_suf</span>(root, x) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="1-17"><a href="#1-17" class="headerlink" title="1.17"></a>1.17</h1><h2 id="P1878-舞蹈课"><a href="#P1878-舞蹈课" class="headerlink" title="P1878 舞蹈课 "></a><a href="https://www.luogu.com.cn/problem/P1878">P1878 舞蹈课 </a></h2><p>康复训练，排序规则又不写完整。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">bool</span> type[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">mate</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, c;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> mate &amp; another) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (c == another.c) <span class="keyword">return</span> l &gt; another.l;</span><br><span class="line">        <span class="keyword">return</span> c &gt; another.c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;mate&gt; ans;</span><br><span class="line">priority_queue&lt;mate&gt; q;</span><br><span class="line"><span class="keyword">bool</span> v[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    s = <span class="string">&#x27;1&#x27;</span> + s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        type[i] = s[i] == <span class="string">&#x27;B&#x27;</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (type[i] != type[i + <span class="number">1</span>]) &#123;</span><br><span class="line">            q.<span class="built_in">push</span>(&#123;i, i + <span class="number">1</span>, <span class="built_in">abs</span>(a[i] - a[i + <span class="number">1</span>])&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="keyword">while</span> (v[q.<span class="built_in">top</span>().l] || v[q.<span class="built_in">top</span>().r]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">        &#125; <span class="keyword">if</span> (q.<span class="built_in">empty</span>()) <span class="keyword">break</span>;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(q.<span class="built_in">top</span>());</span><br><span class="line">        <span class="keyword">int</span> l = q.<span class="built_in">top</span>().l, r = q.<span class="built_in">top</span>().r;</span><br><span class="line">        v[q.<span class="built_in">top</span>().l] = v[q.<span class="built_in">top</span>().r] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (v[l] &amp;&amp; l &gt;= <span class="number">1</span>) l--;</span><br><span class="line">        <span class="keyword">while</span> (v[r] &amp;&amp; r &lt;= n) r++;</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (l &gt;= <span class="number">1</span> &amp;&amp; r &lt;= n &amp;&amp; type[l] != type[r]) q.<span class="built_in">push</span>(&#123;l, r, <span class="built_in">abs</span>(a[l] - a[r])&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp; x : ans) &#123;</span><br><span class="line">        cout &lt;&lt; x.l &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; x.r &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="1-19"><a href="#1-19" class="headerlink" title="1.19"></a>1.19</h1><h2 id="P1040-NOIP2003-提高组-加分二叉树"><a href="#P1040-NOIP2003-提高组-加分二叉树" class="headerlink" title="P1040 [NOIP2003 提高组] 加分二叉树"></a><a href="https://www.luogu.com.cn/problem/P1040">P1040 [NOIP2003 提高组] 加分二叉树</a></h2><p>区间DP.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">105</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn]; <span class="comment">// 从i到j的子树答案</span></span><br><span class="line"><span class="keyword">int</span> rt[maxn][maxn]; <span class="comment">// 根是谁</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 前序：根 左 右</span></span><br><span class="line">    <span class="keyword">if</span> (l &gt; r) <span class="keyword">return</span>;</span><br><span class="line">    cout &lt;&lt; rt[l][r] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (l == r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">dfs</span>(l, rt[l][r] - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">dfs</span>(rt[l][r] + <span class="number">1</span>, r);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        dp[i][i] = a[i];</span><br><span class="line">        rt[i][i] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> len = <span class="number">2</span>; len &lt;= n; ++len) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i + len - <span class="number">1</span> &lt;= n; ++i) &#123;</span><br><span class="line">            <span class="comment">// 枚举根</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt;= i + len - <span class="number">1</span>; ++j) &#123;</span><br><span class="line">                <span class="comment">// dp[i][i + len - 1] = max(dp[i][i + len - 1], max(1ll, dp[i][j - 1]) * max(1ll, dp[j + 1][i + len - 1]) + a[j]);</span></span><br><span class="line">                <span class="keyword">int</span> l = <span class="built_in">max</span>(<span class="number">1ll</span>, dp[i][j - <span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">int</span> r = <span class="built_in">max</span>(<span class="number">1ll</span>, dp[j + <span class="number">1</span>][i + len - <span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">if</span> (l * r + a[j] &gt; dp[i][i + len - <span class="number">1</span>]) &#123;</span><br><span class="line">                    rt[i][i + len - <span class="number">1</span>] = j;</span><br><span class="line">                    dp[i][i + len - <span class="number">1</span>] = l * r + a[j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; dp[<span class="number">1</span>][n] &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P5020-NOIP2018-提高组-货币系统"><a href="#P5020-NOIP2018-提高组-货币系统" class="headerlink" title="P5020 [NOIP2018 提高组] 货币系统"></a><a href="https://www.luogu.com.cn/problem/P5020">P5020 [NOIP2018 提高组] 货币系统</a></h2><p>背包</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">105</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">bool</span> v[<span class="number">25005</span>];</span><br><span class="line"><span class="keyword">int</span> dp[(<span class="keyword">int</span>)<span class="number">3e6</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">            cin &gt;&gt; a[i];</span><br><span class="line">            v[a[i]] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> mx = a[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a[n]; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i - a[j] &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span> (dp[i - a[j]]) &#123;</span><br><span class="line">                    dp[i] = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (v[i] &amp;&amp; !dp[i]) &#123;</span><br><span class="line">                dp[i] = <span class="number">1</span>;</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) v[a[i]] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a[n]; ++i) dp[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;9-23&quot;&gt;&lt;a href=&quot;#9-23&quot; class=&quot;headerlink&quot; title=&quot;9.23&quot;&gt;&lt;/a&gt;9.23&lt;/h1&gt;&lt;h2 id=&quot;P2032-扫描&quot;&gt;&lt;a href=&quot;#P2032-扫描&quot; class=&quot;headerl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 114 (Rated for Div. 2) 个人题解</title>
    <link href="https://eykenis.github.io/2021/09/21/Educational-Codeforces-Round-114-Rated-for-Div-2-%E4%B8%AA%E4%BA%BA%E9%A2%98%E8%A7%A3/"/>
    <id>https://eykenis.github.io/2021/09/21/Educational-Codeforces-Round-114-Rated-for-Div-2-%E4%B8%AA%E4%BA%BA%E9%A2%98%E8%A7%A3/</id>
    <published>2021-09-21T03:03:16.000Z</published>
    <updated>2021-09-21T05:41:14.711Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Regular-Bracket-Sequences"><a href="#A-Regular-Bracket-Sequences" class="headerlink" title="A. Regular Bracket Sequences"></a>A. Regular Bracket Sequences</h1><p><strong>题意</strong></p><p>输出$n$个不同的长度为$2n$的合法括号序列.</p><p><strong>分析</strong></p><p>先输出一个”()()()…”序列.</p><p>然后依次输出”(())()”, “()(())”,…，也就是每次把第$i$个和第$i+1$个交换，其中$i$从下标2到n-2，这样恰好$n-1$个，加上最开始的共$n$个。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        string s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">            s += <span class="string">&#x27;(&#x27;</span>;</span><br><span class="line">            s += <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i + <span class="number">1</span> &lt; s.<span class="built_in">size</span>(); i += <span class="number">2</span>)&#123;</span><br><span class="line">            s[i] = <span class="string">&#x27;(&#x27;</span>;</span><br><span class="line">            s[i + <span class="number">1</span>] = <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">            cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">            s[i] = <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">            s[i + <span class="number">1</span>] = <span class="string">&#x27;(&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Combinatorics-Homework"><a href="#B-Combinatorics-Homework" class="headerlink" title="B. Combinatorics Homework"></a>B. Combinatorics Homework</h1><p><strong>题意</strong></p><p>你需要判断是否存在一个字符串：</p><ol><li>恰好a个’A’，b个’B’，c个‘C’</li><li>没有其他字符</li><li>恰好m对相邻且相同的字符对（如”AA”）</li></ol><p><strong>分析</strong></p><p>目标是寻找可以满足要求的$m$取值范围。</p><p>将三种字符的数量排序，找到其个数最多的，假设为’A’，记’B’和’C’的数量和为$s$。</p><p>$m$最大取值显然是$a+b+c-3$.</p><p>找$m$的最小值。把$s$个字符排开，其有$s+1$个位置可以插入’A’。若’A’的数量不超过$s+1$，那么肯定可以达到最小状态，即不存在相邻且相同的字符对。可能会想到’A’没有填满所有空缺时有可能’B’或者’C’会出现连续的情况，但其实这种情况发生的话’A’肯定就不是个数最多的了。反之，若’A’的数量超过了$s+1$，那么至少出现的相同字符对就是$s+1-a$对。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a, b, c, m;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; m;</span><br><span class="line">        <span class="keyword">int</span> mx = a + b + c - <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span> p[<span class="number">3</span>] = &#123;a, b, c&#125;;</span><br><span class="line">        <span class="built_in">sort</span>(p, p + <span class="number">3</span>);</span><br><span class="line">        <span class="keyword">int</span> r2 = p[<span class="number">0</span>] + p[<span class="number">1</span>] + <span class="number">1</span>, r1 = p[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">int</span> mn = <span class="built_in">max</span>(<span class="number">0LL</span>, r1 - r2);</span><br><span class="line">        <span class="keyword">if</span>(mx &gt;= m &amp;&amp; mn &lt;= m)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h1 id="C-Slay-the-Dragon"><a href="#C-Slay-the-Dragon" class="headerlink" title="C. Slay the Dragon"></a>C. Slay the Dragon</h1><p><strong>题意</strong></p><p>有$m$条龙和$n$个勇士，每个勇士的力量是$a_i$，每个龙的防御力为$x_i$，攻击力为$y_i$。对每条龙$i$，你需要派遣一个勇士，要求力量大于等于$x_i$，如果不足$x_i$，需要支付等量的金币补足差值；同时要求剩余的勇士力量总和大于等于$y_i$，不足用金币补足。问击杀每条龙需要支付的金币至少是多少（每条龙之间分别计算，相互独立）</p><p><strong>分析</strong></p><p>贪心，对勇士力量升序排序。对每条龙，<code>lower_bound(a+1,a+1+n, x[i])</code>查找出一个勇士$s$，如果要派遣一个大于等于$x_i$的勇士去，那么必定是派$s$去。</p><p>但又有可能这个$s$超过$x_i$很多而其他的总和不足$y_i$，这个时候$s-1$也可能是答案。</p><p>所以答案要么是派$s$去，要么是派$s-1$去。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> x[maxn], y[maxn];</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    t = <span class="number">1</span>;</span><br><span class="line">    a[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">int</span> m;</span><br><span class="line">        cin &gt;&gt; m;</span><br><span class="line">        fors(i, <span class="number">1</span> , m) cin &gt;&gt; x[i] &gt;&gt; y[i];</span><br><span class="line">        <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">        pre[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) pre[i] = pre[i - <span class="number">1</span>] + a[i];</span><br><span class="line">        fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">            <span class="keyword">int</span> now = <span class="built_in">lower_bound</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n, x[i]) - a;</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(now == n + <span class="number">1</span>)&#123;</span><br><span class="line">                ans += x[i] - a[n];</span><br><span class="line">                ans += (pre[n - <span class="number">1</span>] &gt;= y[i] ? <span class="number">0</span> : y[i] - pre[n - <span class="number">1</span>]);</span><br><span class="line">                cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 要么选now，要么选now-1.</span></span><br><span class="line">                ans = (pre[n] - a[now] &gt;= y[i] ? <span class="number">0</span> : y[i] - (pre[n] - a[now]));</span><br><span class="line">                <span class="keyword">if</span>(now == <span class="number">1</span>)&#123;</span><br><span class="line">                    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">                now--;</span><br><span class="line">                res += x[i] - a[now];</span><br><span class="line">                res += (pre[n] - a[now] &gt;= y[i] ? <span class="number">0</span> : y[i] - (pre[n] - a[now]));</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, res);</span><br><span class="line">                cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-The-Strongest-Build"><a href="#D-The-Strongest-Build" class="headerlink" title="D. The Strongest Build"></a>D. The Strongest Build</h1><p><strong>题意</strong></p><p>有$n(n\leq 10)$个单调不下降数组，每个数组长$c_i$，第$i$个数组的第$j$个元素表示为$a_{ij}$，保证$\sum c_i\leq2·10^5$，你需要从每个数组中选一个元素，但约定有$m(m\leq 10^5)$个选择方案是不允许的。求一个方案使得所有选择的元素和最大，输出方案。</p><p><strong>分析</strong></p><p>暴力枚举。首先考虑所有数组都选最后一个元素（最大的），如果这个方案不行，那就枚举所有被禁止的方案。例如，假如某个方案{a,b,c}是禁止的，那么就看{a-1,b,c},{a,b-1,c},{a,b,c-1}有没有禁止，没有就更新答案，这样枚举出来的一定是最优解。</p><p>贪心思路：</p><p>若$\{a_{c_1},a_{c_2},…\}$这个在没有限制条件下的方案被限制了的话，可能的最优解就从$\{a_{c_1-1},a_{c_2},…\},\{a_{c_1},a_{c_2-1},…\}$里面产生。如果这些方案中也有被限制的，那么就再从这些中<strong>枚举每个位置分别将其减一</strong>再更新答案。这样可以保证每次都是“退而求其次”，但一定是可选择的里面最优的。毕竟$m\leq 10^5$，故最多需要枚举$mn$次。加上二分查找，时间复杂度为$O(mn\log m)$</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">12</span>][maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">set&lt;vector&lt;<span class="keyword">int</span>&gt; &gt; v;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        cin &gt;&gt; a[i][<span class="number">0</span>];</span><br><span class="line">        fors(j, <span class="number">1</span>, a[i][<span class="number">0</span>]) cin &gt;&gt; a[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m, p;</span><br><span class="line">    cin &gt;&gt; m;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; tmp;</span><br><span class="line">    fors(I, <span class="number">1</span>, m)&#123;</span><br><span class="line">        fors(j, <span class="number">1</span>, n)&#123;</span><br><span class="line">            cin &gt;&gt; p;</span><br><span class="line">            tmp.<span class="built_in">pb</span>(p);</span><br><span class="line">        &#125;</span><br><span class="line">        v.<span class="built_in">insert</span>(tmp);</span><br><span class="line">        tmp.<span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; ideal; fors(i, <span class="number">1</span>, n) ideal.<span class="built_in">pb</span>(a[i][<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">// bool flag = 0;</span></span><br><span class="line">    <span class="keyword">if</span>(v.<span class="built_in">find</span>(ideal) == v.<span class="built_in">end</span>())&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x : ideal) cout &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; endl; <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; f;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x : v)&#123;</span><br><span class="line">            tmp = x;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">                sum += a[i + <span class="number">1</span>][x[i]];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; x.<span class="built_in">size</span>(); ++j)&#123;</span><br><span class="line">                <span class="keyword">if</span>(x[j] - <span class="number">1</span> == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                sum -= a[j + <span class="number">1</span>][x[j]];</span><br><span class="line">                sum += a[j + <span class="number">1</span>][x[j] - <span class="number">1</span>];</span><br><span class="line">                x[j]--;</span><br><span class="line">                <span class="keyword">if</span>(v.<span class="built_in">find</span>(x) == v.<span class="built_in">end</span>() &amp;&amp; sum &gt; ans) ans = sum, f = x;</span><br><span class="line">                x[j]++;</span><br><span class="line">                sum += a[j + <span class="number">1</span>][x[j]];</span><br><span class="line">                sum -= a[j + <span class="number">1</span>][x[j] - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x : f) cout &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Is it love if I take you, or is it love if I set you free?</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 113 (Rated for Div. 2)</title>
    <link href="https://eykenis.github.io/2021/09/09/Educational-Codeforces-Round-113-Rated-for-Div-2/"/>
    <id>https://eykenis.github.io/2021/09/09/Educational-Codeforces-Round-113-Rated-for-Div-2/</id>
    <published>2021-09-09T00:40:53.000Z</published>
    <updated>2021-09-09T15:22:32.088Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Balanced-Substring"><a href="#A-Balanced-Substring" class="headerlink" title="A. Balanced Substring"></a>A. Balanced Substring</h1><p><strong>题意</strong><br>从给定的$ab$串中找到任意一个$a,b$数量相等的子串并输出。如果找不到输出$-1 -1$.</p><p><strong>分析</strong></p><p>如果一个较大的子串符合要求，则其中必然出现”$ab$”或者”$ba$”，故只找这两种串即可。</p><p>另外$n\leq 50$，随便你怎么暴力。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>() - <span class="number">1</span>; ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] != s[i + <span class="number">1</span>])&#123;</span><br><span class="line">                cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; i + <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag) cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Chess-Tournament"><a href="#B-Chess-Tournament" class="headerlink" title="B. Chess Tournament"></a>B. Chess Tournament</h1><p><strong>题意</strong></p><p>有$n$个人两两比赛，他们分两种人，第一种人不能够有败绩，第二种人希望赢至少一局，存在平局。</p><p>问有没有可能构造出满足所有人的最终结果，如果有，输出任意一个结果。</p><p><strong>分析</strong></p><p>对于第一种人，他们不能有败绩，所以他们对局直接全部设为平局即可。</p><p>对于第二种人，他们要在内部赢其他人至少一次。对于第 $i$ 个人，可以贪心地选取当前剩余未比场次最多的人 $j$ 来让 $i$ 赢 $j$。也可以直接让所有第二种人构成一个环，环上箭头尾部赢，头部输，除环以外剩下的对局随便填满即可。总之$n\leq 50$，随便怎么搞</p><p><strong>代码（贪心）</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id, s, type;</span><br><span class="line">&#125;a[<span class="number">55</span>];</span><br><span class="line"><span class="keyword">char</span> m[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// DDLC_ESCAPE_PLAN_FAILED;</span></span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="built_in">mem</span>(vis);</span><br><span class="line">        fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">            a[i].id = i;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%1d&quot;</span>, &amp;a[i].type);</span><br><span class="line">            a[i].s = n; <span class="comment">// 未比场数</span></span><br><span class="line">        &#125;</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i].type == <span class="number">2</span>) v.<span class="built_in">pb</span>(i);</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                fors(j, <span class="number">1</span>, n)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(i == j) <span class="keyword">continue</span>;</span><br><span class="line">                    m[i][j] = m[j][i] = <span class="string">&#x27;=&#x27;</span>;</span><br><span class="line">                    vis[i][j] = vis[j][i] = <span class="number">1</span>;</span><br><span class="line">                    a[j].s--, a[i].s--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; v.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">            <span class="keyword">int</span> mx = <span class="number">0</span>, mxi;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; v.<span class="built_in">size</span>(); ++j)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i == j) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(mx &lt; a[v[j]].s &amp;&amp; !vis[v[i]][v[j]])&#123;</span><br><span class="line">                    mx = a[v[j]].s;</span><br><span class="line">                    mxi = v[j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(mx == <span class="number">0</span>)&#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            a[v[i]].s--, a[mxi].s--;</span><br><span class="line">            m[v[i]][mxi] = <span class="string">&#x27;+&#x27;</span>, m[mxi][v[i]] = <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">            vis[v[i]][mxi] = vis[mxi][v[i]] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">            fors(j, <span class="number">1</span>, n)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!vis[i][j])&#123;</span><br><span class="line">                    m[i][j] = <span class="string">&#x27;+&#x27;</span>, m[j][i] = <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">                    vis[i][j] = vis[j][i] = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag) cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">            fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">                fors(j, <span class="number">1</span>, n)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(i == j)&#123;</span><br><span class="line">                        cout &lt;&lt; <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    cout &lt;&lt; m[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">                cout &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Jury-Meeting"><a href="#C-Jury-Meeting" class="headerlink" title="C. Jury Meeting"></a>C. Jury Meeting</h1><p><strong>题意</strong></p><p>有$n$个数，你需要把他们进行排列，排列完后，从左至右，每个数依次减去1。当一个数减为0后，它就会被跳过，不再减去。然后再从1开始，重复这个步骤，直到所有数都变成0。</p><p>你需要保证在这个过程中，不会有一个位置被连续减了两次，求满足条件的排列数。</p><p><strong>分析</strong></p><p>一个位置被连续减了两次当且仅当除了它以外全都是0. </p><p>剩下的这个被连续减去的肯定也只可能是最大值了。</p><p>显然可以知道：</p><ol><li>数列中所有数都相同时，全部排列都符合条件</li><li>数列中最大值与次大值相差大于1，且最大值只有1个时，无论如何都不会满足条件</li><li>数列中最大值出现次数超过1时，全部排列都符合条件（和情况1相似）</li></ol><p>故我们只需要讨论的情况只剩下：<strong>数列中最大值与次大值相差1，且最大值只出现一次</strong>的情况。</p><p><strong>要不使最大值被连续减去多次，当且仅当排列中最大值的后面存在次大值</strong>。</p><p>例如$3,3,4$最后会被减成$0,0,1$，再减一次$0,0,0$，第三个位置就被连续减了两次。但是$3,4,3$的话，最后减成$0,1,0$，最后减去第二个位置，但是第二个位置上一个减去的是第三个位置，不连续。</p><p>所以我们找到一种排列，最大值的后面有次大值即可。</p><p>为了稍微简化计算，不妨考虑其互斥情况：最大值后面没有次大值。</p><p>那么我们利用高中排列组合的“插空法”。假设$n$个数中，有$1$个最大值，$c2$个次大值。从$n$个位置中选择$c2+1$个位置，然后选出位置的最后一个放上最大值，其余位置用次大值进行全排列，剩下的$n-c2-1$个位置再用其余数全排列，得到$C_{n}^{c2+1}·A_{c2}^{c2}·A_{n-c2-1}^{n-c2-1}$，所以最终答案是</p><script type="math/tex; mode=display">ans= A_n^n - C_{n}^{c2+1}·A_{c2}^{c2}·A_{n-c2-1}^{n-c2-1}</script><p>（当然，正向考虑并不比这个互斥情况复杂，直接$ans=C_n^{c2+1}·C_{c2}^1·A_{c2}^{c2}·A_{n-c2-1}^{n-c2-1}$，昨晚有点多此一举）</p><p>具体实现上使用了Lucas定理，复杂度$O(nlogn)$，注意最后做减法的时候取模。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> pi[maxn];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353LL</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    a %= mod;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b &amp; <span class="number">1</span>)&#123;</span><br><span class="line">            ans = ans * a % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        a = a * a % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m &gt; n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">        <span class="keyword">int</span> a = (n + i - m) % mod;</span><br><span class="line">        <span class="keyword">int</span> b = i % mod;</span><br><span class="line">        ans = ans * (a * <span class="built_in">qpow</span>(b, mod - <span class="number">2</span>) % mod) % mod;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prework</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    pi[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    pi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, maxn - <span class="number">1</span>)&#123;</span><br><span class="line">        pi[i] = (pi[i - <span class="number">1</span>] * i) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="built_in">prework</span>();</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) mx = <span class="built_in">max</span>(mx, a[i]);</span><br><span class="line">        <span class="keyword">int</span> tmx = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i] &gt; tmx &amp;&amp; a[i] != mx) tmx = a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> c1 = <span class="number">0</span>, c2 = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i] == mx) c1++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a[i] == tmx) c2++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(c2 == <span class="number">0</span> || c1 &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            cout &lt;&lt; pi[n] &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(mx - tmx &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="built_in">C</span>(n, c1 + c2);</span><br><span class="line">            ans = (ans * pi[c1]) % mod;</span><br><span class="line">            ans = (ans * pi[c2]) % mod;</span><br><span class="line">            ans = (ans * pi[n - c1 -c2]) % mod;</span><br><span class="line">            ans = pi[n] - ans;</span><br><span class="line">            ans += <span class="number">2</span> * mod;</span><br><span class="line">            ans %= mod;</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="D-Inconvenient-Pairs"><a href="#D-Inconvenient-Pairs" class="headerlink" title="D. Inconvenient Pairs"></a>D. Inconvenient Pairs</h1><p><strong>题意</strong></p><p>在一个坐标从$(0,0)$到$(1e6,1e6)$的正方形框里，有$n$条横直线，$m$条纵直线。输入保证边界也是直线之一。现在有$k$个点分布在各个确定的直线上，只能通过已经画出的线移动，当一对点之间的最短路大于他们之间的曼哈顿距离时，这对点称为inconvenient，问有多少对inconvenient的点。</p><p><strong>分析</strong></p><p>当一个点在横线竖线的交点上时，它肯定不做贡献，到任意其他的点的最短路程都是曼哈顿距离。</p><p>但当两个点同在横线上但不是同一个横线上时，就有可能做贡献了。竖线同理。</p><p>如果两个点在横线上，且不在同一横线上，而且他们都被夹在相邻的两竖线之间，那么肯定就是inconvenient pair了，竖线同理。</p><p>我们需要算出，任意两相邻竖线之间有多少条在横线上的点，并排除掉在同一横线上的情况，然后计算答案。</p><p>具体就是用map存有哪些横（纵）边，然后对每个纵（横）边上的点用二分查找查出它在哪两个横（纵）边之间，答案先加上目前已统计的这两条横边之间的点的数目，再减去点所在纵边上原来有的点的数目。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> v[maxn], h[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        map&lt;<span class="keyword">int</span>, <span class="keyword">bool</span>&gt; verti, horiz;</span><br><span class="line">        map&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;, <span class="keyword">int</span>&gt; onY, onX;</span><br><span class="line">        map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; cntx, cnty;</span><br><span class="line">        <span class="keyword">int</span> n, m, k;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">        fors(i ,<span class="number">1</span>, n) cin &gt;&gt; v[i], verti[v[i]] = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, m) cin &gt;&gt; h[i], horiz[h[i]] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, k)&#123;</span><br><span class="line">            cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">            <span class="keyword">if</span>(verti.<span class="built_in">count</span>(x) &amp;&amp; horiz.<span class="built_in">count</span>(y)) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">int</span> px = <span class="built_in">lower_bound</span>(v + <span class="number">1</span>, v + <span class="number">1</span> + n, x) - v;</span><br><span class="line">                <span class="keyword">int</span> py = <span class="built_in">lower_bound</span>(h + <span class="number">1</span>, h + m + <span class="number">1</span>, y) - h;</span><br><span class="line">                <span class="keyword">if</span>(verti.<span class="built_in">count</span>(x))&#123;</span><br><span class="line">                    ans += cnty[py] - onX[&#123;py, x&#125;];</span><br><span class="line">                    cnty[py]++, onX[&#123;py, x&#125;]++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    ans += cntx[px] - onY[&#123;px, y&#125;];</span><br><span class="line">                    cntx[px]++, onY[&#123;px, y&#125;]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">The ink flows down into a dark paddle</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>Loading</title>
    <link href="https://eykenis.github.io/2021/09/07/Loading/"/>
    <id>https://eykenis.github.io/2021/09/07/Loading/</id>
    <published>2021-09-07T12:46:35.000Z</published>
    <updated>2022-02-22T11:33:04.064Z</updated>
    
    <content type="html"><![CDATA[<p>暑假的时候我的状态大概是这样的：</p><ol><li>摸鱼</li><li>画画</li><li>搞Unity</li><li>玩会Adobe全家桶</li><li>eke啊eke！你怎么能如此堕落！先前订下的学习计划你都忘了吗？子曰：“吾日三省吾身。”不能再这样下去了！</li><li>玩Minecraft</li><li>玩Minecraft</li><li>摸鱼</li><li>D&amp;G</li><li>D&amp;G</li><li>D&amp;G</li><li>D&amp;G</li><li>学了一下ST表，D&amp;G</li><li>D&amp;G</li></ol><p>（从《八月洛谷训练记录》就可以看出来，后面做着做着题解懒得写了一直没更，再后面到了19号20号干脆懒得写题了）</p><p>所以本该暑假琢磨上紫名，把CF的坑填好的我路到一半就几乎放弃了。幸好荒日子统共也就十来天，目前正常情况下还是能在CF上上分的，总算恢复到以往的平衡状态。然而该反思的则是不该贪哪怕多一点，懒做一点，只要尝试了，贪的和懒的就会无限放大，最后快感阈值高起来可就不好了！</p><p>目前发现自己还是没有学太多东西。也不要追求每天学太多，保持每天在学，学了东西即可。冲太快反而可能绊自己的脚，反弹更严重哦。打算上蓝名之后休CF，画半个月一个月补知识点，再继续打CF，争取紫名。</p><p>年内紫名，最后通牒啊！qwq</p><p>反正也没有政策了，咱就把这个当打着玩玩呗。只不过不要放弃就是了</p><p>啊，想说这么多的想法还是</p><p>说这么多什么用也没有。</p><p>所以从这篇开始，以后都会少发自己不努力的牢骚，前面已经发了太多次了，每次都坚持不了多久呢。</p><p>0w0</p><p>打住，打住。</p>]]></content>
    
    
    <summary type="html">How can I write love into reality?</summary>
    
    
    
    <category term="牢骚" scheme="https://eykenis.github.io/categories/%E7%89%A2%E9%AA%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>Codeforces Round 742 (Div. 2)</title>
    <link href="https://eykenis.github.io/2021/09/06/Codeforces-Round-742-Div-2/"/>
    <id>https://eykenis.github.io/2021/09/06/Codeforces-Round-742-Div-2/</id>
    <published>2021-09-06T00:47:59.000Z</published>
    <updated>2021-09-06T01:35:06.546Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Domino-Disaster"><a href="#A-Domino-Disaster" class="headerlink" title="A. Domino Disaster"></a>A. Domino Disaster</h1><p>2分钟签到</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x : s)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x == <span class="string">&#x27;U&#x27;</span>) cout &lt;&lt; <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(x == <span class="string">&#x27;D&#x27;</span>) cout &lt;&lt; <span class="string">&#x27;U&#x27;</span>;</span><br><span class="line">            <span class="keyword">else</span> cout &lt;&lt; x;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-MEXor-Mixup"><a href="#B-MEXor-Mixup" class="headerlink" title="B. MEXor Mixup"></a>B. MEXor Mixup</h1><p><strong>题意</strong></p><p>现在有一个未定数组，它的$Mex$是$a$, 它所有元素的异或和是$b$​，问这个数组最少有几个元素。$(0&lt;a\leq 3e5,0\leq b\leq 5e4)$.​</p><p><strong>分析</strong></p><p>由于$Mex=a$，故$[0,a-1]$​必定出现。</p><p>讨论特殊情况：当$a=1,b=0$，这个数组是$\{0\}$，共一个元素。</p><p>其余的情况，首先我们对$[0,a-1 ]$做异或和，得出来一个数$x$。此时我们可以再取一个数$y$，使得$x\bigoplus y = b$. 但是要注意，这个$y$可能就是$a$. 根据异或的性质——$x\bigoplus y = z \Harr x \bigoplus z = y$.</p><p>故我们可以求出$y=x\bigoplus b$. 如果求出来的 $y$ 和 $a$ 不相等，那么我们的数组就是$[0,a-1]$加上 $y$，共 $a + 1$ 个元素；如果$y==a$，那么我们不可以直接给数组加上$a$，但一定可以通过另外两个不等于$a$的数作异或得到$a$，故数组共$a+2$个元素。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    pre[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, maxn - <span class="number">1</span>) pre[i] = (pre[i - <span class="number">1</span>] ^ i);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a, b;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="keyword">if</span>(a == <span class="number">1</span> &amp;&amp; b == <span class="number">0</span>)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> sum = pre[a - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(sum == b) cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>((sum ^ a) == b) cout &lt;&lt; a + <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">else</span> cout &lt;&lt; a + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="C-Carring-Condrum"><a href="#C-Carring-Condrum" class="headerlink" title="C. Carring Condrum"></a>C. Carring Condrum</h1><p><strong>题意</strong></p><p>作有着错误进位方式的竖式运算，每次遇到进位都会进两位而不是进一位。例如$1+9$，进位得到的1会放在百位而不是十位。</p><p>现在给出一个数$n$，问有多少对有序数对$(a,b)$，$0&lt;a,b&lt;n$，在经过这种错误运算方式之后会得到$n$.</p><p><strong>分析</strong></p><p>因为每次都进两位，故奇数位和偶数位之间互相不影响，可以把它们分开来看。</p><p>例如，2021这个数，我们可以拆成22和1.</p><p>其中，加和得到22的有序数对共23对（$a$从$0$到$22$​），加和得到1的有序数对共2对。把这奇偶的方法合并，那么总共有$23×2=46$个数对。</p><p>但是，由于2021这个数不能拆成$(0,2021)$和$(2021,0)$，所以要减去2个，最终答案是44.</p><p>所以，若拆分后奇数位数字是$x$,偶数位的是$y$，答案显然是$(x+1)(y+1)-2$.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i &amp; <span class="number">1</span>) a = a * <span class="number">10</span> + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            <span class="keyword">else</span> b = b * <span class="number">10</span> + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a++, b++;</span><br><span class="line">        cout &lt;&lt; a * b - <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">If I can’t hear the sound of your heartbeat</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
    <category term="思维" scheme="https://eykenis.github.io/tags/%E6%80%9D%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 112</title>
    <link href="https://eykenis.github.io/2021/07/31/Educational-Codeforces-Round-112/"/>
    <id>https://eykenis.github.io/2021/07/31/Educational-Codeforces-Round-112/</id>
    <published>2021-07-31T01:32:27.000Z</published>
    <updated>2021-07-31T02:46:18.450Z</updated>
    
    <content type="html"><![CDATA[<pre><code># A. PizzaForces</code></pre><p><strong>题意</strong></p><p>有三种披萨制作方案：15分钟制作6片、20分钟制作8片和25分钟制作10片。</p><p>问制作出至少$n$片披萨要多少分钟</p><p><strong>分析</strong></p><p>三种方案的效率都一样，都是每分钟制作0.4个披萨，也就是一片披萨要做2.5分钟，所以让溢出的时间尽可能少就可以了。</p><p>由于我们有$6,8,10$这三个数，我们可以通过不同的方案凑出$12,14,16,…$，所有大于等于6的偶数。</p><p>所以如果小于6，输出15，否则如果是偶数就输出$2.5n$，是奇数输出$2.5(n+1)$.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// DDLC_ESCAPE_PLAN_FAILED;</span></span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">if</span>(n &lt;= <span class="number">6</span>) <span class="built_in">printf</span>(<span class="string">&quot;15\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n &amp; <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, (<span class="keyword">int</span>)((n + <span class="number">1</span>) * <span class="number">2.5</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,(<span class="keyword">int</span>)( n * <span class="number">2.5</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Two-Tables"><a href="#B-Two-Tables" class="headerlink" title="B. Two Tables"></a>B. Two Tables</h1><p><strong>题意</strong></p><p>一个大矩形区域内有一张桌子，你要平移这张桌子（任意方向），使得能放下另一个$w×h$的桌子。求最小移动距离</p><p><strong>分析</strong></p><p>看这张桌子的正上方。正上方的区域，长度肯定是满足，可以放下的。所以我们只需要将其垂直向下平移就可以得到一种方案。那么，对于其他3个方向也一样。所以沿着坐标轴平移肯定优于斜着来，因为长和宽里面总是有一个是不需要额外移动来满足的，而斜平移相对于垂直平移在另外一个方向上做了无用的移动。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> W, H;</span><br><span class="line"><span class="keyword">int</span> x1, x2, y1, y2, w, h;</span><br><span class="line">cin &gt;&gt; W &gt;&gt; H;</span><br><span class="line">cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line">cin &gt;&gt; w &gt;&gt; h;</span><br><span class="line"><span class="keyword">int</span> ans = inf;</span><br><span class="line"><span class="keyword">int</span> r = <span class="built_in">abs</span>(w - x1);</span><br><span class="line"><span class="keyword">if</span>(x1 &gt;= w) r = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x2 + r &lt;= W) ans = <span class="built_in">min</span>(ans, r);</span><br><span class="line"><span class="keyword">int</span> l = <span class="built_in">abs</span>(x2 - W + w);</span><br><span class="line"><span class="keyword">if</span>(x2 &lt;= W - w) l = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x1 - l &gt;= <span class="number">0</span>) ans = <span class="built_in">min</span>(ans, l);</span><br><span class="line"><span class="keyword">int</span> u = <span class="built_in">abs</span>(y2 - H + h);</span><br><span class="line"><span class="keyword">if</span>(y2 &lt;= H - h) u = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(y1 - u &gt;= <span class="number">0</span>) ans = <span class="built_in">min</span>(ans, u);</span><br><span class="line"><span class="keyword">int</span> d = <span class="built_in">abs</span>(y1 - h);</span><br><span class="line"><span class="keyword">if</span>(y1 &gt;= h) d = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(y2 + d &lt;= H) ans = <span class="built_in">min</span>(ans, d);</span><br><span class="line">cout &lt;&lt; (ans == inf ? <span class="number">-1</span> : ans) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Coin-Rows"><a href="#C-Coin-Rows" class="headerlink" title="C. Coin Rows"></a>C. Coin Rows</h1><p><strong>题意</strong></p><p>有一个两行$m$列的矩阵，每个格子上有金币。$Alice$和$Bob$可以在矩阵中向下或者向右移动，但不能向其他方向移动。</p><p>$Alice$从$(1,1)$出发，走到$(2,m)$，并取走所有停留过的格子里的金币。</p><p>$Bob$同样从$(1,1)$出发，走到$(2,m)$，并取走所有停留过的格子里的金币（$Alice$已经取走的$Bob$取不到了）</p><p>$Alice$要让$Bob$得到的金币尽可能少，$Bob$会让自己得的尽可能多。</p><p>问最终$Bob$会得到多少金币？</p><p><strong>分析</strong></p><p>由于$Alice$要走到$(2,m)$，有且仅有一次向下移动。观察$m$在$1e5$的规模，枚举她向下移动发生的位置。然后，她拿走金币后，留下的金币只会分布在右上和左下两个地方，且$Bob$只能选择其中一个地方的金币全部拿走，而不能同时拿2个地方的金币。所以对2个地方剩余的金币取$max$就是答案。剩余金币的数量可以用前缀和处理。</p><p>时间复杂度$O(m)$.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][maxn];</span><br><span class="line"><span class="keyword">int</span> pre[maxn], lst[maxn]; <span class="comment">// 第一行从前往后的和，第二行从后往前的和</span></span><br><span class="line"><span class="keyword">int</span> sum1, sum2;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line">sum1 = sum2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line">fors(i, <span class="number">1</span>, <span class="number">2</span>)&#123;</span><br><span class="line">fors(j, <span class="number">1</span>, m)&#123;</span><br><span class="line">cin &gt;&gt; a[i][j];</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">1</span>) sum1 += a[i][j];</span><br><span class="line"><span class="keyword">else</span> sum2 += a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">pre[<span class="number">0</span>] = lst[m + <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, m) pre[i] = pre[i - <span class="number">1</span>] + a[<span class="number">1</span>][i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = m; i; --i) lst[i] = lst[i + <span class="number">1</span>] + a[<span class="number">2</span>][i];</span><br><span class="line"><span class="keyword">int</span> ans = inf;</span><br><span class="line">fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">ans = <span class="built_in">min</span>(ans, <span class="built_in">max</span>(sum2 - lst[i], sum1 - pre[i]));</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-Say-No-to-Palindromes"><a href="#D-Say-No-to-Palindromes" class="headerlink" title="D. Say No to Palindromes"></a>D. Say No to Palindromes</h1><p><strong>题意</strong></p><p>定义一个字符串是$beautiful$的，当且仅当：任选一个长度大于1的子串，其不是回文串。</p><p>现在给出一个<strong>只含有字母a,b,c</strong>的字符串$s$，然后给出$m$个询问，对每个询问，你需要回答下标$l$到$r$的子串如果要称为$beautiful$串，至少需要修改几次（只能用a,b,c修改）。</p><p><strong>分析</strong></p><p>考虑下面的情况：<br>对字符串$baa$：</p><ol><li>$b$替换$a$，$bba$,$bab$都含有回文子串，都不行</li><li>$c$替换$a$,$bac,bca$都符合要求.</li><li>其他情况很显然不行</li></ol><p>进一步总结规律，我们发现，一个字符串如果要变成非回文，其只能是形如$abcabcabcabc…$或者$bcabcabca…$，其他的情况都会发生两个字符相邻一样，或者隔一个一样，因此都是会导致回文子串产生的。</p><p>因此我们只需要看当前子串转变为以上两种串任意一种的子串就可以了，然后取$min$。</p><p>这样暴力的复杂度就是$O(n^2)$了，但还不够，需要继续优化。</p><p>优化很简单，任意区间修改成对应串的最小次数显然可以用前缀和维护，复杂度降到$O(n+m)$.</p><p>当然你也可以用莫队分块$O(m\sqrt n)$或者线段树$O(mlogn)$，但显然做复杂了（我属于是最近学了莫队就想用莫队，就当是练习了，差点超时，被很多Hacker盯上了QAQ，幸好没人叉掉）</p><p><strong>代码（莫队）</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line">string abc;</span><br><span class="line">string bca;</span><br><span class="line">string cab;</span><br><span class="line">string cba;</span><br><span class="line">string acb;</span><br><span class="line">string bac;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">query</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l, r;</span><br><span class="line"><span class="keyword">int</span> ans, idx, blc;</span><br><span class="line">&#125;q[maxn];</span><br><span class="line">string s;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(<span class="keyword">const</span> query&amp; x, <span class="keyword">const</span> query&amp; y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x.blc != y.blc) <span class="keyword">return</span> x.blc &lt; y.blc;</span><br><span class="line"><span class="keyword">return</span> x.r &lt; y.r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">rearr</span><span class="params">(<span class="keyword">const</span> query&amp; x, <span class="keyword">const</span> query&amp; y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.idx &lt; y.idx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; maxn; ++i)&#123;</span><br><span class="line">abc += i % <span class="number">3</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">bca += (i + <span class="number">1</span>) % <span class="number">3</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">cab += (i + <span class="number">2</span>) % <span class="number">3</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(i % <span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">acb += <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">cba += <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">bac += <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i % <span class="number">3</span> == <span class="number">1</span>)&#123;</span><br><span class="line">acb += <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">cba += <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">bac += <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">acb += <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">cba += <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">bac += <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">t = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">cin &gt;&gt; q[i].l &gt;&gt; q[i].r;</span><br><span class="line">q[i].l--, q[i].r--;</span><br><span class="line">q[i].idx = i;</span><br><span class="line">q[i].blc = (q[i].l - <span class="number">1</span>) / (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(n) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(q + <span class="number">1</span>, q + <span class="number">1</span> + m, cmp1);</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> ans1 = <span class="number">0</span>, ans2 = <span class="number">0</span>, ans3 = <span class="number">0</span>, ans4 = <span class="number">0</span>, ans5 = <span class="number">0</span>, ans6 = <span class="number">0</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line"><span class="keyword">while</span>(l &gt; q[i].l)&#123;</span><br><span class="line">l--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != abc[l]) ans1++;</span><br><span class="line"><span class="keyword">if</span>(s[l] != bca[l]) ans2++;</span><br><span class="line"><span class="keyword">if</span>(s[l] != cab[l]) ans3++;</span><br><span class="line"><span class="keyword">if</span>(s[l] != acb[l]) ans4++;</span><br><span class="line"><span class="keyword">if</span>(s[l] != cba[l]) ans5++;</span><br><span class="line"><span class="keyword">if</span>(s[l] != bac[l]) ans6++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(r &lt; q[i].r)&#123;</span><br><span class="line">r++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != abc[r]) ans1++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != bca[r]) ans2++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != cab[r]) ans3++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != acb[r]) ans4++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != cba[r]) ans5++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != bac[r]) ans6++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(l &lt; q[i].l)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[l] != abc[l]) ans1--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != bca[l]) ans2--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != cab[l]) ans3--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != acb[l]) ans4--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != cba[l]) ans5--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != bac[l]) ans6--;</span><br><span class="line">l++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(r &gt; q[i].r)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[r] != abc[r]) ans1--;</span><br><span class="line"><span class="keyword">if</span>(s[r] != bca[r]) ans2--;</span><br><span class="line"><span class="keyword">if</span>(s[r] != cab[r]) ans3--;</span><br><span class="line"><span class="keyword">if</span>(s[r] != acb[r]) ans4--;</span><br><span class="line"><span class="keyword">if</span>(s[r] != cba[r]) ans5--;</span><br><span class="line"><span class="keyword">if</span>(s[r] != bac[r]) ans6--;</span><br><span class="line">r--;</span><br><span class="line">&#125;</span><br><span class="line">q[i].ans = <span class="built_in">min</span>(<span class="built_in">min</span>(ans1, <span class="built_in">min</span>(ans2, ans3)), <span class="built_in">min</span>(ans4, <span class="built_in">min</span>(ans5, ans6)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(q + <span class="number">1</span>, q + <span class="number">1</span> + m, rearr);</span><br><span class="line">fors(i, <span class="number">1</span>, m) cout &lt;&lt; q[i].ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>代码（前缀和）</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> pre[<span class="number">6</span>][maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">string s;</span><br><span class="line"><span class="keyword">char</span> check[<span class="number">6</span>][<span class="number">4</span>] = &#123;<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;bca&quot;</span>, <span class="string">&quot;cab&quot;</span>, <span class="string">&quot;acb&quot;</span>, <span class="string">&quot;cba&quot;</span>, <span class="string">&quot;bac&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">0</span>] != check[i][<span class="number">0</span>]) pre[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; s.<span class="built_in">size</span>(); ++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[j] != check[i][j % <span class="number">3</span>]) pre[i][j] = pre[i][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> pre[i][j] = pre[i][j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line"><span class="keyword">int</span> l, r; </span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">l--, r--;</span><br><span class="line"><span class="keyword">int</span> ans = inf;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; ++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(l != <span class="number">0</span>) ans = <span class="built_in">min</span>(ans, pre[j][r] - pre[j][l - <span class="number">1</span>]);</span><br><span class="line"><span class="keyword">else</span> ans = <span class="built_in">min</span>(ans, pre[j][r]);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>显然前缀和好写多了，效率也快多了</p>]]></content>
    
    
    <summary type="html">What do you call love in your reality?</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
    <category term="莫队" scheme="https://eykenis.github.io/tags/%E8%8E%AB%E9%98%9F/"/>
    
  </entry>
  
</feed>
