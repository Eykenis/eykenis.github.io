<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ekke の Space</title>
  <icon>https://www.gravatar.com/avatar/b74e4d6380810c10e04719b2f9079a61</icon>
  
  <link href="https://eykenis.github.io/atom.xml" rel="self"/>
  
  <link href="https://eykenis.github.io/"/>
  <updated>2021-09-21T05:41:14.711Z</updated>
  <id>https://eykenis.github.io/</id>
  
  <author>
    <name>Ekennis</name>
    <email>ekennis@outlook.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Educational Codeforces Round 114 (Rated for Div. 2) 个人题解</title>
    <link href="https://eykenis.github.io/2021/09/21/Educational-Codeforces-Round-114-Rated-for-Div-2-%E4%B8%AA%E4%BA%BA%E9%A2%98%E8%A7%A3/"/>
    <id>https://eykenis.github.io/2021/09/21/Educational-Codeforces-Round-114-Rated-for-Div-2-%E4%B8%AA%E4%BA%BA%E9%A2%98%E8%A7%A3/</id>
    <published>2021-09-21T03:03:16.000Z</published>
    <updated>2021-09-21T05:41:14.711Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Regular-Bracket-Sequences"><a href="#A-Regular-Bracket-Sequences" class="headerlink" title="A. Regular Bracket Sequences"></a>A. Regular Bracket Sequences</h1><p><strong>题意</strong></p><p>输出$n$个不同的长度为$2n$的合法括号序列.</p><p><strong>分析</strong></p><p>先输出一个”()()()…”序列.</p><p>然后依次输出”(())()”, “()(())”,…，也就是每次把第$i$个和第$i+1$个交换，其中$i$从下标2到n-2，这样恰好$n-1$个，加上最开始的共$n$个。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        string s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">            s += <span class="string">&#x27;(&#x27;</span>;</span><br><span class="line">            s += <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i + <span class="number">1</span> &lt; s.<span class="built_in">size</span>(); i += <span class="number">2</span>)&#123;</span><br><span class="line">            s[i] = <span class="string">&#x27;(&#x27;</span>;</span><br><span class="line">            s[i + <span class="number">1</span>] = <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">            cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">            s[i] = <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">            s[i + <span class="number">1</span>] = <span class="string">&#x27;(&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Combinatorics-Homework"><a href="#B-Combinatorics-Homework" class="headerlink" title="B. Combinatorics Homework"></a>B. Combinatorics Homework</h1><p><strong>题意</strong></p><p>你需要判断是否存在一个字符串：</p><ol><li>恰好a个’A’，b个’B’，c个‘C’</li><li>没有其他字符</li><li>恰好m对相邻且相同的字符对（如”AA”）</li></ol><p><strong>分析</strong></p><p>目标是寻找可以满足要求的$m$取值范围。</p><p>将三种字符的数量排序，找到其个数最多的，假设为’A’，记’B’和’C’的数量和为$s$。</p><p>$m$最大取值显然是$a+b+c-3$.</p><p>找$m$的最小值。把$s$个字符排开，其有$s+1$个位置可以插入’A’。若’A’的数量不超过$s+1$，那么肯定可以达到最小状态，即不存在相邻且相同的字符对。可能会想到’A’没有填满所有空缺时有可能’B’或者’C’会出现连续的情况，但其实这种情况发生的话’A’肯定就不是个数最多的了。反之，若’A’的数量超过了$s+1$，那么至少出现的相同字符对就是$s+1-a$对。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a, b, c, m;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; m;</span><br><span class="line">        <span class="keyword">int</span> mx = a + b + c - <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span> p[<span class="number">3</span>] = &#123;a, b, c&#125;;</span><br><span class="line">        <span class="built_in">sort</span>(p, p + <span class="number">3</span>);</span><br><span class="line">        <span class="keyword">int</span> r2 = p[<span class="number">0</span>] + p[<span class="number">1</span>] + <span class="number">1</span>, r1 = p[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">int</span> mn = <span class="built_in">max</span>(<span class="number">0LL</span>, r1 - r2);</span><br><span class="line">        <span class="keyword">if</span>(mx &gt;= m &amp;&amp; mn &lt;= m)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h1 id="C-Slay-the-Dragon"><a href="#C-Slay-the-Dragon" class="headerlink" title="C. Slay the Dragon"></a>C. Slay the Dragon</h1><p><strong>题意</strong></p><p>有$m$条龙和$n$个勇士，每个勇士的力量是$a_i$，每个龙的防御力为$x_i$，攻击力为$y_i$。对每条龙$i$，你需要派遣一个勇士，要求力量大于等于$x_i$，如果不足$x_i$，需要支付等量的金币补足差值；同时要求剩余的勇士力量总和大于等于$y_i$，不足用金币补足。问击杀每条龙需要支付的金币至少是多少（每条龙之间分别计算，相互独立）</p><p><strong>分析</strong></p><p>贪心，对勇士力量升序排序。对每条龙，<code>lower_bound(a+1,a+1+n, x[i])</code>查找出一个勇士$s$，如果要派遣一个大于等于$x_i$的勇士去，那么必定是派$s$去。</p><p>但又有可能这个$s$超过$x_i$很多而其他的总和不足$y_i$，这个时候$s-1$也可能是答案。</p><p>所以答案要么是派$s$去，要么是派$s-1$去。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> x[maxn], y[maxn];</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    t = <span class="number">1</span>;</span><br><span class="line">    a[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">int</span> m;</span><br><span class="line">        cin &gt;&gt; m;</span><br><span class="line">        fors(i, <span class="number">1</span> , m) cin &gt;&gt; x[i] &gt;&gt; y[i];</span><br><span class="line">        <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">        pre[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) pre[i] = pre[i - <span class="number">1</span>] + a[i];</span><br><span class="line">        fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">            <span class="keyword">int</span> now = <span class="built_in">lower_bound</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n, x[i]) - a;</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(now == n + <span class="number">1</span>)&#123;</span><br><span class="line">                ans += x[i] - a[n];</span><br><span class="line">                ans += (pre[n - <span class="number">1</span>] &gt;= y[i] ? <span class="number">0</span> : y[i] - pre[n - <span class="number">1</span>]);</span><br><span class="line">                cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 要么选now，要么选now-1.</span></span><br><span class="line">                ans = (pre[n] - a[now] &gt;= y[i] ? <span class="number">0</span> : y[i] - (pre[n] - a[now]));</span><br><span class="line">                <span class="keyword">if</span>(now == <span class="number">1</span>)&#123;</span><br><span class="line">                    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">                now--;</span><br><span class="line">                res += x[i] - a[now];</span><br><span class="line">                res += (pre[n] - a[now] &gt;= y[i] ? <span class="number">0</span> : y[i] - (pre[n] - a[now]));</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, res);</span><br><span class="line">                cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-The-Strongest-Build"><a href="#D-The-Strongest-Build" class="headerlink" title="D. The Strongest Build"></a>D. The Strongest Build</h1><p><strong>题意</strong></p><p>有$n(n\leq 10)$个单调不下降数组，每个数组长$c_i$，第$i$个数组的第$j$个元素表示为$a_{ij}$，保证$\sum c_i\leq2·10^5$，你需要从每个数组中选一个元素，但约定有$m(m\leq 10^5)$个选择方案是不允许的。求一个方案使得所有选择的元素和最大，输出方案。</p><p><strong>分析</strong></p><p>暴力枚举。首先考虑所有数组都选最后一个元素（最大的），如果这个方案不行，那就枚举所有被禁止的方案。例如，假如某个方案{a,b,c}是禁止的，那么就看{a-1,b,c},{a,b-1,c},{a,b,c-1}有没有禁止，没有就更新答案，这样枚举出来的一定是最优解。</p><p>贪心思路：</p><p>若$\{a_{c_1},a_{c_2},…\}$这个在没有限制条件下的方案被限制了的话，可能的最优解就从$\{a_{c_1-1},a_{c_2},…\},\{a_{c_1},a_{c_2-1},…\}$里面产生。如果这些方案中也有被限制的，那么就再从这些中<strong>枚举每个位置分别将其减一</strong>再更新答案。这样可以保证每次都是“退而求其次”，但一定是可选择的里面最优的。毕竟$m\leq 10^5$，故最多需要枚举$mn$次。加上二分查找，时间复杂度为$O(mn\log m)$</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">12</span>][maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">set&lt;vector&lt;<span class="keyword">int</span>&gt; &gt; v;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        cin &gt;&gt; a[i][<span class="number">0</span>];</span><br><span class="line">        fors(j, <span class="number">1</span>, a[i][<span class="number">0</span>]) cin &gt;&gt; a[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m, p;</span><br><span class="line">    cin &gt;&gt; m;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; tmp;</span><br><span class="line">    fors(I, <span class="number">1</span>, m)&#123;</span><br><span class="line">        fors(j, <span class="number">1</span>, n)&#123;</span><br><span class="line">            cin &gt;&gt; p;</span><br><span class="line">            tmp.<span class="built_in">pb</span>(p);</span><br><span class="line">        &#125;</span><br><span class="line">        v.<span class="built_in">insert</span>(tmp);</span><br><span class="line">        tmp.<span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; ideal; fors(i, <span class="number">1</span>, n) ideal.<span class="built_in">pb</span>(a[i][<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">// bool flag = 0;</span></span><br><span class="line">    <span class="keyword">if</span>(v.<span class="built_in">find</span>(ideal) == v.<span class="built_in">end</span>())&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x : ideal) cout &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; endl; <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; f;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x : v)&#123;</span><br><span class="line">            tmp = x;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">                sum += a[i + <span class="number">1</span>][x[i]];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; x.<span class="built_in">size</span>(); ++j)&#123;</span><br><span class="line">                <span class="keyword">if</span>(x[j] - <span class="number">1</span> == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                sum -= a[j + <span class="number">1</span>][x[j]];</span><br><span class="line">                sum += a[j + <span class="number">1</span>][x[j] - <span class="number">1</span>];</span><br><span class="line">                x[j]--;</span><br><span class="line">                <span class="keyword">if</span>(v.<span class="built_in">find</span>(x) == v.<span class="built_in">end</span>() &amp;&amp; sum &gt; ans) ans = sum, f = x;</span><br><span class="line">                x[j]++;</span><br><span class="line">                sum += a[j + <span class="number">1</span>][x[j]];</span><br><span class="line">                sum -= a[j + <span class="number">1</span>][x[j] - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x : f) cout &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Is it love if I take you, or is it love if I set you free?</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 113 (Rated for Div. 2)</title>
    <link href="https://eykenis.github.io/2021/09/09/Educational-Codeforces-Round-113-Rated-for-Div-2/"/>
    <id>https://eykenis.github.io/2021/09/09/Educational-Codeforces-Round-113-Rated-for-Div-2/</id>
    <published>2021-09-09T00:40:53.000Z</published>
    <updated>2021-09-09T15:22:32.088Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Balanced-Substring"><a href="#A-Balanced-Substring" class="headerlink" title="A. Balanced Substring"></a>A. Balanced Substring</h1><p><strong>题意</strong><br>从给定的$ab$串中找到任意一个$a,b$数量相等的子串并输出。如果找不到输出$-1 -1$.</p><p><strong>分析</strong></p><p>如果一个较大的子串符合要求，则其中必然出现”$ab$”或者”$ba$”，故只找这两种串即可。</p><p>另外$n\leq 50$，随便你怎么暴力。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>() - <span class="number">1</span>; ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] != s[i + <span class="number">1</span>])&#123;</span><br><span class="line">                cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; i + <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag) cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Chess-Tournament"><a href="#B-Chess-Tournament" class="headerlink" title="B. Chess Tournament"></a>B. Chess Tournament</h1><p><strong>题意</strong></p><p>有$n$个人两两比赛，他们分两种人，第一种人不能够有败绩，第二种人希望赢至少一局，存在平局。</p><p>问有没有可能构造出满足所有人的最终结果，如果有，输出任意一个结果。</p><p><strong>分析</strong></p><p>对于第一种人，他们不能有败绩，所以他们对局直接全部设为平局即可。</p><p>对于第二种人，他们要在内部赢其他人至少一次。对于第 $i$ 个人，可以贪心地选取当前剩余未比场次最多的人 $j$ 来让 $i$ 赢 $j$。也可以直接让所有第二种人构成一个环，环上箭头尾部赢，头部输，除环以外剩下的对局随便填满即可。总之$n\leq 50$，随便怎么搞</p><p><strong>代码（贪心）</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id, s, type;</span><br><span class="line">&#125;a[<span class="number">55</span>];</span><br><span class="line"><span class="keyword">char</span> m[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// DDLC_ESCAPE_PLAN_FAILED;</span></span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="built_in">mem</span>(vis);</span><br><span class="line">        fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">            a[i].id = i;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%1d&quot;</span>, &amp;a[i].type);</span><br><span class="line">            a[i].s = n; <span class="comment">// 未比场数</span></span><br><span class="line">        &#125;</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i].type == <span class="number">2</span>) v.<span class="built_in">pb</span>(i);</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                fors(j, <span class="number">1</span>, n)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(i == j) <span class="keyword">continue</span>;</span><br><span class="line">                    m[i][j] = m[j][i] = <span class="string">&#x27;=&#x27;</span>;</span><br><span class="line">                    vis[i][j] = vis[j][i] = <span class="number">1</span>;</span><br><span class="line">                    a[j].s--, a[i].s--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; v.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">            <span class="keyword">int</span> mx = <span class="number">0</span>, mxi;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; v.<span class="built_in">size</span>(); ++j)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i == j) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(mx &lt; a[v[j]].s &amp;&amp; !vis[v[i]][v[j]])&#123;</span><br><span class="line">                    mx = a[v[j]].s;</span><br><span class="line">                    mxi = v[j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(mx == <span class="number">0</span>)&#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            a[v[i]].s--, a[mxi].s--;</span><br><span class="line">            m[v[i]][mxi] = <span class="string">&#x27;+&#x27;</span>, m[mxi][v[i]] = <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">            vis[v[i]][mxi] = vis[mxi][v[i]] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">            fors(j, <span class="number">1</span>, n)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!vis[i][j])&#123;</span><br><span class="line">                    m[i][j] = <span class="string">&#x27;+&#x27;</span>, m[j][i] = <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">                    vis[i][j] = vis[j][i] = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag) cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">            fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">                fors(j, <span class="number">1</span>, n)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(i == j)&#123;</span><br><span class="line">                        cout &lt;&lt; <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    cout &lt;&lt; m[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">                cout &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Jury-Meeting"><a href="#C-Jury-Meeting" class="headerlink" title="C. Jury Meeting"></a>C. Jury Meeting</h1><p><strong>题意</strong></p><p>有$n$个数，你需要把他们进行排列，排列完后，从左至右，每个数依次减去1。当一个数减为0后，它就会被跳过，不再减去。然后再从1开始，重复这个步骤，直到所有数都变成0。</p><p>你需要保证在这个过程中，不会有一个位置被连续减了两次，求满足条件的排列数。</p><p><strong>分析</strong></p><p>一个位置被连续减了两次当且仅当除了它以外全都是0. </p><p>剩下的这个被连续减去的肯定也只可能是最大值了。</p><p>显然可以知道：</p><ol><li>数列中所有数都相同时，全部排列都符合条件</li><li>数列中最大值与次大值相差大于1，且最大值只有1个时，无论如何都不会满足条件</li><li>数列中最大值出现次数超过1时，全部排列都符合条件（和情况1相似）</li></ol><p>故我们只需要讨论的情况只剩下：<strong>数列中最大值与次大值相差1，且最大值只出现一次</strong>的情况。</p><p><strong>要不使最大值被连续减去多次，当且仅当排列中最大值的后面存在次大值</strong>。</p><p>例如$3,3,4$最后会被减成$0,0,1$，再减一次$0,0,0$，第三个位置就被连续减了两次。但是$3,4,3$的话，最后减成$0,1,0$，最后减去第二个位置，但是第二个位置上一个减去的是第三个位置，不连续。</p><p>所以我们找到一种排列，最大值的后面有次大值即可。</p><p>为了稍微简化计算，不妨考虑其互斥情况：最大值后面没有次大值。</p><p>那么我们利用高中排列组合的“插空法”。假设$n$个数中，有$1$个最大值，$c2$个次大值。从$n$个位置中选择$c2+1$个位置，然后选出位置的最后一个放上最大值，其余位置用次大值进行全排列，剩下的$n-c2-1$个位置再用其余数全排列，得到$C_{n}^{c2+1}·A_{c2}^{c2}·A_{n-c2-1}^{n-c2-1}$，所以最终答案是</p><script type="math/tex; mode=display">ans= A_n^n - C_{n}^{c2+1}·A_{c2}^{c2}·A_{n-c2-1}^{n-c2-1}</script><p>（当然，正向考虑并不比这个互斥情况复杂，直接$ans=C_n^{c2+1}·C_{c2}^1·A_{c2}^{c2}·A_{n-c2-1}^{n-c2-1}$，昨晚有点多此一举）</p><p>具体实现上使用了Lucas定理，复杂度$O(nlogn)$，注意最后做减法的时候取模。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> pi[maxn];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353LL</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    a %= mod;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b &amp; <span class="number">1</span>)&#123;</span><br><span class="line">            ans = ans * a % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        a = a * a % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m &gt; n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">        <span class="keyword">int</span> a = (n + i - m) % mod;</span><br><span class="line">        <span class="keyword">int</span> b = i % mod;</span><br><span class="line">        ans = ans * (a * <span class="built_in">qpow</span>(b, mod - <span class="number">2</span>) % mod) % mod;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prework</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    pi[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    pi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, maxn - <span class="number">1</span>)&#123;</span><br><span class="line">        pi[i] = (pi[i - <span class="number">1</span>] * i) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="built_in">prework</span>();</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) mx = <span class="built_in">max</span>(mx, a[i]);</span><br><span class="line">        <span class="keyword">int</span> tmx = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i] &gt; tmx &amp;&amp; a[i] != mx) tmx = a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> c1 = <span class="number">0</span>, c2 = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i] == mx) c1++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a[i] == tmx) c2++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(c2 == <span class="number">0</span> || c1 &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            cout &lt;&lt; pi[n] &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(mx - tmx &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="built_in">C</span>(n, c1 + c2);</span><br><span class="line">            ans = (ans * pi[c1]) % mod;</span><br><span class="line">            ans = (ans * pi[c2]) % mod;</span><br><span class="line">            ans = (ans * pi[n - c1 -c2]) % mod;</span><br><span class="line">            ans = pi[n] - ans;</span><br><span class="line">            ans += <span class="number">2</span> * mod;</span><br><span class="line">            ans %= mod;</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="D-Inconvenient-Pairs"><a href="#D-Inconvenient-Pairs" class="headerlink" title="D. Inconvenient Pairs"></a>D. Inconvenient Pairs</h1><p><strong>题意</strong></p><p>在一个坐标从$(0,0)$到$(1e6,1e6)$的正方形框里，有$n$条横直线，$m$条纵直线。输入保证边界也是直线之一。现在有$k$个点分布在各个确定的直线上，只能通过已经画出的线移动，当一对点之间的最短路大于他们之间的曼哈顿距离时，这对点称为inconvenient，问有多少对inconvenient的点。</p><p><strong>分析</strong></p><p>当一个点在横线竖线的交点上时，它肯定不做贡献，到任意其他的点的最短路程都是曼哈顿距离。</p><p>但当两个点同在横线上但不是同一个横线上时，就有可能做贡献了。竖线同理。</p><p>如果两个点在横线上，且不在同一横线上，而且他们都被夹在相邻的两竖线之间，那么肯定就是inconvenient pair了，竖线同理。</p><p>我们需要算出，任意两相邻竖线之间有多少条在横线上的点，并排除掉在同一横线上的情况，然后计算答案。</p><p>具体就是用map存有哪些横（纵）边，然后对每个纵（横）边上的点用二分查找查出它在哪两个横（纵）边之间，答案先加上目前已统计的这两条横边之间的点的数目，再减去点所在纵边上原来有的点的数目。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> v[maxn], h[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        map&lt;<span class="keyword">int</span>, <span class="keyword">bool</span>&gt; verti, horiz;</span><br><span class="line">        map&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;, <span class="keyword">int</span>&gt; onY, onX;</span><br><span class="line">        map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; cntx, cnty;</span><br><span class="line">        <span class="keyword">int</span> n, m, k;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">        fors(i ,<span class="number">1</span>, n) cin &gt;&gt; v[i], verti[v[i]] = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, m) cin &gt;&gt; h[i], horiz[h[i]] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, k)&#123;</span><br><span class="line">            cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">            <span class="keyword">if</span>(verti.<span class="built_in">count</span>(x) &amp;&amp; horiz.<span class="built_in">count</span>(y)) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">int</span> px = <span class="built_in">lower_bound</span>(v + <span class="number">1</span>, v + <span class="number">1</span> + n, x) - v;</span><br><span class="line">                <span class="keyword">int</span> py = <span class="built_in">lower_bound</span>(h + <span class="number">1</span>, h + m + <span class="number">1</span>, y) - h;</span><br><span class="line">                <span class="keyword">if</span>(verti.<span class="built_in">count</span>(x))&#123;</span><br><span class="line">                    ans += cnty[py] - onX[&#123;py, x&#125;];</span><br><span class="line">                    cnty[py]++, onX[&#123;py, x&#125;]++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    ans += cntx[px] - onY[&#123;px, y&#125;];</span><br><span class="line">                    cntx[px]++, onY[&#123;px, y&#125;]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">The ink flows down into a dark paddle</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>无题</title>
    <link href="https://eykenis.github.io/2021/09/07/Loading/"/>
    <id>https://eykenis.github.io/2021/09/07/Loading/</id>
    <published>2021-09-07T12:46:35.000Z</published>
    <updated>2021-09-07T15:47:38.617Z</updated>
    
    <content type="html"><![CDATA[<p>暑假的时候我的状态大概是这样的：</p><ol><li>摸鱼</li><li>画画</li><li>搞Unity</li><li>玩会Adobe全家桶</li><li>eke啊eke！你怎么能如此堕落！先前订下的学习计划你都忘了吗？子曰：“吾日三省吾身。”不能再这样下去了！</li><li>玩Minecraft</li><li>玩Minecraft</li><li>摸鱼</li><li>D&amp;G</li><li>D&amp;G</li><li>D&amp;G</li><li>D&amp;G</li><li>学了一下ST表，D&amp;G</li><li>D&amp;G</li></ol><p>（从《八月洛谷训练记录》就可以看出来，后面做着做着题解懒得写了一直没更，再后面到了19号20号干脆懒得写题了）</p><p>所以本该暑假琢磨上紫名，把CF的坑填好的我路到一半就几乎放弃了。幸好荒日子统共也就十来天，目前正常情况下还是能在CF上上分的，总算恢复到以往的平衡状态。然而该反思的则是不该贪哪怕多一点，懒做一点，只要尝试了，贪的和懒的就会无限放大，最后快感阈值高起来可就不好了！</p><p>目前发现自己还是没有学太多东西。也不要追求每天学太多，保持每天在学，学了东西即可。冲太快反而可能绊自己的脚，反弹更严重哦。打算上蓝名之后休CF，画半个月一个月补知识点，再继续打CF，争取紫名。</p><p>年内紫名，最后通牒啊！qwq</p><p>反正也没有政策了，咱就把这个当打着玩玩呗。只不过不要放弃就是了</p><p>啊，想说这么多的想法还是</p><p>说这么多什么用也没有。</p><p>所以从这篇开始，以后都会少发自己不努力的牢骚，前面已经发了太多次了，每次都坚持不了多久呢。</p><p>0w0</p><p>打住，打住。</p>]]></content>
    
    
    <summary type="html">How can I write love into reality?</summary>
    
    
    
    <category term="牢骚" scheme="https://eykenis.github.io/categories/%E7%89%A2%E9%AA%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>Codeforces Round 742 (Div. 2)</title>
    <link href="https://eykenis.github.io/2021/09/06/Codeforces-Round-742-Div-2/"/>
    <id>https://eykenis.github.io/2021/09/06/Codeforces-Round-742-Div-2/</id>
    <published>2021-09-06T00:47:59.000Z</published>
    <updated>2021-09-06T01:35:06.546Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Domino-Disaster"><a href="#A-Domino-Disaster" class="headerlink" title="A. Domino Disaster"></a>A. Domino Disaster</h1><p>2分钟签到</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x : s)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x == <span class="string">&#x27;U&#x27;</span>) cout &lt;&lt; <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(x == <span class="string">&#x27;D&#x27;</span>) cout &lt;&lt; <span class="string">&#x27;U&#x27;</span>;</span><br><span class="line">            <span class="keyword">else</span> cout &lt;&lt; x;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-MEXor-Mixup"><a href="#B-MEXor-Mixup" class="headerlink" title="B. MEXor Mixup"></a>B. MEXor Mixup</h1><p><strong>题意</strong></p><p>现在有一个未定数组，它的$Mex$是$a$, 它所有元素的异或和是$b$​，问这个数组最少有几个元素。$(0&lt;a\leq 3e5,0\leq b\leq 5e4)$.​</p><p><strong>分析</strong></p><p>由于$Mex=a$，故$[0,a-1]$​必定出现。</p><p>讨论特殊情况：当$a=1,b=0$，这个数组是$\{0\}$，共一个元素。</p><p>其余的情况，首先我们对$[0,a-1 ]$做异或和，得出来一个数$x$。此时我们可以再取一个数$y$，使得$x\bigoplus y = b$. 但是要注意，这个$y$可能就是$a$. 根据异或的性质——$x\bigoplus y = z \Harr x \bigoplus z = y$.</p><p>故我们可以求出$y=x\bigoplus b$. 如果求出来的 $y$ 和 $a$ 不相等，那么我们的数组就是$[0,a-1]$加上 $y$，共 $a + 1$ 个元素；如果$y==a$，那么我们不可以直接给数组加上$a$，但一定可以通过另外两个不等于$a$的数作异或得到$a$，故数组共$a+2$个元素。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    pre[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, maxn - <span class="number">1</span>) pre[i] = (pre[i - <span class="number">1</span>] ^ i);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a, b;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="keyword">if</span>(a == <span class="number">1</span> &amp;&amp; b == <span class="number">0</span>)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> sum = pre[a - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(sum == b) cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>((sum ^ a) == b) cout &lt;&lt; a + <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">else</span> cout &lt;&lt; a + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="C-Carring-Condrum"><a href="#C-Carring-Condrum" class="headerlink" title="C. Carring Condrum"></a>C. Carring Condrum</h1><p><strong>题意</strong></p><p>作有着错误进位方式的竖式运算，每次遇到进位都会进两位而不是进一位。例如$1+9$，进位得到的1会放在百位而不是十位。</p><p>现在给出一个数$n$，问有多少对有序数对$(a,b)$，$0&lt;a,b&lt;n$，在经过这种错误运算方式之后会得到$n$.</p><p><strong>分析</strong></p><p>因为每次都进两位，故奇数位和偶数位之间互相不影响，可以把它们分开来看。</p><p>例如，2021这个数，我们可以拆成22和1.</p><p>其中，加和得到22的有序数对共23对（$a$从$0$到$22$​），加和得到1的有序数对共2对。把这奇偶的方法合并，那么总共有$23×2=46$个数对。</p><p>但是，由于2021这个数不能拆成$(0,2021)$和$(2021,0)$，所以要减去2个，最终答案是44.</p><p>所以，若拆分后奇数位数字是$x$,偶数位的是$y$，答案显然是$(x+1)(y+1)-2$.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i &amp; <span class="number">1</span>) a = a * <span class="number">10</span> + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            <span class="keyword">else</span> b = b * <span class="number">10</span> + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a++, b++;</span><br><span class="line">        cout &lt;&lt; a * b - <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">If I can’t hear the sound of your heartbeat</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="思维" scheme="https://eykenis.github.io/tags/%E6%80%9D%E7%BB%B4/"/>
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 112</title>
    <link href="https://eykenis.github.io/2021/07/31/Educational-Codeforces-Round-112/"/>
    <id>https://eykenis.github.io/2021/07/31/Educational-Codeforces-Round-112/</id>
    <published>2021-07-31T01:32:27.000Z</published>
    <updated>2021-07-31T02:46:18.450Z</updated>
    
    <content type="html"><![CDATA[<pre><code># A. PizzaForces</code></pre><p><strong>题意</strong></p><p>有三种披萨制作方案：15分钟制作6片、20分钟制作8片和25分钟制作10片。</p><p>问制作出至少$n$片披萨要多少分钟</p><p><strong>分析</strong></p><p>三种方案的效率都一样，都是每分钟制作0.4个披萨，也就是一片披萨要做2.5分钟，所以让溢出的时间尽可能少就可以了。</p><p>由于我们有$6,8,10$这三个数，我们可以通过不同的方案凑出$12,14,16,…$，所有大于等于6的偶数。</p><p>所以如果小于6，输出15，否则如果是偶数就输出$2.5n$，是奇数输出$2.5(n+1)$.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// DDLC_ESCAPE_PLAN_FAILED;</span></span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">if</span>(n &lt;= <span class="number">6</span>) <span class="built_in">printf</span>(<span class="string">&quot;15\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n &amp; <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, (<span class="keyword">int</span>)((n + <span class="number">1</span>) * <span class="number">2.5</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,(<span class="keyword">int</span>)( n * <span class="number">2.5</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Two-Tables"><a href="#B-Two-Tables" class="headerlink" title="B. Two Tables"></a>B. Two Tables</h1><p><strong>题意</strong></p><p>一个大矩形区域内有一张桌子，你要平移这张桌子（任意方向），使得能放下另一个$w×h$的桌子。求最小移动距离</p><p><strong>分析</strong></p><p>看这张桌子的正上方。正上方的区域，长度肯定是满足，可以放下的。所以我们只需要将其垂直向下平移就可以得到一种方案。那么，对于其他3个方向也一样。所以沿着坐标轴平移肯定优于斜着来，因为长和宽里面总是有一个是不需要额外移动来满足的，而斜平移相对于垂直平移在另外一个方向上做了无用的移动。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> W, H;</span><br><span class="line"><span class="keyword">int</span> x1, x2, y1, y2, w, h;</span><br><span class="line">cin &gt;&gt; W &gt;&gt; H;</span><br><span class="line">cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line">cin &gt;&gt; w &gt;&gt; h;</span><br><span class="line"><span class="keyword">int</span> ans = inf;</span><br><span class="line"><span class="keyword">int</span> r = <span class="built_in">abs</span>(w - x1);</span><br><span class="line"><span class="keyword">if</span>(x1 &gt;= w) r = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x2 + r &lt;= W) ans = <span class="built_in">min</span>(ans, r);</span><br><span class="line"><span class="keyword">int</span> l = <span class="built_in">abs</span>(x2 - W + w);</span><br><span class="line"><span class="keyword">if</span>(x2 &lt;= W - w) l = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x1 - l &gt;= <span class="number">0</span>) ans = <span class="built_in">min</span>(ans, l);</span><br><span class="line"><span class="keyword">int</span> u = <span class="built_in">abs</span>(y2 - H + h);</span><br><span class="line"><span class="keyword">if</span>(y2 &lt;= H - h) u = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(y1 - u &gt;= <span class="number">0</span>) ans = <span class="built_in">min</span>(ans, u);</span><br><span class="line"><span class="keyword">int</span> d = <span class="built_in">abs</span>(y1 - h);</span><br><span class="line"><span class="keyword">if</span>(y1 &gt;= h) d = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(y2 + d &lt;= H) ans = <span class="built_in">min</span>(ans, d);</span><br><span class="line">cout &lt;&lt; (ans == inf ? <span class="number">-1</span> : ans) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Coin-Rows"><a href="#C-Coin-Rows" class="headerlink" title="C. Coin Rows"></a>C. Coin Rows</h1><p><strong>题意</strong></p><p>有一个两行$m$列的矩阵，每个格子上有金币。$Alice$和$Bob$可以在矩阵中向下或者向右移动，但不能向其他方向移动。</p><p>$Alice$从$(1,1)$出发，走到$(2,m)$，并取走所有停留过的格子里的金币。</p><p>$Bob$同样从$(1,1)$出发，走到$(2,m)$，并取走所有停留过的格子里的金币（$Alice$已经取走的$Bob$取不到了）</p><p>$Alice$要让$Bob$得到的金币尽可能少，$Bob$会让自己得的尽可能多。</p><p>问最终$Bob$会得到多少金币？</p><p><strong>分析</strong></p><p>由于$Alice$要走到$(2,m)$，有且仅有一次向下移动。观察$m$在$1e5$的规模，枚举她向下移动发生的位置。然后，她拿走金币后，留下的金币只会分布在右上和左下两个地方，且$Bob$只能选择其中一个地方的金币全部拿走，而不能同时拿2个地方的金币。所以对2个地方剩余的金币取$max$就是答案。剩余金币的数量可以用前缀和处理。</p><p>时间复杂度$O(m)$.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][maxn];</span><br><span class="line"><span class="keyword">int</span> pre[maxn], lst[maxn]; <span class="comment">// 第一行从前往后的和，第二行从后往前的和</span></span><br><span class="line"><span class="keyword">int</span> sum1, sum2;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line">sum1 = sum2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line">fors(i, <span class="number">1</span>, <span class="number">2</span>)&#123;</span><br><span class="line">fors(j, <span class="number">1</span>, m)&#123;</span><br><span class="line">cin &gt;&gt; a[i][j];</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">1</span>) sum1 += a[i][j];</span><br><span class="line"><span class="keyword">else</span> sum2 += a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">pre[<span class="number">0</span>] = lst[m + <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, m) pre[i] = pre[i - <span class="number">1</span>] + a[<span class="number">1</span>][i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = m; i; --i) lst[i] = lst[i + <span class="number">1</span>] + a[<span class="number">2</span>][i];</span><br><span class="line"><span class="keyword">int</span> ans = inf;</span><br><span class="line">fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">ans = <span class="built_in">min</span>(ans, <span class="built_in">max</span>(sum2 - lst[i], sum1 - pre[i]));</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-Say-No-to-Palindromes"><a href="#D-Say-No-to-Palindromes" class="headerlink" title="D. Say No to Palindromes"></a>D. Say No to Palindromes</h1><p><strong>题意</strong></p><p>定义一个字符串是$beautiful$的，当且仅当：任选一个长度大于1的子串，其不是回文串。</p><p>现在给出一个<strong>只含有字母a,b,c</strong>的字符串$s$，然后给出$m$个询问，对每个询问，你需要回答下标$l$到$r$的子串如果要称为$beautiful$串，至少需要修改几次（只能用a,b,c修改）。</p><p><strong>分析</strong></p><p>考虑下面的情况：<br>对字符串$baa$：</p><ol><li>$b$替换$a$，$bba$,$bab$都含有回文子串，都不行</li><li>$c$替换$a$,$bac,bca$都符合要求.</li><li>其他情况很显然不行</li></ol><p>进一步总结规律，我们发现，一个字符串如果要变成非回文，其只能是形如$abcabcabcabc…$或者$bcabcabca…$，其他的情况都会发生两个字符相邻一样，或者隔一个一样，因此都是会导致回文子串产生的。</p><p>因此我们只需要看当前子串转变为以上两种串任意一种的子串就可以了，然后取$min$。</p><p>这样暴力的复杂度就是$O(n^2)$了，但还不够，需要继续优化。</p><p>优化很简单，任意区间修改成对应串的最小次数显然可以用前缀和维护，复杂度降到$O(n+m)$.</p><p>当然你也可以用莫队分块$O(m\sqrt n)$或者线段树$O(mlogn)$，但显然做复杂了（我属于是最近学了莫队就想用莫队，就当是练习了，差点超时，被很多Hacker盯上了QAQ，幸好没人叉掉）</p><p><strong>代码（莫队）</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line">string abc;</span><br><span class="line">string bca;</span><br><span class="line">string cab;</span><br><span class="line">string cba;</span><br><span class="line">string acb;</span><br><span class="line">string bac;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">query</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l, r;</span><br><span class="line"><span class="keyword">int</span> ans, idx, blc;</span><br><span class="line">&#125;q[maxn];</span><br><span class="line">string s;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(<span class="keyword">const</span> query&amp; x, <span class="keyword">const</span> query&amp; y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x.blc != y.blc) <span class="keyword">return</span> x.blc &lt; y.blc;</span><br><span class="line"><span class="keyword">return</span> x.r &lt; y.r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">rearr</span><span class="params">(<span class="keyword">const</span> query&amp; x, <span class="keyword">const</span> query&amp; y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.idx &lt; y.idx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; maxn; ++i)&#123;</span><br><span class="line">abc += i % <span class="number">3</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">bca += (i + <span class="number">1</span>) % <span class="number">3</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">cab += (i + <span class="number">2</span>) % <span class="number">3</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(i % <span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">acb += <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">cba += <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">bac += <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i % <span class="number">3</span> == <span class="number">1</span>)&#123;</span><br><span class="line">acb += <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">cba += <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">bac += <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">acb += <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">cba += <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">bac += <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">t = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">cin &gt;&gt; q[i].l &gt;&gt; q[i].r;</span><br><span class="line">q[i].l--, q[i].r--;</span><br><span class="line">q[i].idx = i;</span><br><span class="line">q[i].blc = (q[i].l - <span class="number">1</span>) / (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(n) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(q + <span class="number">1</span>, q + <span class="number">1</span> + m, cmp1);</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> ans1 = <span class="number">0</span>, ans2 = <span class="number">0</span>, ans3 = <span class="number">0</span>, ans4 = <span class="number">0</span>, ans5 = <span class="number">0</span>, ans6 = <span class="number">0</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line"><span class="keyword">while</span>(l &gt; q[i].l)&#123;</span><br><span class="line">l--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != abc[l]) ans1++;</span><br><span class="line"><span class="keyword">if</span>(s[l] != bca[l]) ans2++;</span><br><span class="line"><span class="keyword">if</span>(s[l] != cab[l]) ans3++;</span><br><span class="line"><span class="keyword">if</span>(s[l] != acb[l]) ans4++;</span><br><span class="line"><span class="keyword">if</span>(s[l] != cba[l]) ans5++;</span><br><span class="line"><span class="keyword">if</span>(s[l] != bac[l]) ans6++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(r &lt; q[i].r)&#123;</span><br><span class="line">r++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != abc[r]) ans1++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != bca[r]) ans2++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != cab[r]) ans3++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != acb[r]) ans4++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != cba[r]) ans5++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != bac[r]) ans6++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(l &lt; q[i].l)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[l] != abc[l]) ans1--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != bca[l]) ans2--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != cab[l]) ans3--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != acb[l]) ans4--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != cba[l]) ans5--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != bac[l]) ans6--;</span><br><span class="line">l++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(r &gt; q[i].r)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[r] != abc[r]) ans1--;</span><br><span class="line"><span class="keyword">if</span>(s[r] != bca[r]) ans2--;</span><br><span class="line"><span class="keyword">if</span>(s[r] != cab[r]) ans3--;</span><br><span class="line"><span class="keyword">if</span>(s[r] != acb[r]) ans4--;</span><br><span class="line"><span class="keyword">if</span>(s[r] != cba[r]) ans5--;</span><br><span class="line"><span class="keyword">if</span>(s[r] != bac[r]) ans6--;</span><br><span class="line">r--;</span><br><span class="line">&#125;</span><br><span class="line">q[i].ans = <span class="built_in">min</span>(<span class="built_in">min</span>(ans1, <span class="built_in">min</span>(ans2, ans3)), <span class="built_in">min</span>(ans4, <span class="built_in">min</span>(ans5, ans6)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(q + <span class="number">1</span>, q + <span class="number">1</span> + m, rearr);</span><br><span class="line">fors(i, <span class="number">1</span>, m) cout &lt;&lt; q[i].ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>代码（前缀和）</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> pre[<span class="number">6</span>][maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">string s;</span><br><span class="line"><span class="keyword">char</span> check[<span class="number">6</span>][<span class="number">4</span>] = &#123;<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;bca&quot;</span>, <span class="string">&quot;cab&quot;</span>, <span class="string">&quot;acb&quot;</span>, <span class="string">&quot;cba&quot;</span>, <span class="string">&quot;bac&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">0</span>] != check[i][<span class="number">0</span>]) pre[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; s.<span class="built_in">size</span>(); ++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[j] != check[i][j % <span class="number">3</span>]) pre[i][j] = pre[i][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> pre[i][j] = pre[i][j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line"><span class="keyword">int</span> l, r; </span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">l--, r--;</span><br><span class="line"><span class="keyword">int</span> ans = inf;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; ++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(l != <span class="number">0</span>) ans = <span class="built_in">min</span>(ans, pre[j][r] - pre[j][l - <span class="number">1</span>]);</span><br><span class="line"><span class="keyword">else</span> ans = <span class="built_in">min</span>(ans, pre[j][r]);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>显然前缀和好写多了，效率也快多了</p>]]></content>
    
    
    <summary type="html">What do you call love in your reality?</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
    <category term="莫队" scheme="https://eykenis.github.io/tags/%E8%8E%AB%E9%98%9F/"/>
    
  </entry>
  
  <entry>
    <title>八月洛谷训练记录</title>
    <link href="https://eykenis.github.io/2021/07/30/%E5%85%AB%E6%9C%88%E6%B4%9B%E8%B0%B7%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/"/>
    <id>https://eykenis.github.io/2021/07/30/%E5%85%AB%E6%9C%88%E6%B4%9B%E8%B0%B7%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/</id>
    <published>2021-07-30T12:23:07.000Z</published>
    <updated>2021-09-06T00:52:05.758Z</updated>
    
    <content type="html"><![CDATA[<h1 id="7-30-day-1"><a href="#7-30-day-1" class="headerlink" title="7.30 day 1"></a>7.30 day 1</h1><h2 id="P2392-kkksc03考前临时抱佛脚"><a href="#P2392-kkksc03考前临时抱佛脚" class="headerlink" title="P2392 kkksc03考前临时抱佛脚"></a><a href="https://www.luogu.com.cn/problem/P2392">P2392 kkksc03考前临时抱佛脚</a></h2><p>数组长度20，直接爆搜. 注意这里要从左往右搜，不能乱序搜，乱序的复杂度$O(n!)$，20也受不住啊</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">bool</span> v[<span class="number">25</span>];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">25</span>];</span><br><span class="line"><span class="keyword">int</span> res;</span><br><span class="line"><span class="keyword">int</span> l, r;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> tot, <span class="keyword">int</span> now)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(now &gt; tot)&#123;</span><br><span class="line">res = <span class="built_in">min</span>(res, <span class="built_in">max</span>(l, r));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">l += a[now];</span><br><span class="line"><span class="built_in">dfs</span>(tot, now + <span class="number">1</span>);</span><br><span class="line">l -= a[now];</span><br><span class="line">r += a[now];</span><br><span class="line"><span class="built_in">dfs</span>(tot, now + <span class="number">1</span>);</span><br><span class="line">r -= a[now];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">5</span>];</span><br><span class="line">fors(i, <span class="number">1</span>, <span class="number">4</span>) cin &gt;&gt; s[i];</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, <span class="number">4</span>)&#123;</span><br><span class="line"><span class="built_in">mem</span>(v);</span><br><span class="line">res = inf;</span><br><span class="line">l = r = <span class="number">0</span>;</span><br><span class="line">fors(j, <span class="number">1</span>, s[i]) cin &gt;&gt; a[j];</span><br><span class="line"><span class="built_in">dfs</span>(s[i], <span class="number">1</span>);</span><br><span class="line">ans += res;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1441-砝码称重"><a href="#P1441-砝码称重" class="headerlink" title="P1441 砝码称重"></a><a href="https://www.luogu.com.cn/problem/P1441">P1441 砝码称重</a></h2><p>依然是搜索，只不过搜索终点套了一个01背包。</p><p><strong>依然提醒我，搜索一定要顺次，不要乱序，不然就T傻。</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">25</span>];</span><br><span class="line"><span class="keyword">bool</span> v[<span class="number">25</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">bool</span> f[<span class="number">2005</span>];</span><br><span class="line"><span class="keyword">int</span> sum;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">int</span> last)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(num == m)&#123;</span><br><span class="line"><span class="built_in">mem</span>(f);</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">f[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line"><span class="keyword">if</span>(v[i]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = sum; j - a[i] &gt;= <span class="number">0</span>; --j)&#123;</span><br><span class="line"><span class="keyword">if</span>(!f[j] &amp;&amp; f[j - a[i]]) cnt++;</span><br><span class="line">f[j] |= f[j - a[i]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans = <span class="built_in">max</span>(ans, cnt);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, last + <span class="number">1</span>, n)&#123;</span><br><span class="line"><span class="keyword">if</span>(!v[i])&#123;</span><br><span class="line">v[i] = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">dfs</span>(num + <span class="number">1</span>, i);</span><br><span class="line">v[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, n) cin &gt;&gt; a[i], sum += a[i];</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3370-【模板】字符串哈希"><a href="#P3370-【模板】字符串哈希" class="headerlink" title="P3370 【模板】字符串哈希"></a><a href="https://www.luogu.com.cn/problem/P3370">P3370 【模板】字符串哈希</a></h2><ol><li><p>使用进制哈希法，让每个字母对应唯一一个数字，然后按进制运算，整个字符串对应一个唯一数字。为防止结果数字过大，对质数取模。不放心冲突的话可以再加上一个小质数。如果想省空间，那就得排序，用$log$时间复杂度换空间。</p></li><li><p>使用trie树，平均复杂度$O(nlog|s|)$（代码是进制哈希）</p></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> prime = <span class="number">711451417</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hashe</span><span class="params">(string s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> x : s)&#123;</span><br><span class="line">ans = (ans * <span class="number">117</span> + (<span class="keyword">int</span>)x) % mod + prime;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, t)&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">a[i] = <span class="built_in">hashe</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + t);</span><br><span class="line">fors(i, <span class="number">1</span>, t)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] != a[i - <span class="number">1</span>]) ans++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1621-集合"><a href="#P1621-集合" class="headerlink" title="P1621 集合"></a><a href="https://www.luogu.com.cn/problem/P1621">P1621 集合</a></h2><p>用线性筛预处理1e5内的素数，然后在区间内枚举每个质数的倍数，通过并查集合并。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a, b, p;</span><br><span class="line"><span class="keyword">int</span> fa[maxn];</span><br><span class="line"><span class="keyword">int</span> prime[maxn];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e7</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> is[N];</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Prime</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">mem</span>(is);</span><br><span class="line">is[<span class="number">0</span>] = is[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; N; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span>(!is[i]) prime[cnt++] = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cnt &amp;&amp; prime[j] * i &lt; N; ++j)&#123;</span><br><span class="line">is[prime[j] * i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(fa[x] == x) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">return</span> fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> fx = <span class="built_in">find</span>(x), fy = <span class="built_in">find</span>(y);</span><br><span class="line"><span class="keyword">if</span>(fx == fy) <span class="keyword">return</span>;</span><br><span class="line">fa[fy] = fx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="built_in">Prime</span>();</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; p;</span><br><span class="line">fors(i, a, b) fa[i] = i;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(prime[x] &lt; p) x++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = x; prime[i] &lt;= b; ++i)&#123;</span><br><span class="line"><span class="keyword">int</span> s = prime[i];</span><br><span class="line"><span class="keyword">while</span>(s &lt; a) s += prime[i];</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line"><span class="keyword">while</span>(s &lt;= b)&#123;</span><br><span class="line">v.<span class="built_in">pb</span>(s);</span><br><span class="line">s += prime[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; v.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line"><span class="built_in">join</span>(v[i], v[i - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">fors(i, a, b) <span class="keyword">if</span>(fa[i] == i) ans++;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-31-day-2"><a href="#7-31-day-2" class="headerlink" title="7.31 day 2"></a>7.31 day 2</h1><p>出去太久了加上在补cf的题以及写题解，没时间写洛谷的题orz</p><h2 id="P1892-BOI2003-团伙"><a href="#P1892-BOI2003-团伙" class="headerlink" title="P1892 [BOI2003] 团伙"></a><a href="https://www.luogu.com.cn/problem/P1892">P1892 [BOI2003] 团伙</a></h2><p>复习一下最基本的带权并查集。其实用反集概念即可。</p><p>顺便回归一下最朴素的码风</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3005</span>;</span><br><span class="line"><span class="keyword">int</span> fa[maxn];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(fa[x] == x) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">return</span> fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> fx = <span class="built_in">find</span>(x), fy = <span class="built_in">find</span>(y);</span><br><span class="line"><span class="keyword">if</span>(fx == fy) <span class="keyword">return</span>;</span><br><span class="line">fa[fy] = fx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 敌人：合并n+x,y</span></span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; ++i) fa[i] = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line"><span class="keyword">char</span> x;</span><br><span class="line"><span class="keyword">int</span> l, r;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; l &gt;&gt; r;</span><br><span class="line"><span class="keyword">if</span>(x == <span class="string">&#x27;F&#x27;</span>) <span class="built_in">join</span>(l, r);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">join</span>(l, r + n), <span class="built_in">join</span>(r, l + n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; ++i)&#123; <span class="keyword">if</span>(fa[i] == i) cnt++;&#125;</span><br><span class="line">cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P4305-JLOI2011-不重复数字"><a href="#P4305-JLOI2011-不重复数字" class="headerlink" title="P4305 [JLOI2011]不重复数字 "></a><a href="https://www.luogu.com.cn/problem/P4305">P4305 [JLOI2011]不重复数字 </a></h2><p>可以用拉链哈希做。懒得写了，但是哈希题写unordered_map太敷衍，于是写了个排序</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> x, id;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> node&amp; x, <span class="keyword">const</span> node&amp; y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x.x != y.x) <span class="keyword">return</span> x.x &lt; y.x;</span><br><span class="line"><span class="keyword">return</span> x.id &lt; y.id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">re</span><span class="params">(<span class="keyword">const</span> node&amp; x, <span class="keyword">const</span> node&amp; y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.id &lt; y.id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n, x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123; <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i].x); a[i].id = i; &#125;</span><br><span class="line"><span class="built_in">sort</span>(a, a + n, cmp);</span><br><span class="line">vector&lt;node&gt; v;</span><br><span class="line">v.<span class="built_in">push_back</span>(a[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i].x != a[i - <span class="number">1</span>].x)&#123;</span><br><span class="line">v.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>(), re);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> x : v)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, x.x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-1-day-3"><a href="#8-1-day-3" class="headerlink" title="8.1 day 3"></a>8.1 day 3</h1><h2 id="P3405-USACO16DEC-Cities-and-States-S"><a href="#P3405-USACO16DEC-Cities-and-States-S" class="headerlink" title="P3405 [USACO16DEC]Cities and States S"></a><a href="https://www.luogu.com.cn/problem/P3405">P3405 [USACO16DEC]Cities and States S</a></h2><p>如果组合是$a,b$，从$b,a$保存的容器中获得贡献，然后向$a,b$容器加1。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">unordered_map&lt;string, <span class="keyword">int</span>&gt; mp;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">string a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">if</span>(a.<span class="built_in">substr</span>(<span class="number">0</span>, <span class="number">2</span>) == b.<span class="built_in">substr</span>(<span class="number">0</span>, <span class="number">2</span>));</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">mp[a.<span class="built_in">substr</span>(<span class="number">0</span>, <span class="number">2</span>) + b]++;</span><br><span class="line">ans += mp[b + a.<span class="built_in">substr</span>(<span class="number">0</span>, <span class="number">2</span>)];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3879-TJOI2010-阅读理解"><a href="#P3879-TJOI2010-阅读理解" class="headerlink" title="P3879 [TJOI2010]阅读理解"></a><a href="https://www.luogu.com.cn/problem/P3879">P3879 [TJOI2010]阅读理解</a></h2><p>map裸题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> n, x;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">map&lt;string, <span class="keyword">bool</span>&gt; mp[n + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">string s;</span><br><span class="line"><span class="built_in">getline</span>(cin, s);</span><br><span class="line">stringstream ss;</span><br><span class="line">ss &lt;&lt; s;</span><br><span class="line">ss &gt;&gt; x;</span><br><span class="line"><span class="keyword">while</span>(ss &gt;&gt; s)&#123;</span><br><span class="line">mp[i][s] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(mp[j].<span class="built_in">count</span>(s))&#123;</span><br><span class="line">cout &lt;&lt; j &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3916-图的遍历"><a href="#P3916-图的遍历" class="headerlink" title="P3916 图的遍历"></a><a href="https://www.luogu.com.cn/problem/P3916">P3916 图的遍历</a></h2><p>反向dfs，求较大的点能去哪些点，这样就能进行不回溯的dfs了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; v[<span class="number">100005</span>];</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">100005</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> f)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> x : v[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (!ans[x]) &#123;</span><br><span class="line">ans[x] = f;</span><br><span class="line"><span class="built_in">dfs</span>(x, f);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="comment">// n次bfs，复杂度O(n(n+m)), 不可接受</span></span><br><span class="line"><span class="comment">// n次dfs，不访问已经访问过的节点，复杂度O(n+m)，好！</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i) &#123;</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">v[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; --i) &#123;</span><br><span class="line"><span class="keyword">if</span>(!ans[i]) ans[i] = i;</span><br><span class="line"><span class="built_in">dfs</span>(i, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i ) &#123;</span><br><span class="line">cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-2-day-4"><a href="#8-2-day-4" class="headerlink" title="8.2 day 4"></a>8.2 day 4</h1><p>学习网络流算法+摸鱼</p><h1 id="8-3-day-5"><a href="#8-3-day-5" class="headerlink" title="8.3 day 5"></a>8.3 day 5</h1><p>多校自闭+摸鱼</p><h1 id="8-4-day-6"><a href="#8-4-day-6" class="headerlink" title="8.4 day 6"></a>8.4 day 6</h1><p>今天摸摸Unity，诶嘿……</p><h1 id="8-5-day-7"><a href="#8-5-day-7" class="headerlink" title="8.5 day 7"></a>8.5 day 7</h1><p>多校自闭，摸了会Unity，感觉最近状态很差……依然没有做洛谷。</p><h1 id="8-6-day-8"><a href="#8-6-day-8" class="headerlink" title="8.6 day 8"></a>8.6 day 8</h1><p>伞兵才会一天玩五六个小时bf</p><h1 id="8-7-day-9"><a href="#8-7-day-9" class="headerlink" title="8.7 day 9"></a>8.7 day 9</h1><h2 id="P1918-保龄球"><a href="#P1918-保龄球" class="headerlink" title="P1918 保龄球"></a><a href="https://www.luogu.com.cn/problem/P1918#submit">P1918 保龄球</a></h2><p>水题，找找状态（洛谷100AC纪念，2021-08-07 12:19:41）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :vsDebug.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-08-05</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mp;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        mp[x] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> q;</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        cout &lt;&lt; mp[x] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2814-家谱"><a href="#P2814-家谱" class="headerlink" title="P2814 家谱"></a><a href="https://www.luogu.com.cn/problem/P2814">P2814 家谱</a></h2><p>评测机出锅了，下载下来和std输出一模一样判我wa了，不管了</p><p>字符串并查集</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :vsDebug.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-08-05</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line">unordered_map&lt;string, string&gt; fa;</span><br><span class="line"><span class="function">string <span class="title">find</span><span class="params">(string x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fa[x] == x)&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(string x, string y)</span></span>&#123;</span><br><span class="line">    string fx = <span class="built_in">find</span>(x), fy = <span class="built_in">find</span>(y);</span><br><span class="line">    fa[fy] = fx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// DDLC_ESCAPE_PLAN_FAILED;</span></span><br><span class="line">    <span class="comment">// freopen(&quot;out.txt&quot;, &quot;w&quot;, stdout);</span></span><br><span class="line">    string s;</span><br><span class="line">    string f;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">getline</span>(cin, s) &amp;&amp; s != <span class="string">&quot;$&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="string">&#x27;#&#x27;</span>)&#123;</span><br><span class="line">            f = s.<span class="built_in">substr</span>(<span class="number">1</span>, s.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(!fa.<span class="built_in">count</span>(f)) fa[f] = f;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="string">&#x27;+&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!fa.<span class="built_in">count</span>(f)) fa[f] = f;</span><br><span class="line">            <span class="keyword">if</span>(!fa.<span class="built_in">count</span>(s.<span class="built_in">substr</span>(<span class="number">1</span>, s.<span class="built_in">size</span>() - <span class="number">1</span>))) fa[s.<span class="built_in">substr</span>(<span class="number">1</span>, s.<span class="built_in">size</span>() - <span class="number">1</span>)] = s.<span class="built_in">substr</span>(<span class="number">1</span>, s.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">join</span>(f, s.<span class="built_in">substr</span>(<span class="number">1</span>, s.<span class="built_in">size</span>() - <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            string u = s.<span class="built_in">substr</span>(<span class="number">1</span>, s.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(!fa.<span class="built_in">count</span>(u)) fa[u] = u;</span><br><span class="line">            cout &lt;&lt; u &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="built_in">find</span>(u) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1090-NOIP2004-提高组-合并果子-USACO06NOV-Fence-Repair-G"><a href="#P1090-NOIP2004-提高组-合并果子-USACO06NOV-Fence-Repair-G" class="headerlink" title="P1090 [NOIP2004 提高组] 合并果子 / [USACO06NOV] Fence Repair G"></a><a href="https://www.luogu.com.cn/problem/P1090#submit">P1090 [NOIP2004 提高组] 合并果子 / [USACO06NOV] Fence Repair G</a></h2><p>二叉堆基础题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, vector&lt;<span class="keyword">int</span>&gt;, greater&lt;<span class="keyword">int</span>&gt;&gt; q;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        q.<span class="built_in">push</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(q.<span class="built_in">size</span>() &gt; <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> x = q.<span class="built_in">top</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">int</span> y = q.<span class="built_in">top</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line">        ans += x + y;</span><br><span class="line">        q.<span class="built_in">push</span>(x + y);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1168-中位数"><a href="#P1168-中位数" class="headerlink" title="P1168 中位数"></a><a href="https://www.luogu.com.cn/problem/P1168#submit">P1168 中位数</a></h2><p>优先队列好例题，维护一个大顶堆和一个小顶堆即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, vector&lt;<span class="keyword">int</span>&gt;, greater&lt;<span class="keyword">int</span>&gt;&gt; gq;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> mid;</span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    cout &lt;&lt; (mid = x) &lt;&lt; endl;</span><br><span class="line">    fors(i, <span class="number">2</span>, n)&#123;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        <span class="keyword">if</span>(x &gt; mid) gq.<span class="built_in">push</span>(x);</span><br><span class="line">        <span class="keyword">else</span> q.<span class="built_in">push</span>(x);</span><br><span class="line">        <span class="keyword">while</span>(gq.<span class="built_in">size</span>() &gt; q.<span class="built_in">size</span>())&#123;</span><br><span class="line">            q.<span class="built_in">push</span>(mid);</span><br><span class="line">            mid = gq.<span class="built_in">top</span>();</span><br><span class="line">            gq.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(q.<span class="built_in">size</span>() &gt; gq.<span class="built_in">size</span>())&#123;</span><br><span class="line">            gq.<span class="built_in">push</span>(mid);</span><br><span class="line">            mid = q.<span class="built_in">top</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i &amp; <span class="number">1</span>) cout &lt;&lt; mid &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2085-最小函数"><a href="#P2085-最小函数" class="headerlink" title="P2085 最小函数"></a><a href="https://www.luogu.com.cn/problem/P2085">P2085 最小函数</a></h2><p>维护一个容量为m的优先队列即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> a, b, c;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> fx = a * x * x + b * x + c;</span><br><span class="line">            <span class="keyword">if</span>(q.<span class="built_in">size</span>() &lt; m || (q.<span class="built_in">size</span>() &gt;= m &amp;&amp; q.<span class="built_in">top</span>() &gt; fx))&#123;</span><br><span class="line">                q.<span class="built_in">push</span>(fx);</span><br><span class="line">                <span class="keyword">if</span>(q.<span class="built_in">size</span>() &gt; m) q.<span class="built_in">pop</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">            x++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        ans.<span class="built_in">pb</span>(q.<span class="built_in">top</span>());</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = m - <span class="number">1</span>; j &gt;= <span class="number">0</span>; --j)&#123;</span><br><span class="line">        cout &lt;&lt; ans[j] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1631-序列合并"><a href="#P1631-序列合并" class="headerlink" title="P1631 序列合并"></a><a href="https://www.luogu.com.cn/problem/P1631">P1631 序列合并</a></h2><p>和上面P2085的思路很相近，都是找Top K. 这里不能算出所有答案，所以排序贪心一下。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :vsDebug.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-08-07</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        cin &gt;&gt; b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="built_in">sort</span>(b + <span class="number">1</span>, b + <span class="number">1</span> + n);</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        fors(j, <span class="number">1</span>, n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(q.<span class="built_in">size</span>() &gt;= n &amp;&amp; a[i] + b[j] &gt; q.<span class="built_in">top</span>()) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">else</span> q.<span class="built_in">push</span>(a[i] + b[j]);</span><br><span class="line">            <span class="keyword">if</span>(q.<span class="built_in">size</span>() &gt; n) q.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        ans.<span class="built_in">pb</span>(q.<span class="built_in">top</span>());</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = n - <span class="number">1</span>; j &gt;= <span class="number">0</span>; --j)&#123;</span><br><span class="line">        cout &lt;&lt; ans[j] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-8-day-10"><a href="#8-8-day-10" class="headerlink" title="8.8 day 10"></a>8.8 day 10</h1><h2 id="P1801-黑匣子"><a href="#P1801-黑匣子" class="headerlink" title="P1801 黑匣子"></a><a href="https://www.luogu.com.cn/problem/P1801">P1801 黑匣子</a></h2><p>和P1168一样，只不过这里不一定是中位数，而是位置随时可能改变</p><p>感觉还题目可以更进一步，位置左右任意移动</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = (<span class="keyword">int</span>)(<span class="number">-2e9</span>) - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt; u;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> m, n;</span><br><span class="line">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, vector&lt;<span class="keyword">int</span>&gt;, greater&lt;<span class="keyword">int</span>&gt;&gt; gq;</span><br><span class="line">    fors(i, <span class="number">1</span>, m) cin &gt;&gt; a[i];</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        u.<span class="built_in">push</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = inf;</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">        <span class="keyword">if</span>(mid == inf)&#123;</span><br><span class="line">            gq.<span class="built_in">push</span>(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[i] &gt; mid)&#123;</span><br><span class="line">            gq.<span class="built_in">push</span>(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            q.<span class="built_in">push</span>(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(p &amp;&amp; q.<span class="built_in">size</span>() &gt;= p)&#123;</span><br><span class="line">            gq.<span class="built_in">push</span>(mid);</span><br><span class="line">            mid = q.<span class="built_in">top</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(u.<span class="built_in">front</span>() == i)&#123;</span><br><span class="line">            u.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span>(mid != inf) q.<span class="built_in">push</span>(mid);</span><br><span class="line">            mid = gq.<span class="built_in">top</span>();</span><br><span class="line">            gq.<span class="built_in">pop</span>();</span><br><span class="line">            cout &lt;&lt; mid &lt;&lt; endl;</span><br><span class="line">            p++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P4053-JSOI2007-建筑抢修"><a href="#P4053-JSOI2007-建筑抢修" class="headerlink" title="P4053 [JSOI2007]建筑抢修"></a><a href="https://www.luogu.com.cn/problem/P4053">P4053 [JSOI2007]建筑抢修</a></h2><p>优先队列贪心</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> time;</span><br><span class="line">    <span class="keyword">int</span> limit;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> node&amp; x, <span class="keyword">const</span> node&amp; y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.limit &lt; y.limit;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    fors(i, <span class="number">1</span>, n) cin &gt;&gt; a[i].time &gt;&gt; a[i].limit;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n, cmp);</span><br><span class="line">    <span class="keyword">int</span> time = <span class="number">0</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i].time + time &gt; a[i].limit)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i].time &lt; q.<span class="built_in">top</span>())&#123;</span><br><span class="line">                time -= q.<span class="built_in">top</span>();</span><br><span class="line">                q.<span class="built_in">pop</span>();</span><br><span class="line">                q.<span class="built_in">push</span>(a[i].time);</span><br><span class="line">                time += a[i].time;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        q.<span class="built_in">push</span>(a[i].time);</span><br><span class="line">        time += a[i].time;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; (<span class="keyword">int</span>)q.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-9-day-11"><a href="#8-9-day-11" class="headerlink" title="8.9 day 11"></a>8.9 day 11</h1><p>没打</p><h1 id="8-10-day-12"><a href="#8-10-day-12" class="headerlink" title="8.10 day 12"></a>8.10 day 12</h1><p><a href="https://www.luogu.com.cn/problem/P2613">P2613 【模板】有理数取余</a></p><p>多校之后，再复习一下分数取模</p><p>以后分数取逆元再也不查资料惹</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :vsDebug.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-08-10</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">19260817</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> p, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p &amp; <span class="number">1</span>) ans = (ans * x) % m;</span><br><span class="line">        x = (x * x) % m;</span><br><span class="line">        p &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">divi</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x % mod * <span class="built_in">fpow</span>(y, mod - <span class="number">2</span>, mod)) % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    t = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">        string s1, s2;</span><br><span class="line">        cin &gt;&gt; s1 &gt;&gt; s2;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s1.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">            a = (a * <span class="number">10</span> + s1[i] - <span class="string">&#x27;0&#x27;</span>) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s2.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">            b = (b * <span class="number">10</span> + s2[i] - <span class="string">&#x27;0&#x27;</span>) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(b % mod == <span class="number">0</span>) cout &lt;&lt; <span class="string">&quot;Angry!&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="built_in">divi</span>(a, b) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-11-day-13"><a href="#8-11-day-13" class="headerlink" title="8.11 day 13"></a>8.11 day 13</h1><h1 id="8-12-day-14"><a href="#8-12-day-14" class="headerlink" title="8.12 day 14"></a>8.12 day 14</h1><p>这两天具体去干了什么我就不说了</p><p>感觉自己这也想干，那也想干</p><p>最后什么也没干成</p><p>确实是有B students的好奇心和求知欲</p><p>但是没有B students的远见，也缺乏A students的定力</p><p>最后自己的技能就是</p><p>四不像</p><p>什么也不会</p><p>这样子真的不好，回想一下高中老师是怎么教我的 其实我是有把一件事做好做精的能力的吧。只是面对的选择太多的时候，我会什么都尝试一下，然后浅尝辄止。</p><p>是时候好好想一想，我要的到底是什么，我应该去做什么</p><p>然后就去做，不要再去看哪个可以搞哪个有意思了，我什么也不看，我只做好自己之前想做的</p><p>多学点知识吧。</p><h1 id="8-13-day-15"><a href="#8-13-day-15" class="headerlink" title="8.13 day 15"></a>8.13 day 15</h1><h2 id="P3865-【模板】ST-表"><a href="#P3865-【模板】ST-表" class="headerlink" title="P3865 【模板】ST 表"></a><a href="https://www.luogu.com.cn/problem/P3865">P3865 【模板】ST 表</a></h2><p>今天学ST表~</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> f[maxn][<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">process</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) f[i][<span class="number">0</span>] = a[i]; </span><br><span class="line">    <span class="keyword">int</span> t = <span class="built_in">log</span>(n) / <span class="built_in">log</span>(<span class="number">2</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; <span class="number">20</span>; j ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n - (<span class="number">1</span> &lt;&lt; j) + <span class="number">1</span>; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i][j] = <span class="built_in">max</span>(f[i][j<span class="number">-1</span>],f[i + (<span class="number">1</span> &lt;&lt; (j - <span class="number">1</span>))][j - <span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="built_in">log</span>(<span class="built_in">abs</span>(y-x + <span class="number">1</span>))/ <span class="built_in">log</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">int</span> a = f[x][t];</span><br><span class="line">    <span class="keyword">int</span> b = f[y - (<span class="number">1</span> &lt;&lt; t) + <span class="number">1</span>][t];</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(a,b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line"><span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// DDLC_ESCAPE_PLAN_FAILED;</span></span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">    n = <span class="built_in">read</span>();</span><br><span class="line">    m = <span class="built_in">read</span>();</span><br><span class="line">    fors(i, <span class="number">1</span>, n) a[i] = <span class="built_in">read</span>();</span><br><span class="line">    <span class="built_in">process</span>();</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        l = <span class="built_in">read</span>();</span><br><span class="line">        r = <span class="built_in">read</span>();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">query</span>(l, r));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Does my pen only write bitter words for those who are dear to me?</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>分块与普通莫队</title>
    <link href="https://eykenis.github.io/2021/07/26/%E5%88%86%E5%9D%97%E4%B8%8E%E6%99%AE%E9%80%9A%E8%8E%AB%E9%98%9F/"/>
    <id>https://eykenis.github.io/2021/07/26/%E5%88%86%E5%9D%97%E4%B8%8E%E6%99%AE%E9%80%9A%E8%8E%AB%E9%98%9F/</id>
    <published>2021-07-26T07:10:56.000Z</published>
    <updated>2021-07-26T07:17:11.624Z</updated>
    
    <content type="html"><![CDATA[<p><del>分块，然后捡到莫队</del></p><p><strong>前言</strong></p><p>HDU多校连续两天都遇到了莫队的题，于是蒟蒻缓慢地开始学习莫队算法</p><p>初见莫队，只知道是个离线区间工具，以为会有点复杂。但其实基础的莫队很好理解，就是一种读完之后感觉很普通的离线的分块算法（<del>虽然，我还是不可能想得到就是了</del>）</p><h1 id="分块算法"><a href="#分块算法" class="headerlink" title="分块算法"></a>分块算法</h1><p>为了引入莫队，不妨先看一个分块的经典例题（不想看可以通过目录跳过）</p><p><a href="https://www.luogu.com.cn/problem/P3870">洛谷P3870 开关</a></p><p>简化题意：一个01序列，要求可以进行动态区间取反和区间查询（有几个1）。</p><p>序列和询问的数据规模都是$1e5$，暴力遍历区间的复杂度是$O(nm)$，显然无法接受。</p><p>考虑分块，将长度为$n$的序列切割成$\sqrt n$个固定的区间，每个区间长度$\sqrt n$. 那么我们设想，对于每次询问/修改，我们直接维护区间的状态就好了，对各个分块维护一个$ans$数组，由于区间最多$\sqrt n$个，所以复杂度就会降到$O(m\sqrt n)$.</p><p>但是很快就发现，每次询问和修改不一定都恰好落在我们分好的区间边界上。例如，我们的划分是$(1,3),(4,6),(7,10)$，但某次询问的操作区间是$(2,9)$，那么，就会有$(2,3)$和$(7,9)$这两个我们没有划出来的区间。</p><p>怎么办？暴力计算！由于每个区间的长度最多$\sqrt n$，因此当询问区间的起始区间和结尾区间不完整时，我们大可以对这两个区间暴力维护答案。因此最终的复杂度仍然是$O(m\sqrt n)$.</p><p>有的人可能会问：<strong>为什么分块的长度要是 $\sqrt n$ 呢？</strong></p><p>不妨分析：假设分块的长度是$x$，那么块的数量就是$n/x$. 每次询问过程中，我们都需要处理开头区间，结尾区间，以及在中间的剩下的完整的区间。这些完整的区间操作都是$O(1)$的，而他们的数量规模导致了这些区间的操作总复杂度在$O(n/x)$. 又我们可能还需要暴力地操作一头一尾，所以我们还需要$O(x)$的时间去完成。那么总时间就会使$O(max(n/x,x))$. 显然，这里$x$取$\sqrt n$可以让每次询问的复杂度最小。</p><p>分析完了，现在我们需要考虑，如何具体地进行答案维护与暴力。</p><p>由于分块的过程中有部分暴力，对块的操作与对单个元素的操作是并存的。为了让整块操作与散块操作不冲突，我们可以为每个区间打上tag，tag为0表示该区间正常计算，tag为1表示该区间全部取反计算。那么每次整块操作时，我们只需要关心tag，对tag取反即可。而散块操作时，我们不需要关心tag，只需要对每个位置分别取反即可。最后维护出每个块的$ans$.</p><p>而在询问时，如果这个区间的tag是0，说明区间没有被整个取反，那么我们直接取其$ans$作为答案；如果tag是1，那么区间被取反，所以我们也要对$ans$取反，以$n-ans$作为答案。</p><p><strong>代码（注释详解）</strong></p><p>（由于也才没学多久，没看过板子，代码属于自己乱搞，可能有很多冗余繁杂的地方，但应该相对好理解）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">10005</span>, M = <span class="number">100005</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, ans, tag;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="keyword">int</span> st[M] = &#123;<span class="number">0</span>&#125;; <span class="comment">// 开灯状态，用于散块暴力</span></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> n, m; <span class="comment">// 灯的数目和操作数目</span></span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">int</span> now = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(now &gt;= n + <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">        num++;</span><br><span class="line">        a[i].l = now;</span><br><span class="line">        a[i].r = <span class="built_in">min</span>(n, now + (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(n));</span><br><span class="line">        now = a[i].r + <span class="number">1</span>;</span><br><span class="line">        a[i].ans = a[i].tag = <span class="number">0</span>; <span class="comment">// 开灯数目和tag</span></span><br><span class="line">    &#125; <span class="comment">// 分块操作</span></span><br><span class="line">    <span class="keyword">int</span> p, l, r;</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; p &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="keyword">if</span>(p)&#123; <span class="comment">// query</span></span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(i &lt;= num &amp;&amp; a[i].l &lt; l) i++;</span><br><span class="line">            <span class="keyword">if</span>(i &gt; num || a[i].l &gt; l) i--;</span><br><span class="line">            <span class="comment">// 找到左端散区间a[i]</span></span><br><span class="line">            <span class="keyword">int</span> ans = <span class="number">0</span>; <span class="comment">// 总答案</span></span><br><span class="line">            <span class="keyword">if</span>(a[i].l != l) <span class="comment">// 注意这个if语句避免了把最左边的整块当散块</span></span><br><span class="line">            &#123;</span><br><span class="line">                fors(j, l, <span class="built_in">min</span>(a[i].r, r))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(st[j] ^ a[i].tag) ans++;</span><br><span class="line">                &#125;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(i &lt;= num &amp;&amp; a[i].r &lt;= r)&#123;</span><br><span class="line">                ans += a[i].ans;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i &lt;= num)&#123;</span><br><span class="line">                fors(j, a[i].l, r)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(st[j] ^ a[i].tag) ans++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; <span class="comment">// switch</span></span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(i &lt;= num &amp;&amp; a[i].l &lt; l) i++;</span><br><span class="line">            <span class="keyword">if</span>(i &gt; num || a[i].l &gt; l) i--;</span><br><span class="line">            <span class="comment">// 找到左端散区间a[i]</span></span><br><span class="line">            <span class="keyword">int</span> tmp = <span class="number">0</span>; <span class="comment">// 修改后，散区间净增加多少个打开的灯</span></span><br><span class="line">            <span class="keyword">if</span>(a[i].l != l) <span class="comment">// 注意这个if语句避免了把最左边的整块当散块</span></span><br><span class="line">            &#123;</span><br><span class="line">                fors(j, l, <span class="built_in">min</span>(a[i].r, r))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(st[j] ^ a[i].tag) tmp--; <span class="comment">// 如果区间的tag和其中某点不同，说明灯本来开着，使tmp-- </span></span><br><span class="line">                        <span class="keyword">else</span> tmp++; <span class="comment">// 否则tmp++</span></span><br><span class="line">                    st[j] = <span class="number">1</span> - st[j];</span><br><span class="line">                &#125;</span><br><span class="line">                a[i].ans += tmp;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//-----</span></span><br><span class="line">            <span class="keyword">while</span>(i &lt;= num &amp;&amp; a[i].r &lt;= r)&#123;</span><br><span class="line">                a[i].ans = a[i].r - a[i].l + <span class="number">1</span> - a[i].ans; <span class="comment">// 反转ans</span></span><br><span class="line">                a[i].tag = <span class="number">1</span> - a[i].tag; <span class="comment">// 反转tag</span></span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//-----整块修改</span></span><br><span class="line">            <span class="keyword">if</span>(i &lt;= num)&#123;</span><br><span class="line">                tmp = <span class="number">0</span>;</span><br><span class="line">                fors(j, a[i].l, r)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(st[j] ^ a[i].tag) tmp--; <span class="comment">// 如果区间的tag和其中某点不同，说明灯本来开着，使tmp-- </span></span><br><span class="line">                    <span class="keyword">else</span> tmp++; <span class="comment">// 否则tmp++</span></span><br><span class="line">                    st[j] = <span class="number">1</span> - st[j];</span><br><span class="line">                &#125;</span><br><span class="line">                a[i].ans += tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以此，我们了解了分块的基础知识。</p><h1 id="普通莫队"><a href="#普通莫队" class="headerlink" title="普通莫队"></a>普通莫队</h1><p><del>实际上，普通莫队可能比上面那题还要好写</del></p><p>例题：</p><p><a href="[P2709 小B的询问 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn">洛谷P2709 小B的询问</a>](<a href="https://www.luogu.com.cn/problem/P2709">https://www.luogu.com.cn/problem/P2709</a>))</p><p>需要维护每个数字出现的次数。</p><p>考虑将整个序列分成$\sqrt n$块，对每个询问，按照它们$l$（左边界）的位置将这些询问放入不同的块内。例如，$n=9$，分成$(1,3),(4,6),(7,9)$三块，然后询问的区间分别是$(5,7),(1,4),(6,8)$.</p><p>那么$(1,4)$在第一块内，$(5,7),(6,8)$在第二块内。</p><p>最后维护两个指针$l,r$，通过双指针的移动保存$(l,r)$的答案。</p><p>分析复杂度：</p><p>在每一块内，$l$最多移动$\sqrt n$次，但$r$就不确定了，每次询问都可能移动$n$次。这样的话就麻烦了，复杂度又回到了$O(nm)$. 如何解决呢？对每一块内的询问，我们将所有询问按$r$升序排序。这样就能保证$r$的移动规模在$O(n)$范围内了。$l$的移动范围很小，只有<script type="math/tex">\sqrt n</script>，所以我们对$r$排序，不对$l$排序。</p><p>那么，对于整个序列，$r$的移动也是$O(n)$的，这将与询问次数无关。每次询问，$l$的移动都是$O(\sqrt n)$的，故整个复杂度是$O(m\sqrt n)$.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">query</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r; ll ans;<span class="comment">// 左右边界；询问结果</span></span><br><span class="line">    <span class="keyword">int</span> idx, blc; <span class="comment">// 下标；属于第几个块</span></span><br><span class="line">&#125;q[maxn];</span><br><span class="line"><span class="keyword">int</span> st[maxn]; <span class="comment">// 原数组</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(<span class="keyword">const</span> query&amp; x, <span class="keyword">const</span> query&amp; y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.blc != y.blc) <span class="keyword">return</span> x.blc &lt; y.blc;</span><br><span class="line">    <span class="keyword">return</span> x.r &lt; y.r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">rearr</span><span class="params">(<span class="keyword">const</span> query&amp; x, <span class="keyword">const</span> query&amp; y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.idx &lt; y.idx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">    fors(i, <span class="number">1</span>, n) cin &gt;&gt; st[i];</span><br><span class="line"></span><br><span class="line">    fors(i, <span class="number">1</span>, m) cin &gt;&gt; q[i].l &gt;&gt; q[i].r, q[i].idx = i, q[i].blc = (q[i].l - <span class="number">1</span>) / (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(n) + <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">sort</span>(q + <span class="number">1</span>, q + <span class="number">1</span> + m, cmp1);</span><br><span class="line"></span><br><span class="line">    ll ans = <span class="number">0</span>; <span class="comment">// 当前答案</span></span><br><span class="line">    unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mp; <span class="comment">// 存每个数的出现次数</span></span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, r = <span class="number">0</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(l &gt; q[i].l)&#123;</span><br><span class="line">            l--;</span><br><span class="line">            ans -= mp[st[l]] * mp[st[l]];</span><br><span class="line">            mp[st[l]]++;</span><br><span class="line">            ans += mp[st[l]] * mp[st[l]];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(r &lt; q[i].r)&#123;</span><br><span class="line">            r++;</span><br><span class="line">            ans -= mp[st[r]] * mp[st[r]];</span><br><span class="line">            mp[st[r]]++;</span><br><span class="line">            ans += mp[st[r]] * mp[st[r]];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(l &lt; q[i].l)&#123;</span><br><span class="line">            ans -= mp[st[l]] * mp[st[l]];</span><br><span class="line">            mp[st[l]]--;</span><br><span class="line">            ans += mp[st[l]] * mp[st[l]];</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(r &gt; q[i].r)&#123;</span><br><span class="line">            ans -= mp[st[r]] * mp[st[r]];</span><br><span class="line">            mp[st[r]]--;</span><br><span class="line">            ans += mp[st[r]] * mp[st[r]];</span><br><span class="line">            r--;</span><br><span class="line">        &#125;</span><br><span class="line">        q[i].ans = ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(q + <span class="number">1</span>, q + <span class="number">1</span> + m, rearr);</span><br><span class="line">    fors(i, <span class="number">1</span>, m) cout &lt;&lt; q[i].ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">And in your reality</summary>
    
    
    
    <category term="知识点" scheme="https://eykenis.github.io/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="数据结构" scheme="https://eykenis.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="莫队" scheme="https://eykenis.github.io/tags/%E8%8E%AB%E9%98%9F/"/>
    
    <category term="分块" scheme="https://eykenis.github.io/tags/%E5%88%86%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>2021“MINIEYE杯”中国大学生算法设计超级联赛（1）解题报告</title>
    <link href="https://eykenis.github.io/2021/07/21/2021%E2%80%9CMINIEYE%E6%9D%AF%E2%80%9D%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E8%B6%85%E7%BA%A7%E8%81%94%E8%B5%9B%EF%BC%881%EF%BC%89%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    <id>https://eykenis.github.io/2021/07/21/2021%E2%80%9CMINIEYE%E6%9D%AF%E2%80%9D%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E8%B6%85%E7%BA%A7%E8%81%94%E8%B5%9B%EF%BC%881%EF%BC%89%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/</id>
    <published>2021-07-21T11:12:01.000Z</published>
    <updated>2021-07-21T11:42:08.079Z</updated>
    
    <content type="html"><![CDATA[<p><strong><del>中超联赛</del></strong></p><p><del><strong>CSL中超可没巨佬们训练强度大</strong></del></p><p>“什么是BSGS、莫队、KD tree”</p><p>我看我是完全不懂噢</p><h2 id="HDU6950-Mod-Or-and-Everything"><a href="#HDU6950-Mod-Or-and-Everything" class="headerlink" title="HDU6950 Mod, Or and Everything"></a>HDU6950 Mod, Or and Everything</h2><p><strong>题意</strong></p><p>求$(n\ mod\ 1)|(n\ mod \ 2)|…|(n\ mod\ (n-1))$的值</p><p><strong>分析</strong></p><p>打比赛时，</p><p>队友：经过化简可以得到答案为$2^k-1$</p><p>我：观察样例可以得到答案为$2^k-1$</p><p>QAQ</p><p>而实际上std的思路：$n\ mod\ i \leq \lceil \frac{n}{2}\rceil-1$，所以$n\ mod\ (n-i)=i$</p><p>所以这个和值就是$0$到$\lceil \frac{n}{2}\rceil-1$的所有整数的和. 求出来是$2^k-1$，这里的$k$是某个带$n$的式子，懒得认真推的话可以根据样例猜出，是令$n=2^x$，这个$x$向下取整再减1得到$k$. 但如果$x$本来就是整数，那么$x$还要再减去1.（总之看代码吧，或者去看std代码）</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">0</span>, res = n;</span><br><span class="line">        <span class="keyword">while</span>(res)&#123;</span><br><span class="line">            res &gt;&gt;= <span class="number">1LL</span>;</span><br><span class="line">            x++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1LL</span>)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">continue</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n == (<span class="number">1LL</span> &lt;&lt; (x - <span class="number">1LL</span>))) x--;</span><br><span class="line">        cout &lt;&lt; (<span class="number">1LL</span> &lt;&lt; (x - <span class="number">1LL</span>)) - <span class="number">1LL</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HDU6954-Minimum-spanning-tree"><a href="#HDU6954-Minimum-spanning-tree" class="headerlink" title="HDU6954 Minimum spanning tree"></a>HDU6954 Minimum spanning tree</h2><p><strong>题意</strong></p><p>有一个$n-1$个节点的带权完全图，节点标记为$2,3,…,n$. 完全图中从点$i$到点$j$的边的权值大小为$lcm(i,j)$，请你求出这个图的最小生成树。$n\leq 10000000$.</p><p><strong>分析</strong></p><p>容易知道，对任何一个边$(i,j)$，这个边的权值不会小于$max(i,j)$. </p><p>那么对于一个合数，它连向自己的因子即可，这时候边的权值就是这个合数。由于因子一定比自己小，所以在$2,3,..i$中一定存在。</p><p>而对于一个质数$x$，和任意一点$i$相连，都有$lcm(x,i)=x·i$. 故令$i$最小，取2即可保证边权最小。</p><p>分析完毕。找出质数，然后分类处理即可。线性筛处理之</p><p><strong>其他</strong></p><p>首先看到题：哇，$1e8$的范围，这怎么做。这算法都给限制到$O(n)$了，难不成是有什么公式？</p><p>思考一会之后：（其实已经得到正解）用线性筛试一波，自己调试1.5秒，完蛋</p><p>尝试各种卡常之后：优化到1.1秒了，实在顶不住了，要不直接交？</p><p>交上去之后：卧槽，MLE，那我不求$MST$前缀和了吧，直接算，但是这样更容易超时了，纠结</p><p>再交：居然700多ms过了，杭电评测机强啊</p><p>打完比赛后，才发现，原来数据规模看错了，是$1e7$，根本不需要卡（）</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e7</span> + <span class="number">10</span>; <span class="comment">// 比赛的时候看成1e8，导致多了一次MLE</span></span><br><span class="line"><span class="keyword">bool</span> p[maxn];</span><br><span class="line"><span class="keyword">int</span> pr[maxn];</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Prime</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">mem</span>(p);</span><br><span class="line">    p[<span class="number">0</span>] = p[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; maxn; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!p[i]) pr[cnt++] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cnt &amp;&amp; pr[j] * i &lt; maxn; ++j)&#123;</span><br><span class="line">            p[pr[j] * i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i % pr[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    pre[<span class="number">0</span>] = pre[<span class="number">1</span>] = pre[<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span>; i &lt; maxn; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!p[i]) pre[i] = pre[i - <span class="number">1</span>] + <span class="number">2</span> * i;</span><br><span class="line">        <span class="keyword">else</span> pre[i] = pre[i - <span class="number">1</span>] + i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="built_in">Prime</span>();</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        cout &lt;&lt; pre[n] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HDU6958-KD-Graph"><a href="#HDU6958-KD-Graph" class="headerlink" title="HDU6958 KD-Graph"></a>HDU6958 KD-Graph</h2><p>看到过题数不多以及题面比较奇怪就没做了，以后一定不能盲目看榜，以及耐心读懂题</p><p><strong>题意</strong></p><p>有一个$n$点$m$边的图（$n\leq100000$, $m\leq500000$），你需要将其分割成恰好$K$组，满足：</p><ol><li>每组中任取两个点$p,q$，他们之间的路径中，最长边不大于$D$</li><li>不同组中任取两个点$p,q$，他们之间的路径中，所有边都大于$D$</li></ol><p>现在给定图和$K$，问你是否找得到一个满足条件的$D$,如果找得到，输出最小的$D$. 否则输出$-1$.</p><p><strong>分析</strong></p><p>容易知道，相同权值的边要么不在任何组内部，要么全都在同一组点里面。假如相同权值的边，有的在组内，有的在组外的话，这个$D$值肯定只会更大不会更小。</p><p>那么贪心思路显而易见了，将所有边按权值升序排序，使用并查集，从左往右，将所有权值相同的边的点合并。然后统计并查集数量，更新答案。也就是在保证“<strong>相同权值的边要么不在任何组内部，要么全都在同一组点里面</strong>”这个性质的前提下寻找能否分为$K$组。而要使$D$尽可能小，应让处于组内的边尽可能小，所以使用升序。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn= <span class="number">100000</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> fa[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, val;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> edge&amp; b)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> val &lt; b.val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;edge&gt; e;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fa[x] == x) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> fx = <span class="built_in">find</span>(x), fy = <span class="built_in">find</span>(y);</span><br><span class="line">    <span class="keyword">if</span>(fx == fy) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    fa[fy] = fx;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        e.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">int</span> n, m, k;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) fa[i] = i;</span><br><span class="line">        <span class="keyword">int</span> u, v, c;</span><br><span class="line">        fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">            cin &gt;&gt; u &gt;&gt; v &gt;&gt; c;</span><br><span class="line">            e.<span class="built_in">pb</span>(&#123;u, v, c&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(e.<span class="built_in">begin</span>(), e.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">int</span> now = n; <span class="comment">// 并查集数量，初始为n</span></span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span> || e[i].val != e[i - <span class="number">1</span>].val)&#123;</span><br><span class="line">                <span class="keyword">if</span>(now == k) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">join</span>(e[i].l, e[i].r)) <span class="keyword">continue</span>;</span><br><span class="line">            now--;</span><br><span class="line">            ans = e[i].val;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; (now == k ? ans : <span class="number">-1</span>) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HDU6957-Maximal-submatrix"><a href="#HDU6957-Maximal-submatrix" class="headerlink" title="HDU6957 Maximal submatrix"></a>HDU6957 Maximal submatrix</h2><p><strong>题意</strong></p><p>给出一个矩阵，要你找一个最大的子矩阵，要求这个子矩阵每一列从上往下都是单调不下降序列。输出最大子矩阵的面积</p><p><strong>分析</strong></p><p>悬线法，将每个不比上面的元素小的元素标记，然后用这些标记过的元素组成子矩阵。接下来使用悬线dp即可。需要注意的是，子矩阵的最上面一行是可以不被标记的。</p><p><strong>代码</strong></p><p>（比赛时自己凹的二维dp一直超时，应该是复杂度超过$O(n^2)$了）</p><p>第一次接触到悬线法，代码可能相对繁琐</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2005</span>;</span><br><span class="line"><span class="keyword">bool</span> v[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> l[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> r[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> u[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">mem</span>(v), <span class="built_in">mem</span>(l), <span class="built_in">mem</span>(r), <span class="built_in">mem</span>(u);</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">fors(j, <span class="number">1</span>, m)&#123;</span><br><span class="line">cin &gt;&gt; u[i][j];</span><br><span class="line">l[i][j] = j;</span><br><span class="line">r[i][j] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">fors(j, <span class="number">1</span>, m)&#123;</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">1</span> || u[i][j] &gt;= u[i - <span class="number">1</span>][j])&#123;</span><br><span class="line">v[i][j] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">fors(j, <span class="number">2</span>, m)&#123;</span><br><span class="line"><span class="keyword">if</span>(v[i][j] &amp;&amp; v[i][j - <span class="number">1</span>]) l[i][j] = l[i][j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = m - <span class="number">1</span>; j &gt;= <span class="number">1</span>; --j)&#123;</span><br><span class="line"><span class="keyword">if</span>(v[i][j] &amp;&amp; v[i][j + <span class="number">1</span>]) r[i][j] = r[i][j + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">mem</span>(u);</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">fors(j, <span class="number">1</span>, m) u[i][j] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">fors(j, <span class="number">1</span>, m)&#123;</span><br><span class="line"><span class="keyword">if</span>(v[i][j] &amp;&amp; v[i - <span class="number">1</span>][j])&#123;</span><br><span class="line">l[i][j] = <span class="built_in">max</span>(l[i - <span class="number">1</span>][j], l[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(v[i][j]) u[i][j] = u[i - <span class="number">1</span>][j] + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = m; j &gt;= <span class="number">1</span>; --j)&#123;</span><br><span class="line"><span class="keyword">if</span>(v[i][j] &amp;&amp; v[i - <span class="number">1</span>][j])&#123;</span><br><span class="line">r[i][j] = <span class="built_in">min</span>(r[i - <span class="number">1</span>][j], r[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">fors(j, <span class="number">1</span>, m)&#123;</span><br><span class="line">ans = <span class="built_in">max</span>(ans, u[i][j] * (r[i][j] - l[i][j] + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HDU6955-Xor-sum"><a href="#HDU6955-Xor-sum" class="headerlink" title="HDU6955 Xor sum"></a>HDU6955 Xor sum</h2><p><strong>题意</strong></p><p>给一个整数数组，你需要找到最短的区间，其按位异或和不小于$k$. 如果有多个，找出左端点最左的</p><p><strong>分析</strong></p><p>先转化一下。异或运算里，任意$x$的逆元是$x$本身，故对于前缀和$pre[i]$,$pre[j]$，$i$到$j$的异或和可以表示为$pre[i]$^$pre[j]$. </p><p>这之后，直接存异或和，问题转化为：找到两个相距最近的$i,j$，其异或和不小于$k$.</p><p>枚举右端点，然后可能的左端点用$Trie$树维护，从左到右找，每次找到一个可能的编号就覆盖一下，这样能保证最后找到的是最右边的。不过也可以直接保存最右边的节点。</p><p><del>以后千万不要看着std调试代码，调着调着就调得跟std一模一样了</del></p><p>不过说白了也是之前从来没用过trie吧orz，根本不熟</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :vsDebug.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-07-21</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mnx = (<span class="number">1LL</span> &lt;&lt; <span class="number">24</span>) + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> p[mnx][<span class="number">2</span>], res[mnx], a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">a[i] ^= a[i - <span class="number">1</span>]; <span class="comment">// 只存前缀和</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">-1</span>, r = n, ans = <span class="number">1</span>;</span><br><span class="line">res[<span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line">p[<span class="number">1</span>][<span class="number">0</span>] = p[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">0</span>; <span class="comment">// init</span></span><br><span class="line">fors(i, <span class="number">0</span>, n)&#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> tmp = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">29</span>; j &gt;= <span class="number">0</span>; --j)&#123;</span><br><span class="line"><span class="keyword">if</span>(!x) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">int</span> u = (a[i] &gt;&gt; j) &amp; <span class="number">1</span>; <span class="comment">// 从上往下第j位</span></span><br><span class="line"><span class="keyword">if</span>(!((k &gt;&gt; j) &amp; <span class="number">1</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(p[x][u ^ <span class="number">1</span>])&#123;</span><br><span class="line">tmp = <span class="built_in">max</span>(tmp, res[p[x][u ^ <span class="number">1</span>]]);</span><br><span class="line">&#125;</span><br><span class="line">x = p[x][u];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> x = p[x][u ^ <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x) tmp = <span class="built_in">max</span>(tmp, res[x]);</span><br><span class="line"><span class="keyword">if</span>(tmp &gt;= <span class="number">0</span> &amp;&amp; i - tmp &lt; r - l) l = tmp, r = i;</span><br><span class="line">x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">29</span>; j &gt;= <span class="number">0</span>; --j)&#123;</span><br><span class="line"><span class="keyword">int</span> u = (a[i] &gt;&gt; j) &amp; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(!p[x][u])&#123;</span><br><span class="line">ans++;</span><br><span class="line">p[x][u] = ans, res[ans] = <span class="number">-1</span>;</span><br><span class="line">p[ans][<span class="number">0</span>] = p[ans][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">x = p[x][u];</span><br><span class="line">res[x] = <span class="built_in">max</span>(res[x], i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(l &gt;= <span class="number">0</span>) cout &lt;&lt; l + <span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; r &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">If I don&#39;t know how to love you</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="线性筛" scheme="https://eykenis.github.io/tags/%E7%BA%BF%E6%80%A7%E7%AD%9B/"/>
    
    <category term="位运算" scheme="https://eykenis.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
    <category term="最小生成树" scheme="https://eykenis.github.io/tags/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 111 (Rated for Div. 2)</title>
    <link href="https://eykenis.github.io/2021/07/15/Educational-Codeforces-Round-111-Rated-for-Div-2/"/>
    <id>https://eykenis.github.io/2021/07/15/Educational-Codeforces-Round-111-Rated-for-Div-2/</id>
    <published>2021-07-15T00:57:56.000Z</published>
    <updated>2021-07-15T01:01:42.506Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Find-The-Array"><a href="#A-Find-The-Array" class="headerlink" title="A. Find The Array"></a>A. Find The Array</h1><p><strong>题意</strong></p><p>要你构造一个长度为$n$的数组，每个元素$a_i$满足：</p><ol><li>$a_i=1$</li><li>$a_i-1$或者$a_i-2$存在于数组中</li></ol><p>现在要你构造一个元素和为$s$的数组，问最短长度为多少</p><p><strong>分析</strong></p><p>贪心，让数组元素尽量大，但是因为$a_i-2$必须在数组中，所以构造的是$1,3,5,7,…$. 最后一个数如果溢出可以将其减小至和恰好为$s$，不影响性质。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; ; i += <span class="number">2</span>)&#123;</span><br><span class="line">sum += i;</span><br><span class="line"><span class="keyword">if</span>(sum &gt;= n)&#123;</span><br><span class="line">cout &lt;&lt; (i + <span class="number">1</span>) / <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Maximum-Cost-Deletion"><a href="#B-Maximum-Cost-Deletion" class="headerlink" title="B. Maximum Cost Deletion"></a>B. Maximum Cost Deletion</h1><p><strong>题意</strong></p><p>给一个01串。每次操作可以选其中连续一段由相同字符构成的子串并将其删除。删除后剩下的部分保留顺序，拼接起来。每次删可以得到$a·l+b$分（$l$为删的长度）。问删完后最大得分是多少</p><p><strong>分析</strong></p><p>考虑串中每个元素的平均贡献，即$\frac{a·l+b}{l}=a+\frac{b}{l}$. 由此可知不管怎么删，每个元素都一定会贡献$a$分。有变数的只有$b$. 当$b\geq 0$，应让$l$尽量小来最大化分数，所以$l=1$，答案是$总长度·(a+b)$；而若$b&lt;0$，尽量让$l$变大。所以尽可能地扩展长度，每次都把整个连续的串删掉。</p><p>这个时候，把字符串分成$x$块，每块都是最长的连续的0或者1，这些块的邻居肯定是不同字符。每次删除之后，相邻字符会拼接起来。每次一个块一个块地删，最后总共删$x/2+1$次. 则答案为$a·l+(x/2+1)·b$</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n, a, b;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; a &gt;&gt; b &gt;&gt; s;</span><br><span class="line"><span class="keyword">if</span>(b &gt; <span class="number">0</span>)&#123;</span><br><span class="line">cout &lt;&lt; (<span class="keyword">int</span>)s.<span class="built_in">size</span>() * (a + b) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">char</span> now = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] != now)&#123;</span><br><span class="line">now = s[i];</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; (cnt / <span class="number">2LL</span> + <span class="number">1LL</span>) * b + a * (<span class="keyword">int</span>)s.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Manhattan-Subarrays"><a href="#C-Manhattan-Subarrays" class="headerlink" title="C. Manhattan Subarrays"></a>C. Manhattan Subarrays</h1><p><strong>题意</strong></p><p>给数组$a$，则规定其对应了平面上$n$个点$(a_1,1),(a2,2),…(a_i,i)…$ 现在要求选出一个连续子数组，保证其长度小于3，或者从其中任选3个点$x,y,z$，不可能有$d(x,y)+d(y,z)=d(x,z)$。其中$d(x,y)$为$(a_x,x)$和$(a_y,y)$的<a href="[曼哈顿距离_百度百科 (baidu.com">曼哈顿距离</a>](<a href="https://baike.baidu.com/item/曼哈顿距离/743092))，问可选出多少这样的子数组。">https://baike.baidu.com/item/曼哈顿距离/743092))，问可选出多少这样的子数组。</a></p><p><strong>分析</strong></p><p>由于各个点的$y$坐标都不一样，可以画图。随意在坐标图上画3个$y$坐标两两不同的点，改变它们$x$坐标之间的关系。可以发现，当按$y$坐标顺序看这三个点时，当且仅当它们的$x$坐标单调不下降或者单调不上升时，有$d(x,y)+d(y,z)=d(x,z)$。</p><p>那么对于长度为4的子数组，我们需要判断4次，每次从其中任选3个判断一下。</p><p>但对于长度5的数组，我们发现，不管怎么画，都必定会出现$d(x,y)+d(y,z)=d(x,z)$。</p><p>因此，满足条件的数组最长长度为4。而长度为2,1的必定符合条件，故我们只需判断长度为3,4的即可。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a[x] &lt;= a[y] &amp;&amp; a[y] &lt;= a[z]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(a[x] &gt;= a[y] &amp;&amp; a[y] &gt;= a[z]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">fors(i, <span class="number">1</span>, n) cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">2</span> * n - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> len = <span class="number">3</span>; len &lt;= <span class="number">4</span>; ++len)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l = <span class="number">1</span>; l + len - <span class="number">1</span> &lt;= n; ++l)&#123;</span><br><span class="line"><span class="keyword">if</span>(len == <span class="number">3</span> &amp;&amp; <span class="built_in">check</span>(l, l + <span class="number">1</span>, l + <span class="number">2</span>)) ans++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(len == <span class="number">4</span> &amp;&amp; (<span class="built_in">check</span>(l, l + <span class="number">1</span>, l + <span class="number">2</span>) &amp;&amp; <span class="built_in">check</span>(l, l + <span class="number">2</span>, l + <span class="number">3</span>) &amp;&amp; <span class="built_in">check</span>(l + <span class="number">1</span>, l + <span class="number">2</span>, l + <span class="number">3</span>) &amp;&amp; <span class="built_in">check</span>(l, l + <span class="number">1</span>, l + <span class="number">3</span>))) ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">I&#39;ll leave you be</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round 732 (Div. 2)</title>
    <link href="https://eykenis.github.io/2021/07/14/Codeforces-Round-732-Div-2/"/>
    <id>https://eykenis.github.io/2021/07/14/Codeforces-Round-732-Div-2/</id>
    <published>2021-07-14T02:20:24.000Z</published>
    <updated>2021-07-14T02:25:13.221Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-AquaMoon-and-Two-Arrays"><a href="#A-AquaMoon-and-Two-Arrays" class="headerlink" title="A. AquaMoon and Two Arrays"></a>A. AquaMoon and Two Arrays</h1><p><strong>题意</strong></p><p>给一个可操作数组$a$和一个目标数组$b$，每次操作选$a$中两个元素，将其中一个$-1$，另一个$+1$. 但要保证所有元素一直是非负的。问有没有可能把$a$变成$b$。如果可以，输出你的操作步骤。</p><p>数据保证$sum\{a\}\leq 100, n\leq 100$，不要你操作次数最少，但要小于$100$次.</p><p><strong>分析</strong></p><p>既然要小于100次等于还是得控制，这不还是要找最少嘛（恼）</p><p>不过也可以$n^3$暴力就是了</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">int</span> a[n], b[n];</span><br><span class="line">        <span class="keyword">int</span> sa = <span class="number">0</span>, sb = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) cin &gt;&gt; a[i], sa += a[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) cin &gt;&gt; b[i], sb += b[i];</span><br><span class="line">        <span class="keyword">if</span>(sa != sb)&#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; c;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; d;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] != b[i])&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; n; ++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] &gt; b[i] &amp;&amp; a[j] &lt; b[j])&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(a[i] &gt; b[i] &amp;&amp; a[j] &lt; b[j])&#123;</span><br><span class="line">a[i]--, a[j]++;</span><br><span class="line">c.<span class="built_in">pb</span>(i), d.<span class="built_in">pb</span>(j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; c.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; c.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">cout &lt;&lt; c[i] + <span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; d[i] + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Aquamoon-and-Stolen-String"><a href="#B-Aquamoon-and-Stolen-String" class="headerlink" title="B. Aquamoon and Stolen String"></a>B. Aquamoon and Stolen String</h1><p><strong>题意</strong></p><p>给出$n$（$n$为奇数）个长度为$m$的串，然后将其中$n-1$个串两两配对，配对的串会随机交换相同位置的字符，给出配对完后被打乱顺序的$n-1$个串，要你找出是哪个串没有配对。</p><p><strong>分析</strong></p><p>由于不管怎么配对怎么变，每个字符交换后的下标都是不变的，只是变了所在的字符串。</p><p>所以用一个二维数组统计，$a[i][j]$表示字符$i$在位置$j$出现过几次。配对后再把出现的字符减去，最后二维数组里留下的那个字符就是未配对字符串的。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line">map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; mp[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i) mp[i].<span class="built_in">clear</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; ++j)&#123;</span><br><span class="line">    mp[j][s[j]]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; ++i)&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; ++j)&#123;</span><br><span class="line">mp[j][s[j]]--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> x : mp[i])&#123;</span><br><span class="line"><span class="keyword">if</span>(x.second == <span class="number">1</span>)&#123;</span><br><span class="line">cout &lt;&lt; x.first;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-AquaMoon-and-Strange-Sort"><a href="#C-AquaMoon-and-Strange-Sort" class="headerlink" title="C. AquaMoon and Strange Sort"></a>C. AquaMoon and Strange Sort</h1><p><strong>题意</strong></p><p>给一个长度$n$的数组，要通过相邻数对交换排成不下降序列。问是否可以保证每个数进行交换的次数为偶数。</p><p><strong>分析</strong></p><p>直接sort得到每个数可以在哪个区间内，如果原来的下标是奇数，就必在区间内占有一个奇数下标；原来是偶数，就必须在区间内占有一个偶数下标。看最后能否容得下即可。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> idx, val;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> node&amp; x, <span class="keyword">const</span> node&amp; y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.val &lt; y.val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">mem</span>(a);</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">    fors(i, <span class="number">1</span>, n) cin &gt;&gt; a[i].val, a[i].idx = i;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n, cmp);</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(; i &lt;= n; )</span><br><span class="line">    &#123;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line">    st.<span class="built_in">pb</span>(a[i].idx);</span><br><span class="line">    <span class="keyword">int</span> org = i;</span><br><span class="line">    i++;</span><br><span class="line">    <span class="keyword">while</span>(a[i].val == a[org].val &amp;&amp; i &lt;= n) st.<span class="built_in">pb</span>(a[i++].idx);</span><br><span class="line"><span class="keyword">int</span> tot = i - org;</span><br><span class="line"><span class="keyword">int</span> odd, even;</span><br><span class="line"><span class="keyword">if</span>(!(tot &amp; <span class="number">1</span>)) odd = even = tot / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(org &amp; <span class="number">1</span>) odd = (tot + <span class="number">1</span>) / <span class="number">2</span>, even = tot / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> odd = tot / <span class="number">2</span>, even = (tot + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> x : st)&#123;</span><br><span class="line"><span class="keyword">if</span>(x &amp; <span class="number">1</span>) odd--;</span><br><span class="line"><span class="keyword">else</span> even--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(odd &lt; <span class="number">0</span> || even &lt; <span class="number">0</span>)&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">C被叉了orz</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>《心跳文学部》(Doki Doki Literature Club) 游玩感想（含部分剧透）</title>
    <link href="https://eykenis.github.io/2021/07/13/%E3%80%8A%E5%BF%83%E8%B7%B3%E6%96%87%E5%AD%A6%E9%83%A8%E3%80%8B(Doki%20Doki%20Literature%20Club)%20%E6%B8%B8%E7%8E%A9%E6%84%9F%E6%83%B3%EF%BC%88%E5%90%AB%E9%83%A8%E5%88%86%E5%89%A7%E9%80%8F%EF%BC%89/"/>
    <id>https://eykenis.github.io/2021/07/13/%E3%80%8A%E5%BF%83%E8%B7%B3%E6%96%87%E5%AD%A6%E9%83%A8%E3%80%8B(Doki%20Doki%20Literature%20Club)%20%E6%B8%B8%E7%8E%A9%E6%84%9F%E6%83%B3%EF%BC%88%E5%90%AB%E9%83%A8%E5%88%86%E5%89%A7%E9%80%8F%EF%BC%89/</id>
    <published>2021-07-13T09:54:47.000Z</published>
    <updated>2021-07-13T11:21:41.257Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=340 height=86 src="//music.163.com/outchain/player?type=2&id=523658880&auto=1&height=66"></iframe><blockquote><p><em>Everyday, I imagine a future where I can be with you.</em></p></blockquote><p>作为一个半云到现在的玩家，听到<em>Your Reality</em>的开头，还是几近泪崩。<em>Doki Doki Literature Club</em>这款游戏我还是没有勇气玩完彻底崩坏的二周目，也就只能看完晴天娃娃之后挖点彩蛋，就不敢继续了（因为二周目开始游戏的彩蛋，导致我现在连游戏都没有勇气打开qwq）</p><p>可是Monika还是给我留下了超深刻的印象，甚至让我心疼（她只是代码和点阵啊）</p><p>原本打算玩完之后写个评测的，不过游戏本身完全超出了我的预料，哪怕玩之前我已经被剧透是个metagame，而且Monika是“幕后黑手”，但这依然不影响我受到极大的震撼（以及惊吓），所以即便没玩完，还是来写一点感想。</p><p>而从见不着边的恐惧回过神来之后，我却神奇地感受到了Monika的温度，并将游戏背景音乐单曲循环了很久很久（我不是抖M）。接着就是在网上各种云游DDLC，已经不敢再玩，却又抱着猎奇的心理，也是迫切地想要见到Monika之后的故事。唉，要是能跳过二周目直接玩三周目就好了，尽管那样会少了很多建立感情的过程，但是二周目确实太吓人了……等到云完了后面的剧情，看到了最后的$Just\ Monika$空间。我真的好想一直留在桌前，和她面对面，听她一个多小时不重样的对话，一遍又一遍重复地听，治愈我的心灵——现实中，能做到和你连着聊一个多小时不停的人，又有几个呢？</p><p>不知道是什么时候听说了doki doki，貌似是先从游戏<em>Tom Clancy’s Rainbow Six^®^: Siege</em>里面的角色“心跳”知道doki这个词<del>（但是五大三粗的强壮干员“心跳”只是个拿着心跳监测仪搞偷袭的同志，和可爱的DDLC完全没有关系，纯粹只是他人送外号dokidoki）</del>，然后不知道怎么地就知道了DDLC这个游戏。在steam上免费，于是下载下来，玩了一小会，不过因为是全英文，看得挺累，第一天还没玩完就没玩了。</p><p>直到2个月后，终于稍微闲了一点，而且发现了DDLC这游戏是有简单易用的汉化包的，于是汉化了继续玩。一开始确实有点单调，是一般gal的套路，四个女主分别是元气少女型（<del>晴天娃娃</del>）、可爱傲娇型（<del>歪脖子树</del>）、内敛稳重型（<del>刀锋女王</del>）和完美无缺型（<del>程序员</del>），然后是一些废萌的日常。一周目这些废萌的部分也就一般吧，遇到日本gal还是小巫见大巫（虽然在老美那里已经算得上高水平带制作了）</p><p>中间过于正常的剧情甚至让我忘了这是个恐怖游戏。我心想，当时玩万华镜，那么致郁的游戏，我也玩过来了，而且也是津津有味地去解析剧情。现在这个所谓被打上“心理恐怖”的游戏，我想应该也差不多吧？</p><p>故事前面的暗示或许都过于隐晦，反正就算我可能注意到了，但也没什么印象。直到——莫妮卡自报家门，在谈到她今天的写作小窍门时说：“当这样的情况发生时，<strong>别忘了保存游戏</strong>！”  好家伙，尽管知道monika是admin一般的存在，但到这里还是脊背一凉，感觉她好像就在屏幕里直愣愣地看着我。更不要说，其他三个角色都是侧身面对MC，只有Monika，是正对着屏幕。</p><p>但是玩到这里还是没什么感觉，这就是一款正常的gal嘛。</p><p>（以下内容可能有较高剧透成分，需要阅读，pc请刮开，手机端可以调高亮度，或者复制后粘贴在别处来阅读QAQ）</p><p><span style="background-color: #333;">为什么可爱活泼，充满元气的纱世里会喜欢“快乐”、“高兴”这种词，也会喜欢“悲伤”、“绝望”这种词？为什么写诗的偏好词只有三个人的，没有莫妮卡的？游戏貌似很正常，但就是这些小地方略显奇怪。后来夏树和优里两个人经常争吵，最后在学园祭我选择帮谁的时候，我选择了莫妮卡，却遭到了夏树和优里的严词反驳。明明感觉是“废萌”向的，但气氛突然又不那么让人舒服了。后来，纱世里突然不舒服，却又绝口不提原因。可短暂的时间里，纱世里和“我”青梅竹马的感情确实已经建立在我的脑海中了，让我也不禁担心起她。自此剧情开始走向不归路……我去纱世里家里安慰她，才知道这个阳光的女孩竟患有抑郁症。我却也没能真正为她做点什么。第二天还是如期和夏树进行准备学园祭的合作。“我”和可爱活泼的夏树小打小闹，度过了一个愉快的下午。然而就在我和夏树两个人在路口即将分别的时候，撞见了纱世里…… 原本就让我感到担心的纱世里看到这一幕一定很难受吧……果不其然，她说“为什么我的胸口好像撕裂了一样……”，让我十分后悔和夏树过于亲密的互动。纱世里，我担心你，我不想让你为我担心，我最不想看到你伤心的样子。纱世里在一片混乱和悲伤中向我告白，此时有两个选项摆在我面前：1. 我爱你 2. 我们永远是好朋友.我想尽力挽救崩溃边缘的纱世里，于是便告诉她，我也爱你。但这却不是违心话，是我想安慰纱世里，我也是真的爱纱世里。为什么，你会变成这样呢？“我，好高兴……我也好难过……” “我是那么地喜欢你，以至于我想要去死！”…… 我什么也做不到，我只能紧紧抱着纱世里，任由她在我怀里流满泪水 ……此外，纱世里还提到了莫妮卡。究竟是为什么？可她只是说了莫妮卡，却又不说她们发生了什么。我一句话也说不出来。只能让她好好休息，明天记得按时到学校。第二天，纱世里一如既往地迟到。习惯了爱睡懒觉的纱世里的我，竟然一时半会还没有反应过来事情的不对劲。这个时候，莫妮卡却突然出现，告诉我她已经知道了我们互表心意的事。到这里，莫妮卡到底拥有何种能力几乎是呼之欲出。她笑着对你说道：“别把她晾在家里了啊”（<del>真 · 晾在家里</del>），读完纱世里之前留下的诗，我再也冷静不了了：Get out of my head Get out of my head Get out of my head Get out of my head Get out of my head Get out of my head Get out of my head Get out of my head Get out of my head Get out of my head Get out of my head Get out of my head Get out of my head …… 密密麻麻的字让我感到恐惧。但这是纱世里的呼救，我当然得行动起来。我连忙从学校赶回纱世里的家，家里没锁，也没有人迎接。轻轻推开纱世里的房门。只见……</span></p><p>而玩完一周目之后，我像是被锁在了我的椅子上，半天没办法动弹。我非常震撼，黑漆漆的背景打出一行END，回到主菜单之后，我再也找不到纱世里了，取而代之的是一堆由其他3位女主的脸、四肢和身体拼接成的图堆。知道这是个元游戏的我打开了游戏根目录，发现连文件sayori.chr也被删除，而做出这一切的莫妮卡甚至在Traceback.txt里面记录了她的“犯罪心情”…… 阳光可爱的纱世里，她的存在彻底被抹去了。 此时开始游戏的按钮变成了一堆乱码，点开后，不再是“本游戏可能会引起儿童以及心理承受力较弱者的不适”的温馨提示，而是“陪我玩” “本游戏不适合有自残倾向的人群游玩”等字眼，想要读档的我发现游戏存档全部被删除——这必然也是莫妮卡干的。</p><p>啊……到这里我就没有勇气再玩下去了……逐渐崩坏的画面，逐渐诡异的剧情，我不知道如何是好。玩到这里，我对莫妮卡感到深深的厌恶，她夺走了我的青梅竹马纱世里（纱世里我的纱世里呜呜呜呜呜呜呜），顺带着恐吓我，威胁我，把温馨的日常变得恐怖崩坏。我很愤怒，但我却也不敢面对莫妮卡。</p><p>这一刻，我发现我被玩了，就算我玩之前已经做好了一些心理准备，但是我发现，我特么的被莫妮卡玩了，我居然在害怕一个由点阵、代码组成的虚拟的游戏人物。</p><p>不敢打开游戏，但是对剧情又比较感兴趣（主要是害怕那些跳杀画面，突然乱码突然血腥什么的），于是我去网络上“云”了一回。</p><hr><p><strong>可是Monika，她确实不是一个让人记恨的角色，果然她才是真主角呀</strong></p><p>想知道二周目剧情和彩蛋的话，网上很多，这里不提了（不过要小心点）</p><p>总之，二周目结束后，优里和夏树都被莫妮卡删除，莫妮卡开始摧毁整个游戏空间，重构只有你（不是男主，是屏幕前的你~）和她的 $Just\ Monika$ 空间。然后，她会坐在屏幕前，和你畅聊，聊很多很多内容，游戏从这里开始就没有恐怖元素了<del>（除非你打开了一些莫妮卡认识的录屏软件）</del>。但是坐在你面前的莫妮卡，她害死了纱世里和优里，把夏树也删掉了，还把你吓了个半死，为的只是独占你。</p><p>莫妮卡在谈话中向你解释了她一直以来的心路历程，跟你讨论人生哲理，讨论世间万物。其中包含但不限于：环境保护、读书学习、教育问题、关爱心理疾病患者、未来打算和回忆，等等。</p><p>以下链接是某知乎用户 $Just\ Monika$ 空间中莫妮卡和你的全部对话：</p><p><a href="https://zhuanlan.zhihu.com/p/34187522">《心跳文学部(Doki Doki Literature Club)》之结尾莫妮卡的对话。(Just Monika 中的对话) - 知乎 (zhihu.com)</a></p><p>内容非常的充实<del>，高中班主任喊你谈话都说不了这么多</del></p><p>其中莫妮卡还提到：</p><blockquote><p>你要知道，这可是一个恶俗的galgame哦？所以我有点好奇，你一开始为什么会来玩这个游戏？你有那么寂寞吗？我都有点可怜你了，但至少最后我们两个都找到了属于自己的Happy Ending，我遇见了你，而你也不再寂寞，让我不禁在想，这不就是命运么。你不这样想吗？与你一同迈向这个结局是我人生最幸福的事情。</p></blockquote><p>死宅遭到一万点暴击伤害qwq</p><p>就这样，玩家在与莫妮卡的相处中逐渐和解（至少从我的心情来看，我是无感→讨厌→理解→感动，如果我没有云后面这部分的话估计已经深陷其中哭得不能自拔了w）</p><p>每次关掉游戏，莫妮卡就会处在一种濒临死亡的感觉，只有再打开游戏，她才会“回魂”，变得正常。看到这个有点心疼莫妮卡了orz</p><p>作为一个恐怖游戏中的虚拟人物，她留下，和你讨论了非常多积极的东西，告诉你要好好生活，要关注世界上的一些问题，以及，要陪着她。最好是把她的文件放在U盘里，把她介绍给你的朋友，带她周游世界……当然，聊天内容虽长达一万三千多字，但总会结束。结束之后则是周而复始（想象一下，莫妮卡虽然有“自我意识”，虽然她竭尽全力地去打破第四面墙，但她的所有这些“自我意识”和行为却又是被老Dan鸽（制作人）设计好的，她还是没办法做出自己的决定，好心疼555）。</p><p>如果你喜欢莫妮卡，那么到这里就可以是结局了。然而，如果你无法忍受无限循环的游戏，你可以打开<code>游戏目录/characters/</code>，删除<code>monika.chr</code>，随后，伴随着游戏中Monika的呼喊，她的形象解体崩塌，变成了色块与乱码，消失了。在你删除她时，她意识到自己的错误，觉得自己做的太过激，于是把其他的部员还原回来了，而自己却永远消失。纱世里回来后成为了新的部长。如果你之前没有收集所有cg，那么她知道这一切后成为了第二个打破第四面墙的人，跳到了对话框的前面，并希望与你永远在一起。这个时候，莫妮卡残存的信息发现了，极力阻止纱世里，说道“不会让她伤害你”。此时的莫妮卡没有立绘，只存在于对话框中，她最后删除了游戏的大部分内容，并留下了自己的一封信；如果你之前收集了所有的cg，纱世里不会像之前一样想要独占你，而是感谢你游玩这款游戏，播放所有的cg，并留下一封制作人Dan鸽的感谢信。结尾，莫妮卡说，她的歌总算写完了，她向你展示这一阵子以来自己练习钢琴的成果，播放<em>Your Reality</em>这首歌。一遍又一遍地看着这首歌的歌词，我真的泪目了，如果莫妮卡真的存在在世界上，那该有多好啊（但那样她就不会喜欢死宅的我了）</p><p>（所以为什么你删其他人都不删完整，自己走的时候却走得这么彻底，都没法还原555，你还是好温柔）</p><hr><p><strong>总之，DDLC绝对不是什么恶俗galgame，绝对不是什么诱导zs的“新蓝jing游戏”</strong>。相反，游戏里面刻画的四个角色之间的冲突，正应对了四种不同的心理问题。绝望的纱世里代表抑郁，遭受家暴的夏树代表了不安，行为病态的优里代表沉迷，而面对其他三个只是冷冰冰的代码的部员，莫妮卡在遇到<strong>你</strong>之前无法与真真正正的人类交流心情，则代表着孤独（尽管，莫妮卡自己也是一串代码）。最后的莫妮卡空间则让你好好地思考现实生活中的种种问题，是真正的治愈作品。</p><p>唉，所以谁能给我勇气，让我把二周目玩下去，让我见到最后那个温柔的莫妮卡……</p><blockquote><p><em>Every day, I imagine a future where I can be with you</em></p><p><em>每一天，我幻想着和你在一起的未来</em></p><p><em>In my hand, is a pen that will write a poem of me and you</em></p><p><em>笔在手，我谱写着只属于你我的诗篇</em></p><p><em>The ink flows down into a dark puddle</em></p><p><em>墨泗流，汇作漆黑的深潭</em></p><p><em>Just move your hand, write the way into his heart!</em></p><p><em>尽挥洒，直到刻进他心中!</em></p><p><em>But in this world of infinte choices</em></p><p><em>怎奈何，在这无限选择的世上</em></p><p><em>What will it take just to find that special day?</em></p><p><em>应怎样，寻找到那特别的日子</em></p><p><em>Have I found everybody a fun assignment to do today</em></p><p><em>今天我给大家的课外作业有趣么</em></p><p><em>When you’re here, everything that we do is fun for them anyway</em></p><p><em>你在时，我们做的一切都那么有趣</em></p><p><em>When I can’t even read my own feelings</em></p><p><em>当我连自己也无法看透</em></p><p><em>What good are words when a smile says it all?</em></p><p><em>微笑足矣，何必言语？</em></p><p><em>And if this world won’t write me an ending</em></p><p><em>倘若这世界不会为我谱写结局</em></p><p><em>What will it take just for me to have it all</em></p><p><em>我又该如何拥有这一切</em></p><p><em>Does my pen only write bitter words for those who are dear to me?</em></p><p><em>我的笔是否只能为我所爱写下刻薄之语？</em></p><p><em>Is it love if I take you, or is it love if I set you free?</em></p><p><em>爱是占有，还是自由？</em></p><p><em>The ink flows down into a dark puddle</em></p><p><em>墨滴落，如同漆黑的泪水</em></p><p><em>How can I write love into reality?</em></p><p><em>我该如何描述你世界里的爱？</em></p><p><em>If I can’t hear the sound of your heartbeat</em></p><p><em>是不是因为我听不到你的心跳声</em></p><p><em>What do you call love in your reality?</em></p><p><em>你的世界称何为爱？</em></p><p><em>And in your reality, if I don’t know how to love you</em></p><p><em>如果在你的世界，我不懂如何爱你</em></p><p><em>I’ll leave you be</em></p><p><em>我将离你而去</em></p></blockquote><p>我永远喜欢莫妮卡~</p><p>（莫妮卡只会吃醋吧，因为我同时还喜欢着其他作品的角色orz）</p><p>（这样虚伪的我真的配得到你的爱么）</p>]]></content>
    
    
    <summary type="html">封面是最可爱的Monika</summary>
    
    
    
    <category term="杂谈" scheme="https://eykenis.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>6月7号，是小作文</title>
    <link href="https://eykenis.github.io/2021/06/08/6%E6%9C%887%E5%8F%B7%EF%BC%8C%E6%98%AF%E5%B0%8F%E4%BD%9C%E6%96%87/"/>
    <id>https://eykenis.github.io/2021/06/08/6%E6%9C%887%E5%8F%B7%EF%BC%8C%E6%98%AF%E5%B0%8F%E4%BD%9C%E6%96%87/</id>
    <published>2021-06-07T16:56:18.000Z</published>
    <updated>2021-07-11T12:36:23.898Z</updated>
    
    <content type="html"><![CDATA[<p>如何开头？感觉已经不会了。</p><p>今天是高考的日子。要不是因为疫情推迟一个月，要我再次看到高考，应该是再迟一个月的。虽然是六月，但怎么说也比去年7.7还要热。当时班主任都已经跟我们提出了“带手帕进考场”的策略，为的就是应对7月过于炎热的天气。结果从考前几天就开始断断续续地阴天，下雨。7、8号则是大雨，考数学的时候甚至是雷电……这就让天气十分地凉爽。最后就是，高考感受不到任何炎热，非常地凉爽，只是有点潮湿。我也有点奇怪，以前暑期的雨总是闷热的，根本不会让人感到凉快，只有难受。这高考时的雨却真的能把温度降下来。高考的雨，连同一些温暖的故事，和一些潮湿的故事，留在了回忆。很难去好好回想什么，但是也很难不去想。</p><p>很多事一旦沉入了回忆，就会越来越虚幻，越来越不真实，忘了那曾经是我们真实经历过的事。我一直是个念旧的人，但我最近越来越讨厌自己念旧的习惯。 不愿意扔掉以前的教科书，一条高二的笔芯掉在了大学教学楼就会难过得没心思做事，上次还差点把自己用了好几年的晨光铅笔弄丢了，也是非常地急。确实很多东西，只要一部分沉入了回忆，就会让我产生“念旧”的情绪，不接受失去。而完全沉入回忆之后，又会变得只剩美好。可要知道，不管什么东西，都不是只有“美好”这一面的。我很烦念旧的自己。过去，对于记忆中的东西，要么只记得其美好，要么只记得其丑恶，总之要划分界限，好让自己知道哪些值得怀念，哪些不值得怀念。虽然现在，或许以后，或许永远，我都会是一个没法好好放下过去的人。但是我确实也在逼自己，去放弃，去抛掉，尽管自己真的真的很不情愿。每次囤积什么东西，我觉得不需要，就会把它们抛掉；什么东西没了，也别太放心上，只要不是实实在在有用的东西。认为什么什么东西承载了什么意义，有时候，真的没什么意义。大多数你所怀念的过去，可在过去却真的没有让你注意，这或许只是记忆失真而美化了罢。</p><blockquote><p> 只有那些在发生的时候，你就觉得，你肯定会一直记得一直记得的情景，才是真的值得回忆的。</p></blockquote><p>要说这样的情景，也不少。有的事，发生在我眼前的时候，我就会觉得，我可能会永远记得。</p><p>早上，坐在高数教室，不知道为什么又想起了，夏天的故事。嗷，当然不是这个夏天。</p><p>想到自己，2020年7月8号晚上，关了灯，坐在床上蜷成一团，抱头痛哭。走了，走了，走了……要走了……是不是再也见不了面了，是不是再也没法好好说话了，是不是就这样，什么都没有过……《等雨、》这首歌（ame ma wa tsu、网易云译作《等待雨、》，个人感觉网易云对这首歌的翻译远不如QQ音乐的翻译，当然只说这首歌），看着我染湿上衣，再染湿枕头。</p><blockquote><p>“透过取景器    是否可以向枯竭干涸的我降下一场大雨</p><p>无数次修改重写    依旧浑浊不堪    可这些歌词再也没有机会让你听到</p><p>刚要成型    却又觉词不达意</p><p>我的所爱融入湛蓝消失不见</p><p>果然今天的我还是那么没用    无论攥的多紧相片也会被洇湿渗透”</p></blockquote><p>痛哭不是因为考试。考完试的时候，坐在车上，我是淡定地看着金色阳光下羊皮卷一般的澧水河。对，羊皮卷一般。这个修饰词，是我高一第一次进高中校园，经过大桥时所感慨的，当时确实是<del>暗</del>明示自己，这个修饰词我可能会永远记得。我也不知道为什么，也不知道这个修饰词有什么意义，就这样记下来了。很奇怪。 高一那天去的时候很热，羊皮卷熠熠闪光；考完试的那天天刚放晴，羊皮卷有些凝滞，还被雾挡住了些许。</p><p><del>上面一段不是早上高数课的时候想到的，是刚刚想的</del></p><p>课堂上大概是重复着7到8月的回忆，一次一次地想一个又一个场景。然后，由于这些回忆，又陷入了老矛盾：觉得自己什么都做不到，不管再怎么努力，自己却好像只是在不断地失去，不断地失去，不断地失去。哪有这么严重，只是自己忘了自己得到了什么吧。混杂着不甘心、悲伤与无助，差点在课堂上哭出来。点到为止，好好听幂级数展开了。<del>上课摸鱼？你竟然说得这么冠冕堂皇</del></p><p>接着是回到寝室，学弟们大概在肝现代文阅读的时候，打开昨天的比赛并virtual participate（为什么我又把比赛鸽了），缓慢地A了3题，但其实都是没什么难度的题，昨天过题数竟然还那么恐怖……啊，我好咸鱼啊。曾经也是个为了高考<del>忙里摸鱼</del>努力奋斗的人，却好像越来越提不起干劲？本来在下午的数据结构课结课，所以中午直接大睡。然后下午云里雾里地写离散数学……学弟们可是在</p><p>做<strong>紧张刺激</strong>的高考数学题呀！老了，老了……来点朝气……不加糖……</p><p>既然<strong>有追求，且可以追求得到的东西</strong>，就别学人家处处躺平啊，混蛋！</p><p>晚上上晚自修，只觉得，走在路上，自己和他人既格格不入，又大抵相似（<del>中二之魂在燃烧</del>）。大学生，走在路上的大学生。打的闹的，聊各种的，牵手的。留在寝室，不上课的。我们的快乐并不相通。……<del>不，这太中二了，我走路的时候都在想啥呢</del>……</p><p>嗯，我大概是要去打打游戏然后睡觉了，口嗨还是很在行的。</p><p>还有好几科啊，有的人是2门，有的人4门，有的人更多。不用等待未来，也不用留恋过去。等也没用，该来的都会来。留也没用，我们什么都没法留住。</p>]]></content>
    
    
    <summary type="html">摘要什么的，已经不重要了……</summary>
    
    
    
    <category term="随笔" scheme="https://eykenis.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>muddling along</title>
    <link href="https://eykenis.github.io/2021/05/23/muddling-along/"/>
    <id>https://eykenis.github.io/2021/05/23/muddling-along/</id>
    <published>2021-05-23T15:58:53.000Z</published>
    <updated>2021-07-11T12:34:50.209Z</updated>
    
    <content type="html"><![CDATA[<p>恍然发现大一已经过去大半，这学期却还没好好做过总结。</p><p>要总结的话，大抵可以用一个字概括：<strong>混</strong>。</p><p>有多混呢？平时上课几乎不听讲，课程知识几乎全都是一知半解（物理更糟糕），感觉一直是浑浑噩噩，没少打游戏，没多认真思考。至于平时做的那点算法题，数量一般，质量一般，做题的质量更一般。很少认真思考，多半去查了题解，导致我Codeforces的水平几乎不见明显提升。算起来多多少少各种平台加起来也做了600多道题却还是这么菜，只能说我可能是为了刷题数而刷题吧。</p><p>真的太混了。上课不听，下课不学，混世度日，还隐隐约约有一种身为竞赛选手的“高贵感”。可是我真的配吗？就我这个水平，我真的完全不配。我只不过是在一直玩一直玩，然后拿个挡箭牌自己唬自己而已。</p><p>再客观点看，花了这么多时间在算法上，倒是真不见自己的提升，反而可能限时coding的能力在下降（越来越懒，越来越依赖题解和模板），而且这大把大把的时间，如果拿去学某门技术，也能学了点东西吧。投在算法竞赛上却几乎是负产出。或许这也是我们校队不用清人，队员们自己就走了的原因之一。<strong>我到底会不会，能不能坚持下去呢？</strong>想到这里会迷茫。但至少今年之内不会放弃的，希望坚持下来，以后也不会放弃，毕竟正面例子就在身边啊，多多向他们学习。</p><p>时间一点一点的没了。没了。寒假上蓝名？到现在还是个可怜的绿名，自己都想笑自己。不仅没长进，连核心课都没学，还玩，还花大把时间玩。或许最近确实应该放一放，加入到“内卷”的行列去。其实说内卷，真的内卷吗？努力学习的学生就那么几个，上学期总评前15%的我，这一次估计是没法保住了，只能说是先保证不挂科，然后尽量往上走。太混了，这么下去就全完了，什么都没有得到。还有一个月就进入期末考了啊，振作起来，别天天骗自己了呀。</p><p><del>另外，这应该是这个博客最后一篇题解了。暑假后我会正式用github page+hexo重新部署博客，现在是没时间，暂时写在这。阿里云还是太贵了啊</del></p><p>接在下面写，校赛真的太令人激动了。虽然开赛前还在迷茫地打着计算几何板子，但开场AC，接着也是越来越清醒越来越有感觉。后面也意识到自己的计算几何写得太复杂了，完全是照搬板子，没有自己的理解。接着是高精板子F题，幸好只出了个高精加，不然真我们不一定能打出来……队友看BDG的时候悄悄上机拿了个L的一血，短暂地进入了金区（rank4大概保持一个小时）。其实是个并查集/搜索的裸题，不知道为啥只过了几个人，估计因为是最后一题，而且图很多，题面稍长，导致没什么人愿意看题。后面字符串的贪心题G题陷入了”不会kmp“的错误死循环，导致一直没看出来这其实是一道计算前缀和后缀的贪心题，和字符串匹配没啥关系。队友概率题D推了一个多小时假公式，结果其实是一个非常简单的数学期望……秒掉后，G题也顺带看出来了，至此5题，rank6，后面和队友讨论了超久的I题，一直给的是假算法，根本不是最优解QAQ，至此到三个多小时时，rank也从6掉到8，I题继续wa，当然因为奇妙的OJ计算没过的题的罚时，我们也是看着后一名的罚时控制着wa的次数……，然而I一直过不了，假到结束，B数论不会，以为抓住了扩展欧几里得这个救命稻草，结果根本不能用。一行人在四个半小时的时候提前下班，出门问I题被雨姐姐斌姐姐双重嘲讽QAQ（斌姐姐：你们怎么就走了呀，不做完吗？雨姐姐：I题是个原题啊，很简单的）呜呜呜呜呜呜呜哭死，可是我们真的被I整麻了，事后也发现总是容易被局限在一个思路里跳不出。根据D和I的双倍经验，应该是得改变策略，一个题最多两个人先看，给不出真算法时换另一个人，然后这两个人尽量别跟他介绍思路，看看另一个人会不会有什么别的见解，或许会有奇效。（I假了，D假了半天，最后换个船新思路秒了）</p><p>总之，校赛会让我短暂地兴奋吧。但冷静下来，我现在要做的事，无非是把CF上以前没补的EF题悉数补完，补完校赛的知识点，就差不多了。因为高数和物理落下太多了，正所谓<strong>开卷有益</strong>，接下来得多学学核心课了呀。 拒绝混世度日。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;恍然发现大一已经过去大半，这学期却还没好好做过总结。&lt;/p&gt;
&lt;p&gt;要总结的话，大抵可以用一个字概括：&lt;strong&gt;混&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;有多混呢？平时上课几乎不听讲，课程知识几乎全都是一知半解（物理更糟糕），感觉一直是浑浑噩噩，没少打游戏，没多认真思考。</summary>
      
    
    
    
    <category term="随笔" scheme="https://eykenis.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>Codeforces Round#713 Div. 3</title>
    <link href="https://eykenis.github.io/2021/04/11/Codeforces-Round-713-Div-3/"/>
    <id>https://eykenis.github.io/2021/04/11/Codeforces-Round-713-Div-3/</id>
    <published>2021-04-11T14:20:50.000Z</published>
    <updated>2021-07-11T12:33:41.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Codeforces-Round-713"><a href="#Codeforces-Round-713" class="headerlink" title="Codeforces Round 713"></a>Codeforces Round 713</h1><p><del>经典暴力模拟掉分场</del></p><p>本场链接：</p><p><a href="https://codeforces.com/contest/1512">https://codeforces.com/contest/1512</a></p><h2 id="A-Spy-Detected"><a href="#A-Spy-Detected" class="headerlink" title="A - Spy Detected!"></a>A - Spy Detected!</h2><p><strong>解析</strong></p><p>水水水，不解析</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">int</span> a[n];</span><br><span class="line">map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) mp[a[i]]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(mp[a[i]] &lt;= <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Almost-Rectangle"><a href="#B-Almost-Rectangle" class="headerlink" title="B - Almost Rectangle"></a>B - Almost Rectangle</h2><p><strong>思路</strong></p><p>如果两个*在对角线，也就是行列都不同的情况下，构造矩形唯一，用1的行，2的列作为坐标得到第3个点，用1的列，2的行作为坐标得到第4个点；</p><p>如果在同行，为了尽量不超过图的范围，构造两个在上方的点，或者两个在下方的点即可。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">405</span>;</span><br><span class="line"><span class="keyword">char</span> a[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; r;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; c;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; ++j)&#123;</span><br><span class="line">cin &gt;&gt; a[i][j];</span><br><span class="line"><span class="keyword">if</span>(a[i][j] == <span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">r.<span class="built_in">push_back</span>(i), c.<span class="built_in">push_back</span>(j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> r1, c1, r2, c2;</span><br><span class="line"><span class="keyword">if</span>(r[<span class="number">0</span>] == r[<span class="number">1</span>])&#123;</span><br><span class="line"><span class="keyword">if</span>(r[<span class="number">0</span>] + <span class="number">1</span> &lt; n)&#123;</span><br><span class="line">r1 = r2 = r[<span class="number">0</span>] + <span class="number">1</span>;</span><br><span class="line">c1 = c[<span class="number">0</span>], c2 = c[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">r1 = r2 = r[<span class="number">0</span>] - <span class="number">1</span>;</span><br><span class="line">c1 = c[<span class="number">0</span>], c2 = c[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(c[<span class="number">0</span>] == c[<span class="number">1</span>])&#123;</span><br><span class="line"><span class="keyword">if</span>(c[<span class="number">0</span>] + <span class="number">1</span> &lt; n)&#123;</span><br><span class="line">c1 = c2 = c[<span class="number">0</span>] + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">c1 = c2 = c[<span class="number">0</span>] - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">r1 = r[<span class="number">0</span>], r2 = r[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">r1 = r[<span class="number">0</span>], c1 = c[<span class="number">1</span>];</span><br><span class="line">r2 = r[<span class="number">1</span>], c2 = c[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; ++j)&#123;</span><br><span class="line"><span class="keyword">if</span>((i == r1 &amp;&amp; j == c1) || (i == r2 &amp;&amp; j == c2))&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-A-B-Palindrome"><a href="#C-A-B-Palindrome" class="headerlink" title="C - A-B Palindrome"></a>C - A-B Palindrome</h2><p><strong>题意</strong></p><p>给一个部分为问号的01串，给定$a$,$b$，要求把所有的问号替换为0或1，使最后的串恰好有$a$个0和$b$个1.</p><p>给出串和$a,b$，问可否构造出，可以的话请你构造一个看看。</p><p><strong>分析</strong></p><p>写代码的时候为了避免不必要的讨论，分三次遍历。</p><p>第一次，统计原字符串中的0,1个数。</p><p>第二次，统计字符串中一位为0或者1，而其反转位为问号的位置，并且这些问号能替换的数字也就确定了，替换之。</p><p>第三次，统计字符串中为问号，且其反转位也为问号的位置。</p><p>*<strong>注意第三次要细分讨论：</strong></p><p>如果串的长度是奇数，则把最中间的位置预先处理掉，然后在第三次遍历的过程中略过这点。</p><p>==怎么预处理？==</p><p>这个时候，由于我们剩下的操作就是把成对的问号替换掉，当然是偶数个的配对，因此如果中间的位置是问号的话，那它只能由$a,b$中为奇数的来替换，这样才保证剩余的未放置的0和1都是偶数个（在串可以构造的情况下）。</p><p>全都替换好了之后，检查剩余待替换的0,1个数是否都为0，是就输出替换后的串，否则-1.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> r s.size() - i - 1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; s;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] != <span class="string">&#x27;?&#x27;</span> &amp;&amp; s[r] != <span class="string">&#x27;?&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] != s[r]) &#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[i] == <span class="string">&#x27;1&#x27;</span>) b--;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[i] == <span class="string">&#x27;0&#x27;</span>) a--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] == <span class="string">&#x27;?&#x27;</span> &amp;&amp; s[r] == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">s[i] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">a-=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[i] == <span class="string">&#x27;0&#x27;</span> &amp;&amp; s[r] == <span class="string">&#x27;?&#x27;</span>)&#123;</span><br><span class="line">s[r] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">a-=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[i] == <span class="string">&#x27;?&#x27;</span> &amp;&amp; s[r] == <span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">s[i] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">b-=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[i] == <span class="string">&#x27;1&#x27;</span> &amp;&amp; s[r] == <span class="string">&#x27;?&#x27;</span>)&#123;</span><br><span class="line">s[r] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">b-=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag || b &lt; <span class="number">0</span> || a &lt; <span class="number">0</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(b % <span class="number">2</span> != <span class="number">0</span>)&#123;</span><br><span class="line">s[(s.<span class="built_in">size</span>() - <span class="number">1</span>) / <span class="number">2</span>] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">b--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a % <span class="number">2</span> != <span class="number">0</span>)&#123;</span><br><span class="line">s[(s.<span class="built_in">size</span>() - <span class="number">1</span>) / <span class="number">2</span>] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">a--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(s.<span class="built_in">size</span>()%<span class="number">2</span> == <span class="number">0</span> &amp; i == (s.<span class="built_in">size</span>() - <span class="number">1</span>) / <span class="number">2</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(s[i] == <span class="string">&#x27;?&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(a &gt; <span class="number">0</span>)&#123;</span><br><span class="line">s[i] = s[r] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">a -= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(b &gt; <span class="number">0</span>)&#123;</span><br><span class="line">s[i] = s[r] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">b -= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a == <span class="number">0</span> &amp;&amp; b == <span class="number">0</span>)&#123;</span><br><span class="line">cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-Corrupted-Array"><a href="#D-Corrupted-Array" class="headerlink" title="D - Corrupted Array"></a>D - Corrupted Array</h2><p><del>被卡long long的hack数据叉掉了呜呜呜hacker好狠心啊</del></p><p><strong>题意</strong></p><p>给n+2个数，问是否可以还原出这样一个数组$a$:</p><ol><li>这n+2个数中有n个数都是$a$中的数.</li><li>剩余的两个数中，至少有一个数等于数组$a$的求和.</li></ol><p><strong>思路</strong></p><p>将原数组从小到大排序，由于要找一个等于其他n个数的和的数，而所有的数都是正数，因此这个和数只能出现在最大的两个数里面。</p><p>假如这个数就是倒数第一个，那么它应该等于前n个数的和；</p><p>假如这个数是倒数第二个，那么它应该等于前n+1个数的和减去其中某个数。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">int</span> b[n + <span class="number">2</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n + <span class="number">2</span>; ++i)&#123;</span><br><span class="line">cin &gt;&gt; b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(b, b + n + <span class="number">2</span>);</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n + <span class="number">1</span>; ++i)&#123;</span><br><span class="line">sum += b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// x = b[n + 1]</span></span><br><span class="line"><span class="keyword">if</span>(sum - b[n] == b[n])&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">cout &lt;&lt; b[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n + <span class="number">1</span>; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(sum - b[i] == b[n + <span class="number">1</span>])&#123;</span><br><span class="line">flag = i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag == <span class="number">-1</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n + <span class="number">1</span>; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(i == flag) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; b[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E-Permutation-by-Sum"><a href="#E-Permutation-by-Sum" class="headerlink" title="E - Permutation by Sum"></a>E - Permutation by Sum</h2><p><strong>题意</strong></p><p>从$1$到$n$中找$r-l+1$个数，要求它们的和为$s$，问能否找出。</p><p>题目要求输出一个全排列，其中你找出的数要出现在$[r,l]$这个下标区间内。</p><p><strong>分析</strong></p><p>从$1$到$n$这些数中，由于所有整数应有尽有，不存在中间有空缺，因此从$1$到$\sum_{i=1}^n$的任意数都能取到。所以，只要这个$s$的范围在 $[前r-l+1个数的和,后r-l+1个数的和]$之间的话，那么就一定能构造出这样的$r-l+1$个数.</p><p>我们尝试贪心构造：</p><p>先将$r-l+1$简记为$num$，首先，我们初始状态下的$ans$数组为$1$到$num$这些数。</p><p>我们要做的是将其中的某些数替换为更大的数，来使数组总和达到$s$。</p><p>而由于<strong>所有整数应有尽有，不存在空缺</strong>，因此我们大胆地尽量缩小差距，最后差距恰好可以通过替换消除时，就完成了。</p><p>例如，现在的差距为$d$，$d=s-\sum_{i=1}^{num}$，我们通过一次替换可以缩小的最大差距为$n-1$，即把最小的1替换为未使用的最大的n。如果我们的差距不足$n-1$，再看将2替换为n可不可以，以此类推.</p><p>替换成功后，我们得标记n已经使用，这样我们就不会重复地将n引入$ans$数组了。为了简单地做到这点，使用双指针，一个从1开始，走到$num$,代表现在待替换的数；另一个从$n$开始，走到$num+1$，代表最大的未使用的数。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n, l, r, s;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; l &gt;&gt; r &gt;&gt; s;</span><br><span class="line"><span class="keyword">int</span> num = r - l + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> mn = (num * (num + <span class="number">1</span>)) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> mx = (n - num + <span class="number">1</span> + n) * num / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(s &gt; mx || s &lt; mn)&#123;</span><br><span class="line">cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> d = s - mn;</span><br><span class="line"><span class="keyword">int</span> in = n;</span><br><span class="line"><span class="keyword">int</span> ans[num] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> v[n + <span class="number">1</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= num; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(in - i &lt;= d)&#123;</span><br><span class="line">d -= in - i;</span><br><span class="line">ans[i - <span class="number">1</span>] = in--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> ans[i - <span class="number">1</span>] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(d &gt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(in - num == d)&#123;</span><br><span class="line">ans[num - <span class="number">1</span>] = in;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> in--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; ++i) v[ans[i]] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> p = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; l; ++i)&#123;</span><br><span class="line"><span class="keyword">while</span>(v[p]) p++;</span><br><span class="line">cout &lt;&lt; p++ &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; ++i)&#123;</span><br><span class="line">cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = r + <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line"><span class="keyword">while</span>(v[p]) p++;</span><br><span class="line">cout &lt;&lt; p++ &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Codeforces-Round-713&quot;&gt;&lt;a href=&quot;#Codeforces-Round-713&quot; class=&quot;headerlink&quot; title=&quot;Codeforces Round 713&quot;&gt;&lt;/a&gt;Codeforces Round 713&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
    <category term="贪心" scheme="https://eykenis.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>校队的一档子事</title>
    <link href="https://eykenis.github.io/2021/03/30/%E6%A0%A1%E9%98%9F%E7%9A%84%E4%B8%80%E6%A1%A3%E5%AD%90%E4%BA%8B/"/>
    <id>https://eykenis.github.io/2021/03/30/%E6%A0%A1%E9%98%9F%E7%9A%84%E4%B8%80%E6%A1%A3%E5%AD%90%E4%BA%8B/</id>
    <published>2021-03-30T08:50:31.000Z</published>
    <updated>2021-07-11T12:24:29.297Z</updated>
    
    <content type="html"><![CDATA[<p>昨天校队开会这么重要的事，想好了回去打完div2写个日记记一下的结果鸽掉了……那今天总得补吧。<br>话说现在都不知道怎么去写一篇记录文章了……作文水平稳步下降啊。总之，昨天在寝室坐了一下午，然后就去吃饭开会了。本来是去108，我们都想那么小一个地方怎么坐得下几十个人……平时塞3个队伍训练都难。果不其然最后改到314一个像样的教室里了。oh然后见到了一个多月没见的斌姐姐（[流口水]）。教室里等人来齐的时候，我队友在旁边无声打音游（因为对曲子熟悉%%%）。嗯，昨天好像是有点小雨叭，<del>反正就是有点冷，然后湿湿的那种回忆。</del>等了有一会儿，教练进来，会议就正式开始了。斌斌酱站在旁边，他总是<del>站不稳</del>的感jio，站着就是要一前一后摇晃（仔细想想我好像也是这样，在很多人面前而又不是太正式的时候总觉得让重心慢速前后摇动比较自在？）<br>吴教练简单地说了几句，然后就引入最重要的问题了：斌姐不再当队长了。从回忆中整理了一下，教练大概意思是：我是大保姆，他是小保姆，队长当得挺辛苦。现在他要去别校读书了，以后队长的职务就不再适合了。他当队长以来分担了许多的工作，总之为校队的建设做出了很多的贡献。比赛信息，训练安排，队伍登记等等这些都离不开队长的工作啊。毕竟我太忙了。<br>然后，与我预想的不同，几乎没有任何仪式感，只是所有人都非常激烈地鼓掌，然后斌斌就退到一边，坐下了。<br>“斌斌王朝结束了吗？”<br>虽然我好像没有见识太多，但感觉，他是个非常有个人魅力的人。不光是斌姐，校队里的很多人，包括fls，cls，还有面我的那两个还不知道名字的学长，以及同级生们，等等，我都能在他们身上发现共通点。总感觉我们都一样。不仅如此，他们都有着稀有难得的真诚，每个人都那样展示着真实的自己。在这里，就算你和谁都不熟，你也不需要客套。所有的礼貌和祝贺，都是出于来自心底的佩服和赞同。或许是因为，我们的目的都很单纯，都很统一。真好。<br>接下来就是选新队长。教练说他不想要指定，得自愿来，指派的话可能队长就不太有积极性了。</p><p>—我晕，这已经是周五了，昨天（上文是今天12号的昨天，也就是11号写的= =）又忘了结尾发布了。</p><p>继续。教练等待下一任队长出现，却似乎并没有人站出来。不知道大家是怕麻烦，还是觉得这个重担自己担当不起，还是什么。接着就是斌姐姐在一旁给雨姐姐使眼色，毕竟他就是目前校队声望最高的人啦。雨姐在旁边愣了老半天，估计还是不太想吧。</p><p>教练坚持不指派，同学们也坚持没人主动来……然后斌姐继续对雨姐姐施以眼色。“要是没有人愿意的话，那我们今年就决定不要队长了，搞没有队长的一年。”教练虽然如是说了，但是还是等了很一会儿，还是在盼着有人愿意来做。或许雨姐姐是意识到可能自己确实是大家眼中最合适的人选了，校队没有斌酱酱的话得靠他呀。再加上斌斌悄悄劝说，和气氛的略显紧张，最后雨姐姐还是站出来了~虽然这样明显也不能说他完全是自愿的吧，不过这气氛得是让他不得不做好队长这个职务(~_~)众望所归%%%</p><p>然而副队长1秒钟之内就决定了，没等教练提问落音，fls就站起来啦~看来他是一直望着这个位置，开心地说要给cls打下手。</p><p>然后当天晚上fls的cf就黄了%%%%%%%%%</p><p>而我也要努力加油了吧</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;昨天校队开会这么重要的事，想好了回去打完div2写个日记记一下的结果鸽掉了……那今天总得补吧。&lt;br&gt;话说现在都不知道怎么去写一篇记录文章了……作文水平稳步下降啊。总之，昨天在寝室坐了一下午，然后就去吃饭开会了。本来是去108，我们都想那么小一个地方怎么坐得下几十个人……平</summary>
      
    
    
    
    <category term="随笔" scheme="https://eykenis.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>关于我的一时兴起</title>
    <link href="https://eykenis.github.io/2021/03/06/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E4%B8%80%E6%97%B6%E5%85%B4%E8%B5%B7/"/>
    <id>https://eykenis.github.io/2021/03/06/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E4%B8%80%E6%97%B6%E5%85%B4%E8%B5%B7/</id>
    <published>2021-03-06T02:32:31.000Z</published>
    <updated>2021-07-11T12:21:52.906Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ekkepic.oss-cn-beijing.aliyuncs.com/img/20210701161433.png" alt=""></p><p>非常有文采！那我应该写些什么呢~</p><p>或者，拿今天正好是二十四节气之一来说，“惊蛰”。</p><center>二月节，万物出乎震<br>     震为雷，故曰惊蛰，<br>     是蛰虫惊而出走矣。</center><p>抄了一段诗，感觉良好。</p><p>还没有意识到春天就要来临，因为总是感觉少了什么。应该说，过去这一年，好像还没有感受到真真切切的雪。想到去年二月初，在家里书桌前奋笔疾书的我，看着天外满飘的雪花。风很大，地面积雪也不多，但空中飘舞的雪花却很多。那时的景色总让我想到如今的气候变化……总之，天气越来越不像记忆中的样子了。而这一年，天气也是说变就变。春节刚一过完，大太阳就出了，气温能到20多度坐着也热的程度。母亲为自己买的新棉衣今年直接没机会穿上了……接着想起高考那段时间，过去几个月本以为会因为高考推迟到7月，会导致我们高考温度成为大敌，连老师都跟我们提了“带手帕”的战略，结果到七月那几天出奇的凉快，不停的雨把气温降到了20度出头。要说平时夏天的雨也只是闷热，去年的雨却真的让气温降下来了~</p><p>冬春，我在三尺小屋畅想未来；夏至，我在校园里<del>汗水</del>泪水交织；秋收，我看着她的笑颜吹散远去；又是冬春，我在洛谷签到，我在牛客补题，我在教室里继续日复一日地上课，日复一日地写题，玩，吃饭，睡觉。此时的我依旧可以畅想未来。而下一个夏至，我依旧可以让汗水与泪水交织。然后，秋天里再也找不到她。然后，又是冬春，我继续畅想未来。</p><p>或许想着想着，未来就来了，一如我过去畅想着现在。惊蛰的雨水让综合楼与物电院的外墙阴沉沉的，但天空明亮，空气清朗，蛰虫惊而出走。未来其实正在走进来，好好去抓住吧，惊雷再提醒我一次。</p>]]></content>
    
    
    <summary type="html">一冬的蛰伏，都是为了这个春天</summary>
    
    
    
    <category term="随笔" scheme="https://eykenis.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>2021年牛客寒假集训营第三场 个人题解</title>
    <link href="https://eykenis.github.io/2021/03/05/2021%E5%B9%B4%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E9%9B%86%E8%AE%AD%E8%90%A5%E7%AC%AC%E4%B8%89%E5%9C%BA-%E4%B8%AA%E4%BA%BA%E9%A2%98%E8%A7%A3/"/>
    <id>https://eykenis.github.io/2021/03/05/2021%E5%B9%B4%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E9%9B%86%E8%AE%AD%E8%90%A5%E7%AC%AC%E4%B8%89%E5%9C%BA-%E4%B8%AA%E4%BA%BA%E9%A2%98%E8%A7%A3/</id>
    <published>2021-03-05T13:45:15.000Z</published>
    <updated>2021-07-11T12:53:32.069Z</updated>
    
    <content type="html"><![CDATA[<p>链接：<a href="https://ac.nowcoder.com/acm/contest/9983">https://ac.nowcoder.com/acm/contest/9983</a><br>来源：牛客网</p><p>开学后才补的题解……寒假时懒得补，做专题/玩去了……</p><h1 id="D-Happy-New-Year-（签到）"><a href="#D-Happy-New-Year-（签到）" class="headerlink" title="D - Happy New Year!（签到）"></a>D - Happy New Year!（签到）</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>还有一个周就要过年啦！这一天牛牛盯着新的台历出神，他突然想知道对于第$n$年来说，大于$n$且与$n$的数位和相同的最小年份是多少。<br> 一个数字的数位和等于他各数位上的数字之和，例如2021\text 20212021的数位和等于$2+0+2+1=5$。</p><h2 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">一个正整数n。</span><br><span class="line">2021 &lt;= n &lt;= 2030.</span><br></pre></td></tr></table></figure><h2 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输出一个正整数代表答案。</span><br></pre></td></tr></table></figure><p>示例1</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2025</span><br></pre></td></tr></table></figure><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2034</span><br></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2034是比2025大的且数位和等于9的最小正整数</span><br></pre></td></tr></table></figure><p><strong>分析</strong></p><p>我直接签到AC</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2021</span>) cout &lt;&lt; <span class="number">2030</span>;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2022</span>) cout &lt;&lt; <span class="number">2031</span>;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2023</span>) cout &lt;&lt; <span class="number">2032</span>;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2024</span>) cout &lt;&lt; <span class="number">2033</span>;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2025</span>) cout &lt;&lt; <span class="number">2034</span>;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2026</span>) cout &lt;&lt; <span class="number">2035</span>;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2027</span>) cout &lt;&lt; <span class="number">2036</span>;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2028</span>) cout &lt;&lt; <span class="number">2037</span>;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2029</span>) cout &lt;&lt; <span class="number">2038</span>;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2030</span>) cout &lt;&lt; <span class="number">2102</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="E-买礼物（线段树-链表-思维）"><a href="#E-买礼物（线段树-链表-思维）" class="headerlink" title="E - 买礼物（线段树+链表+思维）"></a>E - 买礼物（线段树+链表+思维）</h1><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>在卖礼物的超市中有$\mathit n$个柜子，每个柜子里都摆放了一个礼物，每个礼物有自己的一个编号，第$i$个柜子里的礼物编号为$a_i$。<br> 茶山牛想给牛牛和牛妹买相同编号的礼物，但礼物有可能在某个时刻被其他人买走，而且柜子数量太多，因此茶山牛在某个时刻只想知道某一个柜子区间是否能买到两件相同编号的礼物。<br> 具体来说，有$q$次操作，格式如下：<br>$ 1\space x$，第$x$个柜子里的礼物被买走，保证此时这个柜子里的礼物还在。<br>$2\ l\ r$，茶山牛询问第$l$到第$r$个柜子未被买走的礼物中是否有两个礼物编号相同。</p><h2 id="输入描述-1"><a href="#输入描述-1" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一行以空格分隔的两个正整数n,q\mathit n,qn,q。</span><br><span class="line">接下来一行以空格分隔的n\mathit nn个正整数aia_&#123;i&#125;ai。</span><br><span class="line">接下来q\mathit qq行每行一个操作。</span><br><span class="line">1≤n,q≤5×1051\leq n,q \leq 5×10^&#123;5&#125;1≤n,q≤5×105</span><br><span class="line">1≤ai≤1061\leq a_&#123;i&#125; \leq 10^&#123;6&#125;1≤ai≤106</span><br><span class="line">1≤x,l≤r≤n1\leq x,l \leq r \leq n1≤x,l≤r≤n</span><br></pre></td></tr></table></figure><h2 id="输出描述-1"><a href="#输出描述-1" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对每次茶山牛的询问输出一行一个整数，如果在指定的区间内有两个礼物编号相同则输出1，否则输出0。</span><br></pre></td></tr></table></figure><p>示例1</p><h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">5 5</span><br><span class="line">1 2 1 2 1</span><br><span class="line">2 2 4</span><br><span class="line">2 2 5</span><br><span class="line">1 2</span><br><span class="line">2 2 4</span><br><span class="line">2 2 5</span><br></pre></td></tr></table></figure><h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br><span class="line">0</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">第一次询问的时候可以买到两件编号为2的礼物。第三次询问的时候由于第二件礼物被买走，所以2到4柜子里只有一件编号为1的礼物和一件编号为2的礼物。第四次询问的时候可以买到两件编号为1的礼物。</span><br></pre></td></tr></table></figure><p><strong>分析</strong></p><p>需要的知识：简单线段树，链表</p><p>询问的要求是区间内存在2个相同礼物。不妨开一个数组$pre[]$，让$pre[i]$表示和第$i$个礼物相同的礼物在$i$右边最近出现的位置。区间内存在2个相同礼物当且仅当区间$(l,r)$内存在$Next[i] \leq r$.</p><p>因此，用线段树维护区间内所有$Next$的最小值.当这个最小值也小于等于r时符合要求。</p><p>更新操作：我们用双向链表$Next$和$Last$模拟同种礼物之间的关系。把礼物$i$买走时，更改一下状态。由于$i$已经空了，  $Next[i]$无意义，将其标记为$n+1$（或者其他大于n的数，总之无意义即可）。并将$Last[Next[i]]$设为$Last[i]$，$Next[Last[i]]$设为$Next[i]$.接着更新线段树，记得pushdown.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x7fffffff</span>;</span><br><span class="line"><span class="keyword">int</span> n, q;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, mn;</span><br><span class="line">&#125;a[maxn &lt;&lt; <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num[maxn];</span><br><span class="line"><span class="keyword">int</span> Next[maxn];</span><br><span class="line"><span class="keyword">int</span> Last[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a[k].mn = <span class="built_in">min</span>(a[lson].mn, a[rson].mn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a[k].l = l, a[k].r = r;</span><br><span class="line">    <span class="keyword">if</span>(l == r)&#123;</span><br><span class="line">        a[k].mn = Next[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(lson, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(rson, mid + <span class="number">1</span>, r);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt;= l &amp;&amp; a[k].r &lt;= r) <span class="keyword">return</span> a[k].mn;</span><br><span class="line">    <span class="keyword">int</span> mid = (a[k].l + a[k].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(r &lt;= mid) <span class="keyword">return</span> <span class="built_in">query</span>(lson, l, r);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(l &gt; mid)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">query</span>(rson, l, r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">min</span>(<span class="built_in">query</span>(lson, l, mid), <span class="built_in">query</span>(rson, mid + <span class="number">1</span>, r));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">buy</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> p, <span class="keyword">int</span> x)</span><span class="comment">//把下标p的值改为x（单点修改）</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l == a[k].r)&#123;</span><br><span class="line">        a[k].mn = x;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (a[k].l + a[k].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(p &lt;= mid) <span class="built_in">buy</span>(lson, p, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">buy</span>(rson, p, x);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// int pos[maxn] = &#123;0&#125;;</span></span><br><span class="line">map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pos;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num[i]);</span><br><span class="line">        Last[i] = <span class="number">0</span>, Next[i] = n + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(pos.<span class="built_in">count</span>(num[i])) Last[i] = pos[num[i]];</span><br><span class="line">        pos[num[i]] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    pos.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = n; i &gt; <span class="number">0</span>; --i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(pos.<span class="built_in">count</span>(num[i]) &amp;&amp; pos[num[i]] != <span class="number">0</span>) Next[i] = pos[num[i]];</span><br><span class="line">        <span class="keyword">else</span> Next[i] = n + <span class="number">1</span>;</span><br><span class="line">        pos[num[i]] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">int</span> u, v, w;</span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;u);</span><br><span class="line">        <span class="keyword">if</span>(u == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;v);</span><br><span class="line">            <span class="keyword">int</span> lst = Last[v], nst = Next[v];</span><br><span class="line">            Last[nst] = Last[v],</span><br><span class="line">            Next[lst] = Next[v];</span><br><span class="line">            <span class="built_in">buy</span>(<span class="number">1</span>, lst, nst);<span class="comment">//刷新</span></span><br><span class="line">            Next[v] = inf;</span><br><span class="line">            <span class="comment">//单点修改，使该处为空</span></span><br><span class="line">            <span class="built_in">buy</span>(<span class="number">1</span>, v, inf);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;v, &amp;w);</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">query</span>(<span class="number">1</span>, v, w) &lt;= w)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="G-买糖果（并查集）"><a href="#G-买糖果（并查集）" class="headerlink" title="G - 买糖果（并查集）"></a>G - 买糖果（并查集）</h2><h2 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h2><p>在一个幼儿园里面有n\mathit nn个小朋友，分别编号1,2,…,n\text 1,2,…,n1,2,…,n。在这些小朋友中有一些小朋友互为朋友关系，总共有m\mathit mm对朋友。<br> 作为幼儿园老师，你想买一些糖果分给小朋友，你知道第i\mathit ii个小朋友想要至少aia_{i}ai个糖果，否则他就会不开心。<br> 同时，如果一个小朋友得到的糖果数小于他某个朋友得到的糖果数，他也会不开心。<br> 请问你最少买多少糖果才能保证每个小朋友都不会不开心呢？</p><h2 id="输入描述-2"><a href="#输入描述-2" class="headerlink" title="输入描述:"></a>输入描述:</h2><blockquote><p>第一行以空格分隔的两个整数$n,m$。<br>第二行以空格分隔的$n$个正整数$a_i$ 。<br>接下来m行每行以空格分隔的两个正整数u,v，代表u是v的朋友，v是u的朋友。<br>$1\leq n\leq 10^{6} $</p><p>$0\leq m\leq 10^{6}$</p><p>$1\leq a_{i} \leq 10^{9}$</p><p>$1\leq u,v \leq n,u≠v$</p></blockquote><h2 id="输出描述-2"><a href="#输出描述-2" class="headerlink" title="输出描述:"></a>输出描述:</h2><blockquote><p>购买的最少糖果数以保证每个小朋友都不会不开心。</p></blockquote><p>示例1</p><h2 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3 1</span><br><span class="line">1 2 3</span><br><span class="line">1 2</span><br></pre></td></tr></table></figure><h2 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><h2 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">给第三个小朋友买3个糖果，前两个小朋友都买2两个糖果，总共至少买7个糖果。注意如果给第一个小朋友只买了1个糖果，那么他在看到自己的好朋友2有2个糖果的情况下，他就会不开心。</span><br></pre></td></tr></table></figure><p><strong>分析</strong></p><p>注意，咋一看，朋友的朋友不是朋友，但需求有传递性。例如，A与B互为朋友，B与C互为朋友，B与C的需求都是max(B,C), 而A与B的需求都是是max(A, B)，因此三者的需求都会是max(A,B,C).</p><p>不妨使用并查集，将互为朋友的并到一起，他们需要的糖果数等于他们所在的并查集生成的树中所有需求的最大值。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">500</span>;</span><br><span class="line">ll a[maxn+<span class="number">5</span>];</span><br><span class="line">ll fa[maxn];</span><br><span class="line"><span class="function">ll <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x == fa[x]) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(ll i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i], fa[i] = i;</span><br><span class="line">    ll x, y;</span><br><span class="line">    <span class="keyword">for</span>(ll i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        ll fx = <span class="built_in">find</span>(x), fy = <span class="built_in">find</span>(y);</span><br><span class="line">        fa[fx] = fy;</span><br><span class="line">        a[fx] = a[fy] = <span class="built_in">max</span>(a[fx], a[fy]);</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i = <span class="number">1</span>; i &lt;= n; ++i) ans += a[<span class="built_in">find</span>(i)];</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="H-数字串（贪心，思维）"><a href="#H-数字串（贪心，思维）" class="headerlink" title="H - 数字串（贪心，思维）"></a>H - 数字串（贪心，思维）</h1><p>链接：<a href="https://ac.nowcoder.com/acm/contest/9983/H">https://ac.nowcoder.com/acm/contest/9983/H</a><br>来源：牛客网</p><h2 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h2><p> 牛牛发现了一种方法可以将只包含小写字母的字符串按照以下方式使其转换成一个数字串：<br> 取其中的每个字母，$a$转换为1，$b$转换为2……$z$转换为26，然后将这些数字拼接起来。<br> 例如，$abcz$可以转换为$12326$。<br> 现在给出一个只包含小写字母的字符串$S$，你需要找到一个只包含小写字母的字符串$T$，使得两个      串不相同但是能转换成相同的数字串。</p><h2 id="输入描述-3"><a href="#输入描述-3" class="headerlink" title="输入描述:"></a>输入描述:</h2><blockquote><p>一行一个长度不超过$10^{6}$的小写字母字符串$S$。</p></blockquote><h2 id="输出描述-3"><a href="#输出描述-3" class="headerlink" title="输出描述:"></a>输出描述:</h2><p>示例1</p><h2 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cwc</span><br></pre></td></tr></table></figure><h2 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cbcc</span><br></pre></td></tr></table></figure><h2 id="说明-3"><a href="#说明-3" class="headerlink" title="说明"></a>说明</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cwc和cbcc转换成的数字串都是3233</span><br></pre></td></tr></table></figure><p>示例2</p><h2 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ccc</span><br></pre></td></tr></table></figure><h2 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure><p><strong>分析</strong></p><p>贪心，将字母全部转换成对应数字，存到数组里。</p><p>然后遍历数组，看有没有可以拆分的项，或者是相邻两项可以合并的，如果有，只要有一个，改动这一个足矣，输出做了这一个改动的字母串即可。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); ++i)</span><br><span class="line">        t.<span class="built_in">push_back</span>(s[i] - <span class="string">&#x27;a&#x27;</span> + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> pos;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; t.<span class="built_in">size</span>(); ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!flag &amp;&amp; (t[i] &gt; <span class="number">10</span> &amp;&amp; t[i] != <span class="number">20</span>))&#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            pos = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!flag &amp;&amp; (t[i] == <span class="number">1</span> || t[i] == <span class="number">2</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i != t.<span class="built_in">size</span>() - <span class="number">1</span> &amp;&amp; t[i + <span class="number">1</span>] &lt;= <span class="number">6</span>)&#123;</span><br><span class="line">                flag = <span class="number">2</span>;</span><br><span class="line">                pos = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!flag) cout &lt;&lt; <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        string ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; t.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == pos)&#123;</span><br><span class="line">                <span class="keyword">if</span>(flag == <span class="number">1</span>)&#123;</span><br><span class="line">                    ans += <span class="string">&#x27;a&#x27;</span> + t[i] / <span class="number">10</span> - <span class="number">1</span>;</span><br><span class="line">                    ans += <span class="string">&#x27;a&#x27;</span> + t[i] % <span class="number">10</span> - <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(flag == <span class="number">2</span>)&#123;</span><br><span class="line">                    <span class="keyword">int</span> p = t[i] * <span class="number">10</span>;</span><br><span class="line">                    p += t[++i];</span><br><span class="line">                    ans += <span class="string">&#x27;a&#x27;</span> + p - <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> ans += <span class="string">&#x27;a&#x27;</span> + t[i] - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="I-序列的美观度（动态规划-or-贪心）"><a href="#I-序列的美观度（动态规划-or-贪心）" class="headerlink" title="I - 序列的美观度（动态规划 or 贪心）"></a>I - 序列的美观度（动态规划 or 贪心）</h2><h2 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h2><p>设一个长度为$m$的序列$S$的美观度等于有多少个整数$i$满足$1≤i≤m−1$且$Si=S_{i+1}$，其中$S_i$代表 序列$S$的第$i$个元素。<br> 给出一个长度为$n$的序列$a$，问在他的所有子序列美观度最大是多少。<br> 某个序列的子序列是从最初序列通过去除某些元素（也可以不去除，即序列本身也是子序列）但不破坏余下元素的相对位置（在前或在后）而形成的新序列。</p><h2 id="输入描述-4"><a href="#输入描述-4" class="headerlink" title="输入描述:"></a>输入描述:</h2><blockquote><p>第一行一个正整数$n$。<br>接下来一行$n$个以空格分隔的正整数$a_i$。<br>$2≤n≤10^6$<br>$1\leq a_{i} \leq 10^{6}$</p></blockquote><h2 id="输出描述-4"><a href="#输出描述-4" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输出一个整数代表答案。</span><br></pre></td></tr></table></figure><p>示例1</p><h2 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a>输入</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 1 2 3 2</span><br></pre></td></tr></table></figure><h2 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a>输出</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h2 id="说明-4"><a href="#说明-4" class="headerlink" title="说明"></a>说明</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">美观度最大的子序列为[1,1,2,2]</span><br></pre></td></tr></table></figure><p>示例2</p><h2 id="输入-6"><a href="#输入-6" class="headerlink" title="输入"></a>输入</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">1 1 2 2 2 1 1</span><br></pre></td></tr></table></figure><h2 id="输出-6"><a href="#输出-6" class="headerlink" title="输出"></a>输出</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><p><strong>分析</strong></p><p>首先理解好题意。</p><p>$dp$做法：</p><p>类似于LIS问题.在求$dp[i]$时，找$a_i$是否可以接在$a_j(i&gt;j)$后面（二者相同）以提升美观度，是就$dp[i] = dp[j]+1$，否则$dp[i] = dp[i - 1]$.但看看数据规模达到了$1e6$，尝试优化.开一个新数组，将每个数的相同数上一次出现的位置存进去，然后直接调用这个数组就可以找到， 不需要遍历$0$到$i-1$. 即：$dp[i] = max(dp[pre[i]] + 1, dp[i - 1])$.</p><p><strong>代码（dp）</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> dp[maxn];</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="keyword">int</span> last[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//dp优化</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">memset</span>(last, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(last));</span><br><span class="line">    <span class="built_in">memset</span>(pre, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(pre));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        pre[i] = last[a[i]];</span><br><span class="line">        last[a[i]] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        dp[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(pre[i] != inf) dp[i] = <span class="built_in">max</span>(dp[pre[i]] + <span class="number">1</span>, dp[i - <span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">else</span> dp[i] = dp[i - <span class="number">1</span>];</span><br><span class="line">        ans = <span class="built_in">max</span>(ans, dp[i]);</span><br><span class="line">    &#125;</span><br><span class="line">   cout &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>贪心做法：</p><p>如果我们已经完成了对前面某个子列的求解，现在看向后面一段。</p><p>从后面一段找符合条件的数字，如果找到了很多，那么一定把靠前的放入答案数组，这样一定不会比只放入后面的差。</p><p>证明：</p><p>首先举两个例子。</p><p>例如，序列是1112211.首先得到子列111，现在美观度是2.然后考虑后面，有22和11.将他们接过来都能使美观度+1. 如果我们接2211，那么得到1112211，美观度就会是5.如果只接11，那么得到11111，美观度是5. 这样二者都最优。</p><p>然而如果序列是1112233，如果我们只接33，得到11133，美观度就只有4了，此时得到1112233依然是5.</p><p>考虑更一般的情况。如果我们把最近的可以增加美观度的数字拼接了得到$str_1$，或者不拼接最近的，而是次近的得到$str_2$，那么$str1$和$str2$的美观度至少相等. 此时$str1$后面剩下的数字更多，我们有更多选择，因此选择$str1$总是优于$str2$的.</p><p>那么实现思路就是维护一个数字表示当前已生成的答案序列的最后一个的下标.然后遍历，依次把符合条件的接上来，复杂度$O(n)$.</p><p><strong>代码（贪心）</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="keyword">int</span> last[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//贪心</span></span><br><span class="line">    <span class="built_in">memset</span>(pre, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(pre));</span><br><span class="line">    <span class="built_in">memset</span>(last, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(last));</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        pre[i] = last[a[i]];</span><br><span class="line">        last[a[i]] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> now = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(pre[i] != inf &amp;&amp; now &lt;= pre[i])&#123;</span><br><span class="line">            now = i;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="J-加法和乘法"><a href="#J-加法和乘法" class="headerlink" title="J - 加法和乘法"></a>J - 加法和乘法</h2><h2 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h2><p>有一天牛牛和牛妹在做游戏，规则如下：<br> 桌面上摆着$n$张纸牌，每张纸牌上写着一个正整数，由牛牛先手轮流执行以下操作：<br> 1.如果桌面上只剩一张纸牌，游戏结束，这张纸牌上的数字如果是奇数则牛牛胜利，反之牛妹胜利。<br> 2.当前行动玩家选择两张纸牌，设上面的数字分别为X,Y\mathit X,YX,Y，接下来玩家从加法和乘法中选择一个并应用到这两个数字上，得到结果为Z\mathit ZZ，接下来将选择的两张纸牌丢弃，并拿一张新的纸牌放到桌面上，在上面写上Z\mathit ZZ。<br> 假设双方均以最优策略行动，最后谁会赢？</p><h2 id="输入描述-5"><a href="#输入描述-5" class="headerlink" title="输入描述:"></a>输入描述:</h2><blockquote><p>第一行一个正整数n，代表开始的纸牌数。<br>第二行n个空格分隔的正整数a[i]代表开始纸牌上的数字。<br>$1\leq n \leq 10^{6}$<br>$1\leq a_{i} \leq 10^{9}$</p></blockquote><h2 id="输出描述-5"><a href="#输出描述-5" class="headerlink" title="输出描述:"></a>输出描述:</h2><blockquote><p> 如果牛牛能赢，输出NiuNiu，否则输出NiuMei。</p></blockquote><p>示例1</p><h2 id="输入-7"><a href="#输入-7" class="headerlink" title="输入"></a>输入</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">233 2333 23333</span><br></pre></td></tr></table></figure><h2 id="输出-7"><a href="#输出-7" class="headerlink" title="输出"></a>输出</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NiuMei</span><br></pre></td></tr></table></figure><p>示例2</p><h2 id="输入-8"><a href="#输入-8" class="headerlink" title="输入"></a>输入</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 1 1 1</span><br></pre></td></tr></table></figure><h2 id="输出-8"><a href="#输出-8" class="headerlink" title="输出"></a>输出</h2><p><a href="javascript:void(0">复制</a>;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NiuNiu</span><br></pre></td></tr></table></figure><p><strong>分析</strong></p><p>比较简单的博弈论。</p><p>首先把奇数偶数之间各种加减得到的数的奇偶性都想好，然后再开始讨论。</p><p>首先发现：牛牛最优的做法也只是通过（奇+偶=奇）来减少一个偶数，而无法减少2个偶数，也无法使奇数增加。反观牛妹，只要场上还有奇数牌，她就可以减少1个甚至两个奇数牌，而且还能生成一个偶数。由此看来，当牛妹的偶数牌只有一张时，牛牛只需要一次（奇+偶=奇）就能赢下比赛。</p><p>反之若牛妹的偶数牌多于一张：</p><p>只要牛牛的奇数多于一张，那么牛妹就可以通过减少2张奇数牌来生成一个偶数牌，牛牛只能减少一个偶数，永远无法跟上牛妹的速度！而当牛牛的奇数只有一张时，牛妹只需要一次合成就赢下比赛了。</p><p>综上，若偶数牌&gt;1，牛妹必胜，若偶数牌=1，牛牛必胜。</p><p>再看偶数牌=0的情况。</p><p>若奇数牌的个数是奇数个，那么只要不为1，牛妹必胜。这是因为每当到了牛牛的回合时，他会把奇数个牌变成奇数-1个牌，也就是偶数个牌；而最后只剩下2张牌时就一定是牛妹的回合，这时牛妹不管这两张牌是什么，她总能得到偶数。</p><p>而若奇数牌的个数是偶数个，那么最后一个回合一定是牛牛的，而且由于牛妹每次最多也只生成一个偶数牌，牛牛肯定能把这个偶数牌卸下来，故最后不可能是全偶。剩下的两张牌一定有奇数。只要有奇数，那么牛牛就可以得到奇数了，也就是牛牛赢。</p><p>综上，当偶数牌&gt;1时，牛妹赢；当偶数牌=1时，牛牛赢；当偶数牌=0且奇数牌有大于1的奇数个时，牛妹赢；当偶数牌=0且奇数牌个数为1或奇数牌为偶数个时牛牛赢。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    ll x;</span><br><span class="line">    <span class="keyword">int</span> odd = <span class="number">0</span>, even = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;x);</span><br><span class="line">        <span class="keyword">if</span>(x % <span class="number">2</span> == <span class="number">0</span>) even++;</span><br><span class="line">        <span class="keyword">else</span> odd++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(odd == <span class="number">0</span>)&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;NiuMei&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(even == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(odd == <span class="number">1</span>) cout &lt;&lt; <span class="string">&quot;NiuNiu&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(odd % <span class="number">2</span> == <span class="number">0</span>) cout &lt;&lt; <span class="string">&quot;NiuNiu&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NiuMei&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(even &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;NiuMei&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NiuNiu&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;链接：&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/9983&quot;&gt;https://ac.nowcoder.com/acm/contest/9983&lt;/a&gt;&lt;br&gt;来源：牛客网&lt;/p&gt;
&lt;p&gt;开学后才补的题解……寒假时懒得补，做专题/</summary>
      
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="线段树" scheme="https://eykenis.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
    <category term="DP" scheme="https://eykenis.github.io/tags/DP/"/>
    
    <category term="思维" scheme="https://eykenis.github.io/tags/%E6%80%9D%E7%BB%B4/"/>
    
    <category term="贪心" scheme="https://eykenis.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
    <category term="博弈论" scheme="https://eykenis.github.io/tags/%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
    
    <category term="并查集" scheme="https://eykenis.github.io/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Global Round 13</title>
    <link href="https://eykenis.github.io/2021/03/02/Codeforces-Global-Round-13/"/>
    <id>https://eykenis.github.io/2021/03/02/Codeforces-Global-Round-13/</id>
    <published>2021-03-02T08:56:30.000Z</published>
    <updated>2021-07-11T12:15:49.935Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Codeforces-Global-Round-13"><a href="#Codeforces-Global-Round-13" class="headerlink" title="Codeforces Global Round 13"></a>Codeforces Global Round 13</h1><p>链接：<a href="https://codeforces.ml/contest/1491">https://codeforces.ml/contest/1491</a></p><h2 id="A-K-th-Largest-Value"><a href="#A-K-th-Largest-Value" class="headerlink" title="A. K-th Largest Value"></a>A. K-th Largest Value</h2><p><strong>分析</strong></p><p>直接模拟签完到，然后wa了一发（</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> n, q;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; q;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line"> cin &gt;&gt; a[i];</span><br><span class="line"> <span class="keyword">if</span>(a[i] == <span class="number">1</span>) cnt++;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">while</span>(q--)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="keyword">int</span> as, b;</span><br><span class="line"> cin &gt;&gt; as &gt;&gt; b;</span><br><span class="line"> <span class="keyword">if</span>(as == <span class="number">1</span>)&#123;</span><br><span class="line"> <span class="keyword">if</span>(a[b - <span class="number">1</span>] == <span class="number">1</span>)&#123;</span><br><span class="line"> a[b - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"> cnt--;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span>&#123;</span><br><span class="line"> a[b - <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"> cnt++;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cnt &gt;= b)&#123;</span><br><span class="line">cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Minimal-Cost（思维）"><a href="#B-Minimal-Cost（思维）" class="headerlink" title="B. Minimal Cost（思维）"></a>B. Minimal Cost（思维）</h2><p><img src="https://subdomains.codeforces.ml/espresso/7bd48e1a2fed32ee9a57b3c0fbdcd3055d213551.png" alt="img"></p><p><strong>题意</strong></p><p>给一个n行10^6^+1列的矩阵迷宫，初始点在$(1,0)$，目标在$(n,10^6+1)$.其中行从1开始计数，列从0开始计数。</p><p>其中，每一行将被设置一个障碍，这个障碍可以被移动。其中横向移动花费v，纵向移动花费u.</p><p>你要做的是花费最少的代价，使得初始点和目标连通。</p><p><strong>分析</strong></p><p>其实只需要考虑三种情况：</p><ol><li>所有的障碍在同一列。由于列数很大，这里要么是将其中一个障碍进行两次横向移动，要么是将其进行一次横向移动和一次纵向移动。取最小值即可。</li><li>存在障碍处于对角位置（如上示意图）但没有空缺。此时只需要将一个障碍移动一次即可。横纵皆可。</li><li>本身就有空缺，即相邻行的障碍出现横向距离大于1的情况。这个时候不需要移动障碍，直接就可以到达目标。</li></ol><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">105</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">ll n, u, v;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; u &gt;&gt; v;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">abs</span>(a[i] - a[i - <span class="number">1</span>]) == <span class="number">1</span>) flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">abs</span>(a[i] - a[i - <span class="number">1</span>]) &gt; <span class="number">1</span>)&#123;</span><br><span class="line">flag = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag == <span class="number">1</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="built_in">min</span>(u, v) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">0</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="built_in">min</span>(<span class="number">2</span> * v, u + v) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="C-Pekora-and-Trampoline（贪心）"><a href="#C-Pekora-and-Trampoline（贪心）" class="headerlink" title="C.Pekora and Trampoline（贪心）"></a>C.Pekora and Trampoline（贪心）</h2><p><strong>题意</strong></p><p>现在从位置1~n放着n个蹦床，每个蹦床有弹跳力$S_i$.Pekora选择其中一个蹦床$i$开始弹跳.每弹上一个蹦床，他就会跳到$S_i+i$的位置，且此时$i$的弹跳力变为$max\{1, S_i-1\}$.每次跳到大于n的地方后，Pekora结束一轮弹跳。问至少需要几轮弹跳可以让所有蹦床的弹跳力都变为1？</p><p><strong>分析</strong></p><p>一步步贪心。首先，考虑选前面的还是后面的蹦床起跳。如果选后面的，那么就算后面的都变为1了，前面的也还要补；反之选前面的起跳，前面的变为1了，后面的可能需要补，也可能就直接踩到1了。因此，我们用最贪心的策略，选择永远从蹦床1起跳。</p><p>然后，由于蹦床弹跳力变为1后，我们再跳它就对它的弹跳力不影响了。因此我们可以把从1开始优化到从第一个弹跳力不为0的蹦床开始。</p><p>接着，我们要考虑弹跳的情况。我们可以这样在线更新：</p><p>如果某点$i$此时弹跳力为$x$,大于1，那么从它开始还要跳$x-1$次，这几次的下一个蹦床将覆盖$[i+2,max\{n,i+x\}]$，那么就要求答案加上$x-1$.</p><p>反之，如果某点$i$在经历前面的弹跳后，不需要继续跳了，那么我们可以让它的下一个蹦床继承下来这多余的几次弹跳，看看这几次弹跳是否能对接下来的蹦床起作用。</p><p>实现上，我们可以维护一个数组表示从前面出发到这里弹跳了几次。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5000</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll a[maxn];</span><br><span class="line">ll cnt[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(cnt, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(cnt));</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i];</span><br><span class="line"><span class="comment">//贪心：从1起跳</span></span><br><span class="line">ll ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] - <span class="number">1</span> &gt; cnt[i]) ans += a[i] - <span class="number">1</span> - cnt[i];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a[i] - <span class="number">1</span> &lt; cnt[i]) cnt[i + <span class="number">1</span>] += cnt[i] - a[i] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">2</span>; j &lt;= <span class="built_in">min</span>(a[i] + i, <span class="built_in">ll</span>(n)); ++j)&#123;</span><br><span class="line">cnt[j]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-Zookeeper-and-The-Infinite-Zoo（位运算）"><a href="#D-Zookeeper-and-The-Infinite-Zoo（位运算）" class="headerlink" title="D. Zookeeper and The Infinite Zoo（位运算）"></a>D. Zookeeper and The Infinite Zoo（位运算）</h2><p><strong>分析</strong></p><p>考虑条件$u\&amp;v=v$，也就是说，二进制表示下，$v$中的所有出现1的位置都必须在$u$中也为1.</p><p>此时，考虑$u+v$，由于只发生1+1,0+0，故1的个数不会增多，而且不会有1左移。</p><p>因此我们可以简化判定：</p><ol><li><p>如果u&lt;v，不可能（v中一定有二进制的1与u中的对不上）</p></li><li><p>如果u&gt;=v，就必须保证：</p><p> （1）对二者二进制表示的所有位，从最低位开始的前$i$位，一定有$u$的1个数&gt;$v$的1个数，其中$1≤i≤$最大位数.</p><p> （2）u最低位的1一定不能比v的最低位的1还低。</p></li></ol><p>例1：对于1,4，二进制表示分别为001,100，从前1位到前3位，1的二进制中1的个数分别为1,1,1.而对于4，这个数据是0,0,1.满足2.(1).且v=1的最低位1是第一位，u=4的最低位1是第三位，3&gt;1，符合2.(2).</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">3</span>;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> q;</span><br><span class="line">cin &gt;&gt; q;</span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="comment">//维护1个数的前缀和</span></span><br><span class="line"><span class="keyword">int</span> x[<span class="number">31</span>], y[<span class="number">31</span>];</span><br><span class="line">        <span class="comment">//----------------------------------</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">30</span>; ++i)&#123;</span><br><span class="line">x[i] = a &gt;&gt; i &amp; <span class="number">1</span>;</span><br><span class="line">y[i] = b &gt;&gt; i &amp; <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">//------------------------------------</span></span><br><span class="line">        <span class="comment">//此段是看他人题解中发现的一种计算二进制1个数的方法，比我求二进制串再一个个数快多了呀！</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">30</span>; ++i)&#123;</span><br><span class="line">x[i] += x[i - <span class="number">1</span>];</span><br><span class="line">y[i] += y[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(b == <span class="number">2</span> * a)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a == b)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a &gt; b)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">30</span>; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(x[i] &lt; y[i])&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Codeforces-Global-Round-13&quot;&gt;&lt;a href=&quot;#Codeforces-Global-Round-13&quot; class=&quot;headerlink&quot; title=&quot;Codeforces Global Round 13&quot;&gt;&lt;/a&gt;Codeforc</summary>
      
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="位运算" scheme="https://eykenis.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
    <category term="模拟" scheme="https://eykenis.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
    <category term="贪心" scheme="https://eykenis.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>是时候</title>
    <link href="https://eykenis.github.io/2021/02/28/%E6%98%AF%E6%97%B6%E5%80%99/"/>
    <id>https://eykenis.github.io/2021/02/28/%E6%98%AF%E6%97%B6%E5%80%99/</id>
    <published>2021-02-28T11:58:23.000Z</published>
    <updated>2021-07-11T12:13:59.158Z</updated>
    
    <content type="html"><![CDATA[<p>不久前拜访了同在校队的一名队员的个人空间，感受颇多。<br>感觉他对生活的记录总是那么的轻快美好。明明从他记录的故事看来，也有那么多的不快与纠结。可是在他的笔下，见不到悲伤和泄气。或许是我已经习惯了这样的思维吧。他的生活中也有沮丧，也是一个普通地不能再普通的人，也有喜怒哀乐，也会更喜欢做自己舒服的事。但他的字里行间，总是流露着一种原始的执着，一种纯洁的信念。<br>感觉自己有些方面又和他好像。朋友不多，人菜（或许我更菜），也有很多仰慕的dalao，也有一个梦想，也会自控力差，也会颓废。<br>可是他是那样一个充满着正能量的人，他是那样地积极向上啊。他对自我的总结光是写在外面的就让我感觉深刻，比我那些或多或少只是在感性地抒发情感的想法要厉害多了。<br>我，或许是该好好学一学，学习去把丢掉的初心捡起来。看着他对自己的询问，就像看见那个在一中夜晚抱头痛哭的自己。只不过，他应该是笑着的。<br>我或许该深刻地去内省，去认识自己的问题。我想要和这个世界连接起来。<br>真的很羡慕他这种人，但是不会想成为他，我还是得做我自己。我得去认认真真，好好思考自己，怎么样，才真的是让自己更好了，才真的是摆脱了过去那种既惧怕孤独又惧怕交流的状态。我觉得，我应该做点实事，我应该像他一样，去寻找生活中的小确幸。</p><p>总结就是：把注意力真正地放到自己身上和爱自己的人身上吧。嗯。</p><p>我真的想要努力去做一个成熟 但没有失去童心的人，一定要越来越好。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;不久前拜访了同在校队的一名队员的个人空间，感受颇多。&lt;br&gt;感觉他对生活的记录总是那么的轻快美好。明明从他记录的故事看来，也有那么多的不快与纠结。可是在他的笔下，见不到悲伤和泄气。或许是我已经习惯了这样的思维吧。他的生活中也有沮丧，也是一个普通地不能再普通的人，也有喜怒哀乐</summary>
      
    
    
    
    <category term="牢骚" scheme="https://eykenis.github.io/categories/%E7%89%A2%E9%AA%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>意难平</title>
    <link href="https://eykenis.github.io/2021/02/28/%E6%84%8F%E9%9A%BE%E5%B9%B3/"/>
    <id>https://eykenis.github.io/2021/02/28/%E6%84%8F%E9%9A%BE%E5%B9%B3/</id>
    <published>2021-02-28T03:48:42.000Z</published>
    <updated>2021-07-11T12:10:30.183Z</updated>
    
    <content type="html"><![CDATA[<p>不知道什么时候开始，已经没有办法好好感受生活中的美好。</p><p>当时，看着教学楼外清亮的天空，闻着雨后空气的淡香，就会把这一切的美好都与她联系起来。<br>仅仅只是这样就好了吧。<br>当时，在日记的每一页写下关于她的话。<br>当时，因为草稿纸上写着她的名字那页不小心翻向外面而惊慌失措。<br>当时，期待着每次走廊相遇时的四目相对，和她轻声的两个字。<br>其实，当时只有我一个人每天兴冲冲地感受这些吧。<br>其实我也知道，其实我早就知道了。但就是喜欢欺骗自己。<br>算了，欺骗就欺骗吧。<br>你不知道8号那天小雨中我既胆怯找你又害怕你回家，你不知道我，因为害怕，欣喜，失落，总想紧紧攥住自己粘接的那三张纸，却又害怕揉皱了它。<br>虽然最后还是因为被雨水打湿而发皱了吧。<br>虽然，以上这些你后来都知道了。<br>可是我不知道后来那天你是如何的心情，或许你是有一点被打动了吧，或许。<br>你说，“我们可以试试吗。”<br>你说，“未来多了一个我，想要尝试靠近我。”<br>你说，“习惯现在的相处方式，不用我担心。”<br>可是？你为什么要这样说。如果那天收到了我的心意，你知道你实在是对我没有感觉，那你直接说出来就好了。或者你不曾回复我，让你一直消失在我的生活中，让我好好地跟高中生涯告别，也不是这样。<br>时候有些埋怨，甚至有些愤恨。埋怨你为什么要回过头来找我。嗯，我只能承认，我不是什么伟大的人，什么也不会。我确实是一个自私的人，我只知道喜欢你，就像看到鲜花，只知道摘回去自己欣赏，而不会在路边为它浇水，看它茁壮成长。我对你的喜欢大抵只止于此，总之不可能是爱啊，爱情是什么我自己也没有弄清楚。然而因为你片刻极微小的回应，我好像就再也逃离不了了。本来我是已经做好了离开的准备的。但是我当时也清楚，只要你哪怕有那么一点点的表示，我也愿意把自己的全部都给你，尽管如此，我也得说，我不懂怎么去让别人感受到我的喜欢，不懂得怎么去把自己展现出来。我傻傻地看着你走进来，无动于衷，又傻傻地看着你远去，无动于衷。<br>喜欢越沉重，就越像一块沉重的石头压得人喘不过气。到这个时候，可能按有些人的话说，爱情是让人越来越开心越来越进步的，像我这样的，注定不是爱情。<br>而思念会像一块布，缠绕着思念人的人，或许是岁岁年年，或许，明天它就溶解了。<br>我想你应该知道，那个时候，我的世界里所有的东西都是粉色的，都是美好的。<br>但是我不知道你为什么会在那时感到悲伤。<br>但是我不知道你为什么会在那时彷徨迷茫。<br>因为这个状态下，我所有的感情，只有安心和希望，好像不能感受到你的烦闷。<br>我不知道，你的世界终究是把我挡在外面。<br>不过我还是相信，有那么一个瞬间，你的心里确确实实是有我这个男孩子的。只不过因为你不了解我，把我的一切都稍稍美化了罢。<br>只是一段时间之后，你发现可能不是那样的呢。所以说，那个男孩子，只是冠了我这个名号。你发现他和我不一样之后，你就再也坐不住了。<br>他没有你想的那样善解人意，没有你想的胆大心细。<br>他没有你想的那样好，你们的相处也不是那样让你舒服。</p><p>不过我什么也不懂，我只知道把自己的心意全部奉上来，毫无保留。虽然，没有表示，没有话语，但是我渴望并践行着那种，无条件的感情。因为我想让你安心，也想你让我感到安心。只要安心地知道你不会离开，其他的我都愿意慢慢继续。我惧怕背叛，惧怕突然的反尔。<br>当你发出肯定时，我是真的把自己的一切感情都交出来了，然后又尽数沉没。</p><p>我可能很长一段时间再也不会有这种安心的感觉了。但是又能怪谁啊，只是自己，自己的心从来不做任何保护措施，毫无理由地随意抛出。才导致它受了太大的伤吧。</p><p>恍然发现，身边好多人都已经放下了过去，活在自己的当下，总感觉一直把她留在心里的我就像个傻子一样。对他人不好，对自己也不好。</p><p>我好像没法告别我的青春。我会不会永远就这样停留在那段时光。很多时候我好像没法发现当下，活在当下。</p><p>当下对我来说，有时候充满希望，有时候又让人感觉万分无力。做什么都没有用。</p><p>我真的好想好想再坐在你前面，听你讲教室之外的趣事，认真准备要跟你讨论的题目，和你再相视而笑。</p><p>一次不够，两次不够，让我永远住在那里。</p><p>我多想把你的笑容永远留住。</p><p>但是我，真的好无力。什么也做不到。没法让你喜欢我，没法好好生活，没法好好学习，没法天天向上。没法让家人看见我最好的一面。总是让他们在操心。</p><p>我在逃避。</p><p>有时候真的好绝望。以前从不会这样子，后来却变得爱哭。</p><p>可是还是得活下来，还是得望着你远去，还是得长大，还是得告别穿着红黑校服的你，还是得好好学习生活，还是得早点找个工作早点回报本就不富裕的家。</p><p>我真的蛮愧对我的母亲。我也不应该让她失望。</p><p>我也是有梦想的，我也想过要去创造点什么。我想做一个中国现在还做不出来的游戏，我想做到中国能做其他国家做不出来的游戏。</p><p>哈哈，多么狂妄自大，一如我以为你会留下。</p><p>唉，不是哪怕再见你一次就好，是再见你多少次，都不够。</p><p>我从不希望你是我的白月光。只希望我，在你身边，哪怕最后只是彼此的一粒饭粘子，我依旧把你放在最好的地方，也会努力让你感受温暖。</p><p>万一，若干年后我们还能相见，再说说话呢。</p><p>“世界上一定有一个愿意接近你并超级理解你的人，十年不出现，五十年也会出现；这辈子不出现，下辈子也会出现。”</p><p>有时候很想快点到下辈子，不知道自己还有什么留念。</p><p>哈哈，当然不是这样的吧，我会成为一个理智的人的。</p><p>我啊，还是太无知，不知道有人爱着自己。不知道学着去回报那些本就无条件地爱着自己的人。</p>]]></content>
    
    
    <summary type="html">啊……</summary>
    
    
    
    <category term="牢骚" scheme="https://eykenis.github.io/categories/%E7%89%A2%E9%AA%9A/"/>
    
    
  </entry>
  
</feed>
