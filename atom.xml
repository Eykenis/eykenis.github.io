<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ekke の Space</title>
  <icon>https://www.gravatar.com/avatar/b74e4d6380810c10e04719b2f9079a61</icon>
  
  <link href="https://eykenis.github.io/atom.xml" rel="self"/>
  
  <link href="https://eykenis.github.io/"/>
  <updated>2021-12-27T04:30:17.617Z</updated>
  <id>https://eykenis.github.io/</id>
  
  <author>
    <name>Ekennis</name>
    <email>ekennis@outlook.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《Earth OL 2022》成就列表</title>
    <link href="https://eykenis.github.io/2021/12/26/%E3%80%8AEarth-OL-2022%E3%80%8B%E6%88%90%E5%B0%B1%E5%88%97%E8%A1%A8/"/>
    <id>https://eykenis.github.io/2021/12/26/%E3%80%8AEarth-OL-2022%E3%80%8B%E6%88%90%E5%B0%B1%E5%88%97%E8%A1%A8/</id>
    <published>2021-12-26T14:37:07.000Z</published>
    <updated>2021-12-27T04:30:17.617Z</updated>
    
    <content type="html"><![CDATA[<p>&lt;!doctype html&gt;</p><html><head><meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'></style><title></title></head><body class='typora-export os-windows'><div class='typora-export-content'><div id='write'  class=''><ol><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Lecteur en Ruine: Listen closing music of the library</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>New Reader: Read 1 paper book</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Reader, Again: Read 2 paper book</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Reading Expert: Read 4 paper book</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Allegiant Reader: Read 8 paper book</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Readmaster: Read 16 paper book</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Oh you finally Get Started!: Running in the playground in evening</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Runner: Keep running in a week</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Excellent Runner: Keep running in a month</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Gotcha!: End your Spring Term with a GPA higher than 3.6</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Candidate Master: Reach candidate master on Codeforces</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Fast CM: Reach candidate master on Codeforces before the HUCPC</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>YELLOW!: Reach master on Codeforces</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Oops!: Reach master before ICPC 47th</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Game Developing Pathfinder: Release your first demo using Unity Engine</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Advanced Computer Graphics </span><del><span>(ACG)</span></del><span>: Finish the GAMES101, GAMES 102, GAMES 201, GAMES 202 Course and all of their assignments</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>A Real Luoguer: Reach Redname on the Luogu platform</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>A Perfect Press </span><del><span>(APP)</span></del><span>: Got the maximum grade point in a course</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Hi, English Speaking: Pass ILETS (get 6.5 or higher)</span></strong></p></li></ul></li><li><ul><li class='md-task-list-item task-list-item task-list-not-done' ><input type='checkbox' /><p><strong><span>Recoder: Keep diary everyday</span></strong></p></li></ul></li></ol><p><span>Wating for updates...</span></p></div></div></body></html>]]></content>
    
    
    <summary type="html">· Achivements</summary>
    
    
    
    <category term="其他" scheme="https://eykenis.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>坠入海底</title>
    <link href="https://eykenis.github.io/2021/12/22/%E5%9D%A0%E5%85%A5%E6%B5%B7%E5%BA%95/"/>
    <id>https://eykenis.github.io/2021/12/22/%E5%9D%A0%E5%85%A5%E6%B5%B7%E5%BA%95/</id>
    <published>2021-12-22T09:19:17.000Z</published>
    <updated>2021-12-22T08:30:48.852Z</updated>
    
    <content type="html"><![CDATA[<p>先把话说好，这篇文章可能会有很多负能量，看我写出来什么样吧。</p><p>上大学之前，我对大学生活的想象是什么样的？</p><p>当时，我很珍视我的高中生活，我珍视每一天。在我们一中这个小地方学习是一件很快乐的事，虽然也很辛苦。同时我也憧憬大学生活。我觉得这样一个一直一直都在不起眼的小县城里生活了这么久的我，要去一个省会城市长期生活，是一件难以想象的事，也是一件令人兴奋的事。我会告别我的家人。本来就是月假式的高中，让一个月一次回家变成一个学期一到两次回家。我会不会想家？我会不会习惯这个未知的大学生活？我这样一个社恐，在看上去需要特别多人际交流的大学里，会不会遇到很多困难？我知道困难肯定是会有的，我也肯定会尝试着去克服。我希望交新朋友，身边肯定会有许许多多有趣的人。作为985大学，课程想必会很生动有趣，具有启发意义吧。毕竟因为地域原因，这么多年来，我都是在小城市里接受着小规模学校的小班式教育。<strong>我急切想要知道，大城市里先进的教育理念是什么样子的，它又会将我带向何种引人入胜的知识殿堂</strong>。</p><p>当我在二十平米的小屋里，打开手机又一次查看录取通知时，欣喜地发现录取状态从“已投档”变为“已录取”。止不住的喜悦迸发出来，差点在椅子上哭出来。我又开始回忆。高考前一周，我感冒发烧，脑袋犯浑。而且高考时不烧了但还是咳嗽，考场上一边高速思考还要一边忍住咳嗽，生怕自己影响他人。考完后，我去我的床位揭掉了贴在墙上的手写“浙江大学”“武汉大学”便利贴，留了一套自己认为考得不错，而且题目质量也很高的理综套题在抽屉里留给学弟们<del>寻宝</del>参考（虽然下一届不考理综了）。嘛，好像这一些都无所谓了，全都释然了，就算考的不是特别理想也无所谓。尽管离自己最高的目标ZJU差了四十来分，尽管只要不犯那几个重大失误完完全全可以考上WHU/HUST，但我还是欣然接受了。我非常高兴。毕竟还是个985嘛，虽然是末流B的。毕竟人生总有缺憾嘛，都说求上而得中，这或许就是得中吧。我相信未来的生活仍然是充满希望的。</p><p>然而在上大学之前，我也总是很担心。我担心我这个几乎可以说是乡下来的土包子没法融入群体，我担心我这么个小个子不会去了大学特别“突出”吧QAQ，我担心许许多多大城市来的同学们在各个方面上对我都是降维打击，担心自己跟不上新的学习进度。（所以我早早地买了一本C++ Primer，然后请它吃了一暑假的灰QAQ）</p><p>然而事实证明我的担心不全对，对了一半。事实上大多数同学的见识其实也和我差不多，其实在这个网络的时代，我们并没有那么大的差距。当然也不乏能够“降维打击”我的同学，在他们眼里我真的是蒟蒻、小白，啥都不会，即使到现在也是，专业知识远远地被甩在后面（不过，我现在相信这些都是可以追赶的，只要我不再摆烂 ^ ^ 又开摆是吧）。</p><p>然后？然后就没有然后了。然后，学校就花了一年的时间，彻彻底底打破了我的幻想，又逼迫着我慢慢重建新的认知并朝之努力。重建的时间可能就是现在吧，比较晚了。</p><p>GitBook《<a href="[README - SurviveSJTUManual (gitbook.io">交大生存手册</a>](<a href="https://survivesjtu.gitbook.io/survivesjtumanual/))》开篇就说：">https://survivesjtu.gitbook.io/survivesjtumanual/))》开篇就说：</a></p><blockquote><p>各位同学们，在本书的开始，我不得不遗憾地告诉大家一个消息。<strong>国内绝大部分大学的本科教学，不是濒临崩溃，而是早已崩溃。</strong>在此，我无意争论是否复旦、中科大、或者清华、北大是否比我们崩溃的更少一些——这种争论是没有意义的。我只是看到了无数充满求知欲、激情、与年轻梦想的同学们，将要把自己的四年青春，充满希望与信任地交给大学来塑造。这使我心中非常不安。</p></blockquote><p>大一一年我逐渐地就是从充满希望到产生疑问，再到不解。直到不久前看到这本电子书 <em>SurviveSJTUManual</em>, 并产生了强烈共鸣后，我才知道，原来认为这一切本不该如此的人远远不止我一个。</p><p><strong>为什么会这样？</strong></p><p>说说到底发生了什么。</p><h3 id="我看到的CSEE专业是什么样子"><a href="#我看到的CSEE专业是什么样子" class="headerlink" title="我看到的CSEE专业是什么样子"></a>我看到的CSEE专业是什么样子</h3><hr><h4 id="Part-1-学校课程"><a href="#Part-1-学校课程" class="headerlink" title="Part 1. 学校课程"></a>Part 1. 学校课程</h4><p>初见大学课堂，我是对老师们怀着非常高的敬畏之心的，毕竟据说都是教授/副教授起步。高数（1）是一门理想的课程，老师讲的很好，也非常有亲和力，所学的知识也很合适。不过还是我自己的原因吧，学的并不是特别认真，两次机考的成绩都不太高，好像是85/75，期末考了60多。然而那次高数期末好像比较难，一个考场就没有几个人及格，所以我的成绩竟然也可以算得上偏上。到这里，大学给我的第一个不正常的反馈就来了。原来我不用这么努力，只是平时随便听听，考前突击也能取得较好的名次？或许大多数人真的没有那么努力。线代也是一样，基本靠网课+整天刷题的突击，效果也还算好。当然，这两门课都挺正常的。除此之外的另一门核心课程序设计（也就是C/C++入门教学），感觉老师讲的过细了，很多地方都过于手把手，不给我们自己探索，而且老师讲的也很慢很浅，很多东西虽然讲的多但是实在不怎么深，依靠自己还算勤奋的日常 coding，差不多到十月中旬就已经把整个学期讲的东西学的差不多了（除了文件IO操作）。好在课程的考核安排的较为合理，有课内OJ，多为上机考试，也穿插一些小项目，和期末大项目，比较有实践性。总结大一上：还算可以，没有什么太大的意见。</p><p>接着就是大一下，我终于能好好地听期待已久的数据结构课了——这当然是计算机基础中的重中之重。然而这门课，老师讲的过于不够深入。有多不深入呢？背包问题甚至对于 $O(2^n)$ 的暴力枚举大讲特讲，而对于 $O(n^2)$ 的动规算法只是半节课敷衍地过了一下，滚动数组更是只字未提。要不是提前有了解就被老师忽悠过去了。我寻思这东西不应该讲 DFS 的时候就给提完吗？这个算法讲得有点过分敷衍了。当然这只是一个例子，还有很多我真的真的，接受不了的内容。真的觉得这门课在求知上是敷衍人。不仅如此，数据结构的所谓小班讨论，就是上网搜资料，做PPT。拜托，抄网上内容，做出个PPT就能把高级数据结构学会？也不是不可以，就是这考核方式有点过于逆天了，看你 PPT 做得好不好，而不管你到底掌握的如何。同理还有 Word 文档，还有更多本该更深入的作业也在使用 PPT、Word 进行考核，直到现在都是，我相信未来还会有，我很失望，很失望。我觉得这是在亵渎我特别敬畏的计算机知识，尽管亵渎这个词不好听。不仅如此，期中期末的笔试题，比较各个容器优缺点，一个大题；写出AVL左旋右旋旋转过程，一个大题。差不多得了……另一门核心课，离散数学，我也知道老师为人师表，甘为人梯，是带着一腔热血和自信去教书的。但还是要冒昧地吐槽一下，老师您编写的教材质量实在太烂了…… 很多时候我不理解，为什么不按照业界统一的标准去编写教材？为什么不把各种定义写得更清楚明白一点，而要自作主张按照所谓例题去直接讲解知识点，还觉得自己“自成体系”？关键是这例题还出的不怎么样。一学期下来我只学会了做题，而且只会做这本教材的题，对什么概念都特模糊，都是一知半解。我的离散数学仍然没有入门，教材烂，我学的也烂。关键主编教材的老师还自我感觉良好，唉。所以说，这两门最重要的核心基础课程，全让我们奔着应试去了，几乎没有学到什么真家伙。</p><p>再到这学期，延续一年的所谓大学物理，我真的不想再多说了…… 电子电路课，对于所谓模拟电路，我不理解；对于所谓电子平台测试，我不理解。我不知道你教我们这些要深不深，要简单不简单的东西有什么用。有的老师用所谓“中国硬件行业缺人才”来当做借口让我们认真焊板子，接电路。可是你浪费那么多个上午中午去接电路焊板子，无非就是又一次复习了一次示波器的使用方法，无非就是又浪费了宝贵的课外时间去干那格式分高的一批的课程报告。等我们卷完、摆完之后呢？我们国家的硬件能力不会有任何提高，中国芯片不会有任何技术上的进步。美其名曰“基础”。给所有工科生不分门类全部加上一些自认为的学门核心课，以为给软件学大物这种操作就能打造所谓“复合型人才”……笑死，根本入不了门，还浪费时间。</p><p>我们的学习范围太宽太宽了，每一样都不好学，每一样学成了也是特别特别浅，关键是电子测试平台的老师，根本就不打算教会你。具体的也不想再说……很累。不过电子电路理论课的老师是个非常负责，非常热爱教书的老师。虽然模电我真的不配……数电课程算是我对于学校本科教育权威性认识的慰藉了，是好课，我也想学好。不说了，总结下来，本科的课程就是麻中麻，开始还好，后来越来越麻，中间可能遇到好老师能点通一下自己，以至于让自己的自学道路没有那么艰难……无意义的课程，教的一言难尽的课程，无限地消磨着我的意志，打击着我的积极性。</p><blockquote><p>就算你把课本上的内容搞得再烂熟，绝不代表你真正对这门课能有什么理解（相反，那些真正理解的人，却不一定能针对考点答出高分）。请务必牢记：大学四年留给你的是你的人生，在你毕业之时，那一串苍白的分数其实就已经作废了。</p><p>​                                    ——还是 <em>SuriviveSJTUManual</em></p></blockquote><p>大学大学，大不了自己学。把时间花在自己心悦诚服的事情上，献给自己对科学文化知识的渴望，其意义本就远大于“上课”。自学当然会苦于没有真的能够满足自己求知欲的课程，没有人指导，导致自己可能在自学时走很多弯路。好在当下这些苦难都减轻了很多——我们可以上网自己找网课不是吗。</p><p>以上，对事不对人。我知道老师们都没有恶意，也都十分辛苦，我仍然是敬佩他们的，不过不会喜爱他们。这不是他们的问题，这是教育体制的问题。学校水平，考核只看科研等指标，对于课堂，只看你学生报告写的好不好，PPT 做得漂不漂亮，格式合不合要求。至于学生上课听了什么，老师讲了什么？没有人在意。除了部分老师和部分学生自己，没有人在意学生的脑子里真的听进去了什么。对于老师来说，不仅教学没有科研有实际用处，而且为难学生只会让老师事情更多。这或许是导致许多本该讲的深入的课程异常简单甚至敷衍的重要原因吧。</p><blockquote><h4 id="写在中间"><a href="#写在中间" class="headerlink" title="写在中间"></a>写在中间</h4><p>我觉得我们真的应该多独立思考，多花时间去回过头来思考，这绝对不是浪费时间，绝对算不上内耗。相反，如果只是为了ddl、绩点而疲于奔命，那么我们真的就是在被这不合理的制度牵着鼻子走，逐步成为国内教育流水线的牺牲品……</p></blockquote><h4 id="Part-2-学校环境与个人"><a href="#Part-2-学校环境与个人" class="headerlink" title="Part 2. 学校环境与个人"></a>Part 2. 学校环境与个人</h4><p>刚入大学，我渴望求知，我渴望遇见更大的世界。我觉得既然都是贴着这么多 tag 的高校了，应该人人都很乐意去学好玩有趣的东西，去发现问题，深究问题吧？但很遗憾，我周围的<strong>大多数</strong>人好像并不这么认为。他们要么只看到绩点，要么就是绩点都不看。时至今日，我们大部分人，对于课本之外的知识知之甚少，仿佛整个专业学习校内课程就到头了。即使大二了，也很少有人在能遨游中发现那令人神往的广阔计算机天地…… 稍微去看看那些从业者的经验就知道，这种行为无异于自掘坟墓。就包括我，到现在依然是个小白，有很多东西真的不懂，我也希望自己能遇到大佬，一步一步跟进。我还是不理解，我们到底怎么了？我不该戾气这么重，或许我想的不对。身边对所学专业毫不了解，混世度日的人太多太多了。我不想成为那种人，我没有后路可言，我可以靠的只有自己，我没有资格去成天贪图享乐…… 我不配，但却又逐渐在成为那样的人。不得不说，到现在，我只不过是个眼高手低的烂人罢了。很遗憾，一年过去了，我几乎是什么也不会，一事无成。我是一个愚钝的人，而且不擅长寻找正确的方向，我希望我能多思考，多提升自己的效率，不要再忙了一年发现自己什么都没学成。<br>很多时候，我真的是不思进取，混吃等死，该骂。这一年多我有很多时间浪费在了无意义的娱乐上，特别是大一下学期最为严重，泛滥成灾。诚然，人不应该拒绝娱乐，但或许对于休息之余来说，我的程度有点过火了吧。我应该去思考，发生这种事的原因是什么？</p><p>$Ivory\ \ Tower$. 校园给了我们一个相对于社会的缓冲，在这个缓冲下没有高中学业的紧张，也没有社会的重压。相对稳定舒适的生活，不管是其他任何年龄段的人看来都是奢侈的。而如果我们永远不跳出这种幻象，不去真的为工业界 or 学术界的工作提前打下真本事，可能只会追悔莫及，四顾茫然吧。大学是一锅温水，小心被煮了青蛙。当世界都用糖果引诱你进入她的监狱的时候，你还能保持独立思考吗？</p><p>当然，保持独立思考听起来也不应是一件难事，毕竟你要做的仅仅只是拒绝糖果而已。不过你脑子里的多巴胺会同意吗？</p><p>我好差劲，我们都好差劲。</p><hr><p>所以说，大概这就是我所看到的大学。更不用说那种阴森恐怖的内卷氛围，只要不是熟人，在课业学习上就几乎是封闭的。绝大多数人对于小组作业毫不过问，只要不是自己一个人的作业，天塌了有个高的顶着。都是这样子想，甚至有人匿名互评作业打0分。有时候保持一颗热心，你只会发现所有的杂事都被你摊上，而你得不到任何好处，反而在帮别人做事。囚徒困境啊！！！我想我的热心与积极态度，大概也被消磨殆尽了。</p><h3 id="我在做什么"><a href="#我在做什么" class="headerlink" title="我在做什么"></a>我在做什么</h3><p>竞赛。对于日常生活学习的不尽人意，竞赛最大程度地满足了我的许多需求与幻想，同时也<strong>极大地打击了我</strong>。这未尝不是好事，这让我开始反省自己在深入思考学习上到底是一个什么水平的人，也让我能够及时更新自己（个P）。算法竞赛对我自己来说，只是少了一些打游戏和复习那些所谓专业课的时间而已，得到的收益是这两样远不能比拟的。</p><p>然而我收获了什么呢？训练一年几乎是毫无成果，cf只是勉强维持在蓝名，而且在大一下结束后，我进入了长达半年的低谷期。从暑假自训不上心，蓝名迟迟上不去，到多校被虐，再到做题做到自闭也没有什么成果，还因为疫情被锁在四川回不来了，暑假有一天夜里打完 div2 甚至爆1，对着电脑屏幕抓狂，可能也给 childofcuriosity 佬佬传了一些负能量:pensive:呜呜呜，感觉自己挺烦人的。再到开学ccf-csp爆炸，算是跌到了谷底。ccf爆炸到没有颜面去参加ccsp，只希望明年再来。好在继续训练，国庆后成功上了蓝名，并终于学会了可持久化数据结构，并且组好了新队。本以为转机终于要来了，谁知道接着又是低谷。我在我抱有一丝希望的区域赛接连打铁，甚至离铜牌区都还有距离。而且这其中，队友有一个训练极不积极。等打完区域赛，虽然没有真的哭出来，但心里的泪已经流的差不多了吧。当时都觉得，济南站 2 小时签到或许永远是我的耻辱柱。又一次，竞赛线跌入谷底，这之后我甚至退役的小作文都写好了，打算放弃竞赛去死磕图形学走直接走就业路线了（就是上上篇博客，不过原内容被我撤掉了），就差去校队里和各位讲清楚了，然而幸好有某位大一的oi爷鼓励我，安慰我，才让我厚着脸皮坚持下来——脸皮真的厚了起来，毕竟我这样水平的人去参赛XCPC都感觉对不起一队打来的名额。<br>我花了这么久，终于想明白，或许我的情况是：很多时候我只是拿刷算法题当一个挡箭牌。不想做 ddl，不想认真学习的时候，我就把自己埋在 codeforces 上自闭，埋在洛谷里看博客，做题。然而听起来是做题，实际上两边不讨好——很多时候我仅仅只是为了逃避而已，我也很少因为不想学习的原因去补高难度的题，说不定，仅仅只是在这些网站上继续浪费时间而已。那这又和我 间歇性无节制打游戏综合征 有何差异呢？我对于竞赛的态度可能就这样走歪了，这也是导致我区域赛连续打铁的重要原因。明明做了很多题，却仍然打铁。可能我只是在追求着A题的快感，逐渐忘了去沉下心来好好学算法，提升思维吧。在刚开始的那段时间，学的东西简单，或许这个大问题还没有突出，随着算法学习逐渐深入，问题越来越严重。毕竟电子竞技菜是原罪，XCPC不就是一种脑力的电子竞技吗？别人EDG整天十几个小时的训练，而我每天平均真正有效有用的训练可能2小时都没有。对不起，我不仅是菜狗，而且还是懒狗，这下献大丑了。希望自己再打一年，好好打。</p><p>除开竞赛，也就是课外的其他学习。我尝试过很多东西，Qt 学习因为大一上期末考中断了，回过头来看这工具也确实不适合；Unity 因为完全不懂相关专业知识强行学导致做出来的东西很蹩脚，也就放了；尝试做项目项目半途暴死；说要给学校 OJ 重做前端，开发小组到现在也是杳无音讯；再到现在，开始找 CG 领域的入门知识，开始学 GAMES101 入门（可以说是国内第一个全中文讲课的美国大学的课程了），才发现自己的学习习惯已经变得多么差了。GAMES101 真正给代码框架的作业不知比学校那些 PPT 作业好了多少，但我不擅长做了……（所以说，对于许多出国的学生，很多人都说这是觉得外国的月亮圆，但上了他们很多网课了才发现，国内的本科教育，那确确实实是被吊打）确实，除了学校要求的，以及竞赛，剩下的学习，都是我追梦的尝试。然而我的很多尝试，都因为各种各样的事搁置，可能现在确实也稍早了一点。不过，还是希望自己尽早好好入门图形学，努力成为一名领域人才。至于为什么学图形学，当然是兴趣爱好使然（毕竟从小到大都是一个打游戏又菜又有瘾的人），觉得这样的领域很适合我，很感兴趣。我觉得做游戏是一件很痛苦的事（制作过程很复杂，实现一个简单的东西可能需要很多工作），也是一件很快乐的事（正确运行起来的正反馈当然强）。有时候我不想再在这些几乎毫无用处的课业上浪费时间，只想早点投身工业界，却又怕自己的选择太单纯太激进…… 不久前，TX 的资深图形大佬毛星云坠楼结束了自己的生命。我不熟悉这些大佬，没有看过他的那些入门书籍，但看到了网上流传的他的一段话：</p><blockquote><p>我有一个梦想，有一天，西游记能出ACT，打神弑佛，那绝对比《战神》带感。<br>我有一个梦想，有一天，上海滩能出沙盒游戏，而不是玩《GTA》感受美国梦，亦或是玩《热血无赖》体验国外公司强行塞给我们的「中国文化」。<br>我有一个梦想，有一天，不少3A大作不需汉化，因为是我们自己的游戏，配音是中国的，文化也是中国的。<br>我有一个梦想，将来的某一天，国产游戏能像中国的其他产业一样，以一个领跑者的姿态，面对全世界，面对全宇宙，器宇轩昂，扬眉吐气。<br>这会是由我们一起去完成的梦想。</p><p>等着我们的好消息！</p></blockquote><p>这不就是我所想的吗？</p><p>虽然直到这个事件我才得以了解这位热爱游戏开发的大师（这何尝不是一件令人遗憾的事），但是看到这段他给自己出的书所写的序言，又怎么不能让人感动得流泪。我不知道他经历了什么，我也不清楚是什么的重压让他做出如此决定。未来的路还很长，前人未竟的事业，我希望我能够在有能力维持生活之余，为之出一份力。</p><p>我想做一个理想主义者，不要在被生活和现实逐渐蚕食时失去自我。我有自己想做的事。有很多。</p><p>愿我们在这不尽人意的世界，还能找到自己，抓住自己，坚持自己。</p>]]></content>
    
    
    <summary type="html">如何才能挣脱这束缚呢？</summary>
    
    
    
    <category term="杂谈" scheme="https://eykenis.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>Treap学习笔记及模板</title>
    <link href="https://eykenis.github.io/2021/12/14/Treap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%8F%8A%E6%A8%A1%E6%9D%BF/"/>
    <id>https://eykenis.github.io/2021/12/14/Treap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%8F%8A%E6%A8%A1%E6%9D%BF/</id>
    <published>2021-12-14T02:33:32.000Z</published>
    <updated>2021-12-14T07:37:06.210Z</updated>
    
    <content type="html"><![CDATA[<p>Treap是平衡搜索树的一种。所谓 “Treap”，即 “Tree” + “Heap”, 顾名思义，是使用堆方法对搜索树进行平衡的一种数据结构。</p><p>约定该篇文章讨论的二叉搜索树都遵守 “比当前节点值大的节点在右子树，小于等于当前节点值的节点在其左子树” 这一规定。</p><h2 id="Treap维护平衡的方式"><a href="#Treap维护平衡的方式" class="headerlink" title="Treap维护平衡的方式"></a>Treap维护平衡的方式</h2><p>Treap的目的主要是利用堆的性质来平衡原搜索树。因为堆是一棵完全二叉树，深度最优嘛。</p><p>对于一棵普通的二叉搜索树，我们对其每个节点再随机赋上一个优先级权值 $p$. 即对任意节点，多了一个变量 $p=random()$.</p><p>例如，如果我们以小根堆的规则来约束这个平衡树，那么插入和删除两个主要操作就会变成这样：</p><p><strong>插入</strong>：先按照普通平衡树的方式将元素插入到合适位置。然后我们需要向上回溯，在回溯的过程中检查这些节点关于 $p$ 是否符合小根堆的性质。如果当前节点的 $p$ 大于左右子节点 $p$ 的最小值，那么就不符合小根堆的性质。这个时候，如果左子节点的 $p$ 更小，我们就需要左旋，反之需要右旋，以此保证平衡。</p><p>至于旋转的具体操作，即：</p><blockquote><p>以右旋为例：</p><ol><li>将当前节点下放至其左子节点的位置</li><li>令<strong>右子节点的左子节点</strong> 称为当前节点的新的右子节点</li><li>右子节点的左子节点变为当前节点，取代当前节点的位置</li></ol></blockquote><p>删除操作当然是同理了，回溯的时候观察 $p$ 来维护平衡。由于 $p$ 值是随机的， Treap也不是严格的堆结构，所以它是一种期望平衡的<strong>弱平衡</strong>的平衡树，搜索、插入和删除的期望时间复杂度为 $O(\log n)$.</p><p>Treap的优势在于其实现起来非常简单，包含的也就上面这些东西了。</p><h2 id="模板部分"><a href="#模板部分" class="headerlink" title="模板部分"></a>模板部分</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> cnt; <span class="comment">// cnt 表示当前treap内节点总数，用于动态开点</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = XXXXX;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="comment">// 分别表示左右子节点、所在子树的大小、当前节点值以及p值</span></span><br><span class="line">    <span class="keyword">int</span> l, r, size, val, p;</span><br><span class="line">&#125;a[maxn];</span><br></pre></td></tr></table></figure><h3 id="回溯统计"><a href="#回溯统计" class="headerlink" title="回溯统计"></a>回溯统计</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[k].size = a[a[k].l].size + a[a[k].r].size + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="旋转"><a href="#旋转" class="headerlink" title="旋转"></a>旋转</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 右旋</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rrotate</span><span class="params">(<span class="keyword">int</span> &amp;k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = a[k].l;</span><br><span class="line">    a[k].l = a[tmp].r;</span><br><span class="line">    a[tmp].r = k;</span><br><span class="line">    a[tmp].size = a[k].size;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">    k = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 左旋</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lrotate</span><span class="params">(<span class="keyword">int</span> &amp;k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = a[k].r;</span><br><span class="line">    a[k].r = a[tmp].l;</span><br><span class="line">    a[tmp].l = k;</span><br><span class="line">    a[tmp].size = a[k].size;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">    k = tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> &amp;k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k == <span class="number">0</span>) &#123;</span><br><span class="line">        k = ++cnt;</span><br><span class="line">        a[k].val = val;</span><br><span class="line">        a[k].p = <span class="built_in">rand</span>();</span><br><span class="line">        a[k].size = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a[k].size++;</span><br><span class="line">    <span class="keyword">if</span> (val &gt;= a[k].val) &#123;</span><br><span class="line">        <span class="built_in">ins</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">ins</span>(a[k].l, val);</span><br><span class="line">    <span class="keyword">if</span> (a[k].l &amp;&amp; a[k].p &gt; a[a[k].l].p) &#123;</span><br><span class="line">        <span class="built_in">rrotate</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[k].r &amp;&amp; a[k].p &gt; a[a[k].r].p) &#123;</span><br><span class="line">        <span class="built_in">lrotate</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> &amp;k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    a[k].size--;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val == val) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!a[k].l &amp;&amp; !a[k].r) &#123;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!a[k].l || !a[k].r) &#123;</span><br><span class="line">            k = a[k].l + a[k].r;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a[a[k].l].p &lt; a[a[k].r].p) &#123;</span><br><span class="line">            <span class="built_in">rrotate</span>(k);</span><br><span class="line">            <span class="built_in">del</span>(a[k].r, val); <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">lrotate</span>(k);</span><br><span class="line">            <span class="built_in">del</span>(a[k].l, val); <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val &gt;= val) &#123;</span><br><span class="line">        <span class="built_in">del</span>(a[k].l, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">del</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>例题分割线~</p><p>例题：</p><h3 id="P3369-【模板】普通平衡树"><a href="#P3369-【模板】普通平衡树" class="headerlink" title="P3369 【模板】普通平衡树"></a><a href="https://www.luogu.com.cn/problem/P3369">P3369 【模板】普通平衡树</a></h3><p>其中还要维护查询排名，查询前驱后继等搜索操作。</p><p>当普通平衡树维护就可以啦，比较简单。</p><p>完整代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="keyword">int</span> root;</span><br><span class="line"><span class="comment">// 注意按p是小根堆</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, size, val, p;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[k].size = <span class="number">1</span> + a[a[k].l].size + a[a[k].r].size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rrotate</span><span class="params">(<span class="keyword">int</span> &amp;k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = a[k].l;</span><br><span class="line">    a[k].l = a[tmp].r;</span><br><span class="line">    a[tmp].r = k;</span><br><span class="line">    a[tmp].size = a[k].size;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">    k = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lrotate</span><span class="params">(<span class="keyword">int</span> &amp;k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = a[k].r;</span><br><span class="line">    a[k].r = a[tmp].l;</span><br><span class="line">    a[tmp].l = k;</span><br><span class="line">    a[tmp].size = a[k].size;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">    k = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> &amp;k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k == <span class="number">0</span>) &#123;</span><br><span class="line">        k = ++cnt;</span><br><span class="line">        a[k].val = val;</span><br><span class="line">        a[k].p = <span class="built_in">rand</span>();</span><br><span class="line">        a[k].size = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a[k].size++;</span><br><span class="line">    <span class="keyword">if</span> (val &gt;= a[k].val) &#123;</span><br><span class="line">        <span class="built_in">ins</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">ins</span>(a[k].l, val);</span><br><span class="line">    <span class="keyword">if</span> (a[k].l &amp;&amp; a[k].p &gt; a[a[k].l].p) &#123;</span><br><span class="line">        <span class="built_in">rrotate</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[k].r &amp;&amp; a[k].p &gt; a[a[k].r].p) &#123;</span><br><span class="line">        <span class="built_in">lrotate</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> &amp;k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    a[k].size--;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val == val) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!a[k].l &amp;&amp; !a[k].r) &#123;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!a[k].l || !a[k].r) &#123;</span><br><span class="line">            k = a[k].l + a[k].r;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a[a[k].l].p &lt; a[a[k].r].p) &#123;</span><br><span class="line">            <span class="built_in">rrotate</span>(k);</span><br><span class="line">            <span class="built_in">del</span>(a[k].r, val); <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">lrotate</span>(k);</span><br><span class="line">            <span class="built_in">del</span>(a[k].l, val); <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val &gt;= val) &#123;</span><br><span class="line">        <span class="built_in">del</span>(a[k].l, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">del</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rk</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (val &gt; a[k].val) &#123;</span><br><span class="line">        <span class="keyword">return</span> a[a[k].l].size + <span class="built_in">rk</span>(a[k].r, val) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">rk</span>(a[k].l, val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> rnk)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (rnk == a[a[k].l].size + <span class="number">1</span>) <span class="keyword">return</span> a[k].val;</span><br><span class="line">    <span class="keyword">if</span> (rnk &gt; a[a[k].l].size + <span class="number">1</span>) <span class="keyword">return</span> <span class="built_in">find</span>(a[k].r, rnk - a[a[k].l].size - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">find</span>(a[k].l, rnk);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query_pre</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val &gt;= val) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">query_pre</span>(a[k].l, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="built_in">query_pre</span>(a[k].r, val);</span><br><span class="line">    <span class="keyword">if</span> (!tmp) <span class="keyword">return</span> a[k].val;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query_suf</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val &lt;= val) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">query_suf</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="built_in">query_suf</span>(a[k].l, val);</span><br><span class="line">    <span class="keyword">if</span> (!tmp) <span class="keyword">return</span> a[k].val;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> opt, x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        cin &gt;&gt; opt &gt;&gt; x;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">ins</span>(root, x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="built_in">del</span>(root, x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">3</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">rk</span>(root, x) + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">4</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">find</span>(root, x) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">5</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">query_pre</span>(root, x) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="built_in">query_suf</span>(root, x) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">最简单的平衡树之一</summary>
    
    
    
    <category term="知识点" scheme="https://eykenis.github.io/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="平衡树" scheme="https://eykenis.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
    <category term="Treap" scheme="https://eykenis.github.io/tags/Treap/"/>
    
  </entry>
  
  <entry>
    <title>一个艰难的决定</title>
    <link href="https://eykenis.github.io/2021/12/05/%E4%B8%80%E4%B8%AA%E8%89%B0%E9%9A%BE%E7%9A%84%E5%86%B3%E5%AE%9A/"/>
    <id>https://eykenis.github.io/2021/12/05/%E4%B8%80%E4%B8%AA%E8%89%B0%E9%9A%BE%E7%9A%84%E5%86%B3%E5%AE%9A/</id>
    <published>2021-12-05T04:32:12.000Z</published>
    <updated>2021-12-07T08:12:18.237Z</updated>
    
    <content type="html"><![CDATA[<p>先别想这么多……</p><p>先别想这么多……</p><p>好好休息……好好休息……</p><p>再调整一会，再坚持一会</p><p>心态再放平一会……</p>]]></content>
    
    
    <summary type="html">沉稳，冷静，严谨，坚忍 ——敬爱的高中数学老师</summary>
    
    
    
    <category term="牢骚" scheme="https://eykenis.github.io/categories/%E7%89%A2%E9%AA%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>快速傅里叶变换(FFT)及NTT入门笔记</title>
    <link href="https://eykenis.github.io/2021/11/18/%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2-FFT-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://eykenis.github.io/2021/11/18/%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2-FFT-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</id>
    <published>2021-11-18T13:41:50.000Z</published>
    <updated>2021-12-14T03:05:41.079Z</updated>
    
    <content type="html"><![CDATA[<p>本博客学习于洛谷P3803各路大佬题解，所以你肯定会找到很多相似的地方QWQ</p><h2 id="什么是FFT"><a href="#什么是FFT" class="headerlink" title="什么是FFT"></a>什么是FFT</h2><p><strong>傅里叶变换</strong></p><p>傅里叶说明了：一切函数/波形都可以用有限或无限个弦函数/波形叠加形成。</p><p>例如，现在有一个由三个不同正弦波组成的近似矩形波，将这些波形关于 $x$ 轴平行地放在一起，就可以得到下图：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/97b88cfe9192ba702c13e817170e7a08.png" alt="img"></p><p>其中红色的是合成出来的近似矩形波。</p><p>（当然，图肯定是不太标准的，意思一下就行）</p><p>从 $xOz$ 平面看，我们可以获得各个波的时域信号，也就是 $t-f(t)$ 图像。而从 $zOy$ 平面看，则可以获得各个波的频域信号。</p><p>先不看频域信号中的红色部分，注意其他三个波其实是有排序规则的：按照频率大小排序。也就是说，频率越快， $y$ 越大。且每个频率下的 $z$ 将反映该波的振幅。两种不同的信号包含了不同的信息。</p><p>而傅里叶变换，就是对一个时域信号作变换，生成频域信号。</p><p><strong>离散傅里叶变换（DFT）</strong></p><p>顾名思义，离散傅里叶变换就是在确定时域信号和频域信号都是离散的时候作的傅里叶变换。</p><p>例如，现在有一个多项式函数 $f(x)=\sum_{i=0}^{n}a_ix^i$，那么这个函数其实就是“时域信号”，我们也可以将其表示成点集$\{P_0,P_1,…,P_n\}$，其中 $P_i$ 是函数图像上的某一个点。容易知道 $n$ 个点是可以确定一个 $n-1$ 次多项式的。那么这个点集其实就是“频域信号”。从函数式到点集的变化，就是一种离散傅里叶变换。</p><p>另外，我们称IDFT为DFT的逆运算，即从点集得到函数式的运算。</p><h2 id="为什么需要FFT"><a href="#为什么需要FFT" class="headerlink" title="为什么需要FFT"></a>为什么需要FFT</h2><p>离散型傅里叶变换解决的问题一般是多项式乘法问题。</p><p>最经典的FFT问题即多项式卷积问题：</p><p><a href="https://www.luogu.com.cn/problem/P3803">P3803 【模板】多项式乘法（FFT） - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)</a></p><p>给一个 $n$ 次多项式 $F(x)$ 和一个 $m$ 次多项式 $G(x)$，求 $F(x)$ 和 $G(x)$ 的卷积。</p><p>如果直接暴力计算，第一种就是直接展开函数式算，第二种就是执行一次DFT，将函数式转换为点集，通过对 $x$ 相同的点的 $y$ 值相乘，得到目标函数的点集，再通过 DFT 的逆运算 IDFT 转化为答案。</p><p>显然，不管采取哪种方法，一共都有 $m · n$ 项，复杂度为 $O((max\{n, m\})^2)$. 在 $nm\geq 1e9$ 的时候是无法接受的。虽然朴素方法下第二种方法的常数肯定比第一种还要大，但其实我们可以在DFT变换的基础上使用FFT来加速多项式乘法。实际上，FFT的加速原因在于其采用了分治的思想。</p><h2 id="多项式乘法问题"><a href="#多项式乘法问题" class="headerlink" title="多项式乘法问题"></a>多项式乘法问题</h2><h3 id="前置知识-复数根"><a href="#前置知识-复数根" class="headerlink" title="前置知识-复数根"></a>前置知识-复数根</h3><p>考虑欧拉公式</p><script type="math/tex; mode=display">e^{\theta i}= \cos\theta + i\sin\theta</script><p>，容易知道 $e^{2\pi i}=1$.</p><p>不妨令 $w_n=e^{2\pi i\over n}=\sin{2\pi i\over n}+i\cos{2\pi i\over n}$, 则 $w_n^n=1$.</p><p>则称 $w_n$ 为 $n$ 的一个复数单位根. 容易知道 $n$ 的复数根最多有 $n$ 个，为 $\{w_i|i\in [0,n-1]\}$. 这是因为复数根具有性质 $w_n^{n+k}=w_n^k$.</p><p>另外，还有一个通过消去定理得到的引理：$w_n^k=w_{n\over2}^{k\over2}$.</p><h3 id="使用FFT解决多项式乘法问题"><a href="#使用FFT解决多项式乘法问题" class="headerlink" title="使用FFT解决多项式乘法问题"></a>使用FFT解决多项式乘法问题</h3><p>例题：</p><p><a href="https://www.luogu.com.cn/problem/P3803">P3803 【模板】多项式乘法（FFT）</a></p><p><strong>DFT</strong></p><p>现在要将$F(x)$的表达式转化为点值表示法，那么我们需要取$n$个点。前面已经讨论过，朴素的取法复杂度是 $O(n^2)$ 的，现在我们需要构造一个可以分治的取法：</p><p>设$ F(x)$ 的项数 $n$ 为偶数，并令</p><p>$A(x)=a_0+a_2x+a_4x^2+…+a_nx^{n\over 2}$,</p><p>$B(x)=a_1+a_3x+a_5x^2+…+a_{n-1}x^{\frac{n}{2}-1}$.</p><p>则 $F(x)=A(x^2)+xB(x^2)$.</p><p>代入 $n$ 个单位复数根 $w_n^k, k\in[0, n - 1]$，有</p><p>$F(w_n^k)=A(w_{n}^{2k})+w_n^kB(w_n^{2k})$</p><p>而 $A(w_n^{2k})=a_0+a_2w_n^{2k}+…+a_nw_n^{2k\over n}$</p><p>$=a_0+a_2w_{n\over2}^k+…+a_nw_{n\over2}^{k\over n}$.</p><p>且对 $B(w_n^{2k})$，我们也有相似的结论。</p><p>故</p><p>$F(w_n^k)=A(w_{n\over2}^k)+w_n^kB(w_{n\over2}^{k})\ (k&lt;{n\over2})$.</p><p>考虑 $k\geq {n\over2}$ 的情况，令 $k+{n\over 2}$ 取代原来位置上的 $k$,</p>$F(w_n^{{n\over 2}+k})=A(w_n^{n+2k})+w_n^{{n\over 2}+k}B(w_n^{2k})$,$=A(w_n^{2k})-w_n^{k}B(w_n^{2k})$,$=A(w_{n\over2}^k)-w_n^kB(w_{n\over2}^k)$.那么在求 $F(w_n^k)$ 时，我们可以先求 $A(w_{n\over2}^{k})$ 以及 $B(w_{n\over2}^{k})$，然后再合并出 $F(w_n^k)$. 到这里，分治递归的可行性就十分显然了。由主定理可知复杂度为 $T(n)=T(\frac{n}{2})+O(n)=O(n\log n)$.**IDFT**IDFT 即 DFT 的逆变换。我们的目的是求最终表达式的各个系数，而通过 DFT 得到最终的点值表达式后，我们还需要将其逆向变回系数表达式。其实，这里只需要取 $w'=\overline {w_n^k}$. 即单位根的共轭复数，然后再执行一遍相似的分治，并且最后得到的多项式系数都除以一个 $n $ 就可以了。（不再展开证明 QWQ，了解就好，因为本蒟蒻也不会）CPP:<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// F[]即F(x)，注意n为A(x),B(x)的长度，op为1/-1表示进行的是FFT/IDFT</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FFT</span><span class="params">(complex&lt;<span class="keyword">double</span>&gt; F[], <span class="keyword">int</span> n, <span class="keyword">int</span> op)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!n) <span class="keyword">return</span>;</span><br><span class="line">    complex&lt;<span class="keyword">double</span>&gt; a[n], b[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        a[i] = F[i &lt;&lt; <span class="number">1</span>], b[i] = F[i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">FFT</span>(a, n &gt;&gt; <span class="number">1</span>, op), <span class="built_in">FFT</span>(b, n &gt;&gt; <span class="number">1</span>, op);</span><br><span class="line">    <span class="function">complex&lt;<span class="keyword">double</span>&gt; <span class="title">wn</span><span class="params">(cos(PI / n), sin(PI / n) * op)</span>, <span class="title">w</span><span class="params">(<span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        F[i] = a[i] + w * b[i];</span><br><span class="line">        F[i + n] = a[i] - w * b[i];</span><br><span class="line">        w *= wn;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>此为FFT的递归写法，由于单位根的原因需要使用 `double` 数据类型，且需要一个复数结构体，每层分治还要额外开数组，其常数比较大。另外还有一种FFT的迭代写法，常数更小。（需要的可以去别处找，或者我说不定会更？QAQ）****回到该问题，由于需要分治的任何时候都要保证 $n$ 为偶数，故我们需要把 $n,m$ 补成相同的一个 $2$ 的幂次方。项数补全不影响结果，只要让多出来的项系数都为0就行了。故整个流程即：1. 对 $F(x),G(x)$ 分别求 DFT2. 直接将每个点值相乘3. 通过IDFT将点值还原成系数表达式，得到答案对于例题[P3803](https://www.luogu.com.cn/problem/P3803)，AC代码如下：<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// op = 1 ? DFT : IDFT</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e6</span> + <span class="number">10</span>;</span><br><span class="line">complex &lt;<span class="keyword">double</span>&gt; F[maxn], G[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fft</span><span class="params">(complex&lt;<span class="keyword">double</span>&gt; f[], <span class="keyword">int</span> n, <span class="keyword">int</span> op)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!n) <span class="keyword">return</span>;</span><br><span class="line">    complex &lt;<span class="keyword">double</span>&gt; a[n], b[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; ++k) &#123;</span><br><span class="line">        a[k] = f[k &lt;&lt; <span class="number">1</span>], b[k] = f[k &lt;&lt; <span class="number">1</span> | <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fft</span>(a, n &gt;&gt; <span class="number">1</span>, op), <span class="built_in">fft</span>(b, n &gt;&gt; <span class="number">1</span>, op);</span><br><span class="line">    <span class="function">complex&lt;<span class="keyword">double</span>&gt; <span class="title">wn</span><span class="params">(cos(PI / n), sin(PI / n) * op)</span>, <span class="title">w</span><span class="params">(<span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; ++k, w *= wn) &#123;</span><br><span class="line">        f[k] = a[k] + w * b[k], f[k + n] = a[k] - w * b[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;F[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;G[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    m += n, n = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n &lt;= m) n &lt;&lt;= <span class="number">1</span>; <span class="comment">// 补足系数，保证是2的幂次</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// DFT</span></span><br><span class="line">    <span class="built_in">fft</span>(F, n &gt;&gt; <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">fft</span>(G, n &gt;&gt; <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) F[i] *= G[i];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IDFT</span></span><br><span class="line">    <span class="built_in">fft</span>(F, n &gt;&gt; <span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.0f &quot;</span>, <span class="built_in">fabs</span>(F[i].<span class="built_in">real</span>()) / n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>基本上和洛谷上<font color="grey">FlashHu</font>的题解代码一样...因为我的FFT基本上是从这里理解的## NTT-快速数论变换很多时候，要求的多项式系数并不会有多大，`double` 显得有些浪费空间了，而且很容易产生精度问题。故可以使用另一种 “原根” 替代复数来解决多项式乘法问题，这样就可以避免使用 `double` 以及 `complex<T>`. 如果有系数较大的多项式需要计算且考察 NTT 时，一般会要求对结果取模。### 前置知识-原根在 NTT 算法中，原根是 FFT 中复数的替代品。~~（？又说一遍）~~要理解原根，首先我们需要群论中的若干定义。**循环群**如果一个群 $A$ 的所有元素 $x$ 都是 $a$ 的幂次，即$\forall x\in A, x=a^i(i\in \Z)$，则称 $A$ 是一个循环群，$a$ 是它的生成元。**阶**假设 $e$ 是某个循环群的单位元，则若 $a^p=1$，则 $p$ 的最小值即为 $a$ 的阶，记作 $Ord(a)$.**原根**原根的一般定义是：对于群 $G$, $\exist g\in G$, $Ord(g)=|G|$，则 $g$ 是 $G$ 的原根。现在有一个以加法取模为运算，元素为整数的群，容易知道这是一个循环群，单位元是1. 我们约定，如果这样的一个群的模数是 $p$，则其所在的群是 $G_p$.那么如果我们的问题是这样：求多项式系数，同时多项式系数对一个模数 $p$ 取余，显然系数构成一个群 $G_p$. 设 $n=|G|$，容易知道 $g^{p-1}=1$, 则不妨令 $g_n=g^{\frac{p-1}{n}}$, 有 $g_n^n=1$.从这里我们就看出，$g_n$ 和 FFT 中的 $w_n$ 是有一一对应关系的，所以我们只需要将 FFT 的点值取值修改为 $g_n^0,g_n^1,...g_n^{n-1}$ 即可。至于原根如何求出，我们可以找一个 $p-1$ 的质因子 $q$, 则 $g$ 为原根 $\lrArr$ $g^{\frac{p-1}{q}}\neq 1$ （由欧拉定理可证），将 $p-1$ 的质因子逐个找出再判断一下即可。通常题目会要求 $p=119×2^{23}+1=998244353,\ g=3$.> 据说，因为大多数NTT题目都会取更方便造数据的998244353为模数，这就导致很多题一看模数就知道这题是要做NTT。所以后来许多和NTT无关甚至完全不需要取模的题目也会加上一句“对998244353取模”。理解粗浅，还是老老实实看模板吧。<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// op = 1 ? DFT : IDFT</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> F[maxn], G[maxn];</span><br><span class="line"><span class="keyword">int</span> r[maxn];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fpow</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p) &#123;</span><br><span class="line">        <span class="keyword">if</span>(p &amp; <span class="number">1</span>) ans = (ans * a) % mod;</span><br><span class="line">        a = (a * a) % mod;</span><br><span class="line">        p &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ntt</span><span class="params">(<span class="keyword">int</span> f[], <span class="keyword">int</span> n, <span class="keyword">int</span> op)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!n) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; r[i]) <span class="built_in">swap</span>(f[i], f[r[i]]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> mid = <span class="number">1</span>; mid &lt; n; mid &lt;&lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> wn = <span class="built_in">fpow</span>(op == <span class="number">1</span> ? <span class="number">3</span> : <span class="number">332748118</span>, (mod - <span class="number">1</span>) / (mid &lt;&lt; <span class="number">1</span>));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j += (mid &lt;&lt; <span class="number">1</span>)) &#123;</span><br><span class="line">            <span class="keyword">int</span> w = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; mid; ++k, w = w * wn % mod) &#123;</span><br><span class="line">                <span class="keyword">int</span> x = f[j + k], y = w * f[j + k + mid] % mod;</span><br><span class="line">                f[j + k] = (x + y) % mod;</span><br><span class="line">                f[j + k + mid] = ((x - y) % mod + mod) % mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;F[i]);</span><br><span class="line">        F[i] = (F[i] + mod) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        G[i] = (G[i] + mod) % mod;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;G[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    m += n, n = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n &lt;= m) n &lt;&lt;= <span class="number">1</span>, cnt++; <span class="comment">// 补足系数，保证是2的幂次</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) r[i] = (r[i &gt;&gt; <span class="number">1</span>] &gt;&gt; <span class="number">1</span>) | ((i &amp; <span class="number">1</span>) &lt;&lt; (cnt - <span class="number">1</span>));</span><br><span class="line">    <span class="comment">// DFT</span></span><br><span class="line">    <span class="built_in">ntt</span>(F, n, <span class="number">1</span>), <span class="built_in">ntt</span>(G, n, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) F[i] = (F[i] * G[i]) % mod;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IDFT</span></span><br><span class="line">    <span class="built_in">ntt</span>(F, n, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">int</span> inv = <span class="built_in">fpow</span>(n, mod - <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld &quot;</span>, (F[i] * inv) % mod);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">打死不学数学FLAG系列...</summary>
    
    
    
    <category term="知识点" scheme="https://eykenis.github.io/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="FFT" scheme="https://eykenis.github.io/tags/FFT/"/>
    
    <category term="NTT" scheme="https://eykenis.github.io/tags/NTT/"/>
    
    <category term="数学" scheme="https://eykenis.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>2021ICPC济南记</title>
    <link href="https://eykenis.github.io/2021/11/17/2021ICPC%E6%B5%8E%E5%8D%97%E8%AE%B0/"/>
    <id>https://eykenis.github.io/2021/11/17/2021ICPC%E6%B5%8E%E5%8D%97%E8%AE%B0/</id>
    <published>2021-11-17T03:12:06.000Z</published>
    <updated>2021-12-05T04:31:32.991Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2021-11-14-济南打铁…"><a href="#2021-11-14-济南打铁…" class="headerlink" title="2021.11.14 济南打铁…"></a>2021.11.14 济南打铁…</h2><p>抛开题目本身严重出锅的问题，也是因为自己签到慢的一批还乱WA而导致签到就能拿的铜牌不翼而飞…</p><p>对不起，以后再也不要让本蒟蒻来做签到了qwq（CF签到我2分钟一个，区域赛签到我两小时调不出，真的绝绝子）</p><p>队友死磕D无果，G有思路但时间不够+赛后发现离正解也差得远，C越想越糊，其余题开不动。</p><p>就这样本队第一次出征打铁了。</p><p>感觉在区域赛这方面自己还是一片空白，目前的进度只是学会了很多板子和CF做一做1800以下的题而已。而意识到这些之后，上海站也只剩下十来天了。。。看来得寄希望于明年了。（废物JBer叹气）</p><p>感觉自己是真的废物。。。废到不敢吱声那种。</p><p>以后我就是双铁战神了！（十天以后三铁战神flag）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2021-11-14-济南打铁…&quot;&gt;&lt;a href=&quot;#2021-11-14-济南打铁…&quot; class=&quot;headerlink&quot; title=&quot;2021.11.14 济南打铁…&quot;&gt;&lt;/a&gt;2021.11.14 济南打铁…&lt;/h2&gt;&lt;p&gt;抛开题目本身严重出锅的问题，</summary>
      
    
    
    
    <category term="随笔" scheme="https://eykenis.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>Codeforces Round 371 Div. 1</title>
    <link href="https://eykenis.github.io/2021/11/11/Codeforces-Round-371-Div-1/"/>
    <id>https://eykenis.github.io/2021/11/11/Codeforces-Round-371-Div-1/</id>
    <published>2021-11-11T12:57:16.000Z</published>
    <updated>2021-11-12T02:06:25.076Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Sonya-and-Queries"><a href="#A-Sonya-and-Queries" class="headerlink" title="A. Sonya and Queries"></a>A. Sonya and Queries</h1><p>由于默认补足前导0，而且必须从低到高匹配，可以直接使用map.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mp;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="keyword">char</span> op;</span><br><span class="line">        <span class="keyword">int</span> num;</span><br><span class="line">        cin &gt;&gt; op &gt;&gt; num;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="string">&#x27;?&#x27;</span>) &#123;</span><br><span class="line">            cout &lt;&lt; mp[num] &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; num; i *= <span class="number">10</span>) &#123;</span><br><span class="line">            res += (num &amp; <span class="number">1</span>) * i;</span><br><span class="line">            num /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="string">&#x27;+&#x27;</span>) mp[res]++;</span><br><span class="line">        <span class="keyword">else</span> mp[res]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Searching-Rectangles"><a href="#B-Searching-Rectangles" class="headerlink" title="B. Searching Rectangles"></a>B. Searching Rectangles</h1><p>一道有点毒瘤的二分交互题。</p><p>由于两个矩形不相交，一定存在一条竖线/横线使得两个矩形分别在线的两侧，通过两次二分找到一条符合条件的线即可。</p><p>找到分割线后，分别在两个区域内询问出一个矩形的上下左右边界，求各个边界也用二分即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">2</span>][<span class="number">4</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x1, <span class="keyword">int</span> y1, <span class="keyword">int</span> x2, <span class="keyword">int</span> y2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;? %d %d %d %d\n&quot;</span>, x1, y1, x2, y2);</span><br><span class="line">    <span class="built_in">fflush</span>(stdout);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;tmp);</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">while</span>(l + <span class="number">1</span> &lt; r) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        x = <span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, mid, n);</span><br><span class="line">        y = <span class="built_in">query</span>(mid + <span class="number">1</span>, <span class="number">1</span>, n, n);</span><br><span class="line">        <span class="keyword">if</span>(!x &amp;&amp; !y) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x &amp;&amp; !y) r = mid;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!x &amp;&amp; y) l = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x &amp;&amp; y) <span class="keyword">return</span> mid;</span><br><span class="line">    &#125;</span><br><span class="line">    x = <span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, l, n);</span><br><span class="line">    y = <span class="built_in">query</span>(r, <span class="number">1</span>, n, n);</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">1</span> &amp;&amp; y == <span class="number">1</span>) <span class="keyword">return</span> l;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ud</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">while</span>(l + <span class="number">1</span> &lt; r) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        x = <span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n, mid);</span><br><span class="line">        y = <span class="built_in">query</span>(<span class="number">1</span>, mid + <span class="number">1</span>, n, n);</span><br><span class="line">        <span class="keyword">if</span>(!x &amp;&amp; !y) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x &amp;&amp; !y) r = mid;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!x &amp;&amp; y) l = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x &amp;&amp; y) <span class="keyword">return</span> mid;</span><br><span class="line">    &#125;</span><br><span class="line">    x = <span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n, l);</span><br><span class="line">    y = <span class="built_in">query</span>(<span class="number">1</span>, r, n, n);</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">1</span> &amp;&amp; y == <span class="number">1</span>) <span class="keyword">return</span> l;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">queryRec</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> x1, <span class="keyword">int</span> y1, <span class="keyword">int</span> x2, <span class="keyword">int</span> y2)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//upper_bound</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="comment">// right</span></span><br><span class="line">    <span class="keyword">int</span> l = x1, r = x2;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        x = <span class="built_in">query</span>(x1, y1, mid, y2);</span><br><span class="line">        <span class="keyword">if</span>(x) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans[id][<span class="number">2</span>] = l;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// left</span></span><br><span class="line">    l = x1, r = x2;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = ((l + r) &amp; <span class="number">1</span>) ? ((l + r) &gt;&gt; <span class="number">1</span>) + <span class="number">1</span> : ((l + r) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        x = <span class="built_in">query</span>(mid, y1, x2, y2);</span><br><span class="line">        <span class="keyword">if</span>(x) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans[id][<span class="number">0</span>] = r;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// up</span></span><br><span class="line">    l = y1, r = y2;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        x = <span class="built_in">query</span>(x1, y1, x2, mid);</span><br><span class="line">        <span class="keyword">if</span>(x) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans[id][<span class="number">3</span>] = l;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// down</span></span><br><span class="line">    l = y1, r = y2;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = ((l + r) &amp; <span class="number">1</span>) ? ((l + r) &gt;&gt; <span class="number">1</span>) + <span class="number">1</span> : ((l + r) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        x = <span class="built_in">query</span>(x1, mid, x2, y2);</span><br><span class="line">        <span class="keyword">if</span>(x) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans[id][<span class="number">1</span>] = r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">int</span> u = <span class="built_in">lr</span>();</span><br><span class="line">    <span class="keyword">if</span>(u) &#123;</span><br><span class="line">        <span class="built_in">queryRec</span>(<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, u, n);</span><br><span class="line">        <span class="built_in">queryRec</span>(<span class="number">1</span>, u + <span class="number">1</span>, <span class="number">1</span>, n, n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        u = <span class="built_in">ud</span>();</span><br><span class="line">        <span class="built_in">queryRec</span>(<span class="number">0</span>, <span class="number">1</span>, u + <span class="number">1</span>, n, n);</span><br><span class="line">        <span class="built_in">queryRec</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, n, u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;!&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">1</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">3</span>; ++j) <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, ans[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fflush</span>(stdout);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Sonya-and-Problem-Without-a-Legend"><a href="#C-Sonya-and-Problem-Without-a-Legend" class="headerlink" title="C. Sonya and Problem Without a Legend"></a>C. Sonya and Problem Without a Legend</h1><p>要严格单调增，不好求。尝试让每第 $i$ 个元素减掉 $i$, 即加上一个等差数列 $(1, 1)$，减出来的数列求一下其非严格单调递增的结果，再还原就能得到一个严格单调递增的数组。且容易知道减掉后答案是不会变的。</p><p>怎么求这个非严格单调递增数列呢？为了让答案尽可能小，第 $i$ 个元素要么不变（已经符合严格不下降的条件），要么就变成第 $i-1$ 个元素。</p><p>这是因为：如果变得比第 $i-1$ 个元素更大的话，不仅当前答案会增加，对之后的修改也有弊无利。故可以推出：最终的数组中所有元素的值都是原数组的某一个元素值。</p><p>再看 $n\leq 3000$, 考虑 $O(n^2)$ 的动态规划。设 $dp[i][j]$ 表示修改完成前 $i$ 个数，且第 $i$ 个数变成了原数组<strong>第 $j$ 大</strong>的数的答案。</p><p>那么</p><script type="math/tex; mode=display">dp[i][j]=min(dp[i-1][m]) + |a[i]-b[j]|,1 \leq m \leq j</script><p>其中 $b$ 是原数组排序后的数组。</p><p>这个式子是 $O(n^3)$ 的。但其实可以用滚动数组优化掉对 $m$ 的枚举, 伪代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">for i from 1 to n</span><br><span class="line">int res = INF</span><br><span class="line">for j from 1 to n</span><br><span class="line">res = min(res, dp[i - 1][j])</span><br><span class="line">dp[i][j] = res + abs(a[i] - b[j])</span><br></pre></td></tr></table></figure><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3005</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">1e18</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], b[maxn];</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i], a[i] -= i, b[i] = a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) dp[i][j] = inf;</span><br><span class="line">    <span class="built_in">sort</span>(b + <span class="number">1</span>, b + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) dp[<span class="number">1</span>][i] = <span class="built_in">abs</span>(a[<span class="number">1</span>] - b[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> res = inf;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">            res = <span class="built_in">min</span>(dp[i - <span class="number">1</span>][j], res);</span><br><span class="line">            dp[i][j] = res + <span class="built_in">abs</span>(a[i] - b[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = inf;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, dp[n][i]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">补ABC题</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 115 (Rated for Div. 2)</title>
    <link href="https://eykenis.github.io/2021/11/03/Educational-Codeforces-Round-115-Rated-for-Div-2/"/>
    <id>https://eykenis.github.io/2021/11/03/Educational-Codeforces-Round-115-Rated-for-Div-2/</id>
    <published>2021-11-03T13:28:09.000Z</published>
    <updated>2021-11-12T02:07:23.932Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-Delete-Two-Elements"><a href="#C-Delete-Two-Elements" class="headerlink" title="C. Delete Two Elements"></a>C. Delete Two Elements</h1><p><strong>题意</strong></p><p>删去两个数，使原数组平均值不变，问有多少种不同的删法</p><p><strong>分析</strong></p><p>先算出平均数，再哈希一下求组合数即可。</p><p>$ans+=\sum_{i=1}^{n}num[a[i]]<em>num[2</em>avr-a[i]],a[i]\neq avr \&amp;\&amp; a[i]&lt;avr,$</p><p>$ans+=C_{num[avr]}^{2}$.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :deb.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-10-12</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line">map&lt;<span class="keyword">double</span>,<span class="keyword">int</span>&gt; mp;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">int</span> rhs;</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">        fors (i, <span class="number">1</span>, n) &#123; cin &gt;&gt; rhs; mp[rhs]++; sum += rhs;&#125;</span><br><span class="line">        sum /= n;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;x:mp)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x.first &gt; sum) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(x.first == sum) ans += (x.second * (x.second - <span class="number">1</span>)) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span> ans += x.second * (mp[<span class="number">2</span> * sum - x.first]);</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        mp.<span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-Training-Session"><a href="#D-Training-Session" class="headerlink" title="D. Training Session"></a>D. Training Session</h1><p><strong>分析</strong></p><p>要求的事件为：3个标题都不同 或 3个标题难度都不同</p><p>考虑对立事件：3个有的标题相同 且 3个有的难度相同</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :deb.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-10-12</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> ab[maxn], ba[maxn];</span><br><span class="line"><span class="keyword">int</span> a[maxn], b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        fors(i , <span class="number">1</span>, n) cin &gt;&gt; a[i] &gt;&gt; b[i], ab[a[i]]++, ba[b[i]]++;</span><br><span class="line">        <span class="keyword">int</span> ans = n * (n - <span class="number">1</span>) * (n - <span class="number">2</span>) / <span class="number">6</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) &#123;</span><br><span class="line">            <span class="keyword">int</span> res = ab[a[i]] - <span class="number">1</span>;</span><br><span class="line">            res *= ba[b[i]] - <span class="number">1</span>;</span><br><span class="line">            ans -= res;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) ab[a[i]]--, ba[b[i]]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">平凡解题报告</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>展望</title>
    <link href="https://eykenis.github.io/2021/10/25/Where-s-the-way/"/>
    <id>https://eykenis.github.io/2021/10/25/Where-s-the-way/</id>
    <published>2021-10-25T03:12:27.000Z</published>
    <updated>2021-10-25T03:11:54.421Z</updated>
    
    <content type="html"><![CDATA[<p>最近真的有点力不从心。</p><p>总感觉自己有时候思路顺畅，有时候又感觉没有动力，思维停滞。</p><p>越是往前走越见不到光明，反而越是发现这不是一条好走的路。果然热爱算法竞赛和热爱游戏的性质是不同的吧。</p><p>不知道怎么去处理人际关系，找不到满意的队友一起打比赛，再加上社恐且不会说话，说不定无意之中就会让一些人不高兴。</p><p>（UPD：还是顺利组队了吧）</p><h2 id="竞赛"><a href="#竞赛" class="headerlink" title="竞赛"></a>竞赛</h2><p>大一的队长暑假集训就开始失联了，或许他是觉得算法竞赛这条路实在不适合自己吧。和另外一个队友坚持到暑假结束。但其实暑假的时候我也没认真训练，总是沉迷游戏，直接导致一年来进展极其缓慢。即使在学校也很少有沉下心来刷题的时候，或许真该少呆在寝室里，多出去走走，多去外面学习。</p><p>想争取个OI爷来但是好像无果，一个巨巨貌似很忙而且没想好要不要打竞赛，看他好像也在前端折腾的比较多，我还是不要打扰比较好。（不会被学弟讨厌了吧）</p><p>貌似情况越来越糟糕了……. </p><p>单挑CCPC网络赛，签完两题挂机。洛谷上面到现在还不能稳定出蓝题（甚至绿题也可能会被卡），CF上了蓝名之后没有进步，而还有一个多月就要到年底了。。。核心课也学不会（电子电路有点无语），专业技能也几乎为0…</p><p>竞赛这条道越走越觉得不好走，但还是相信柳暗花明，只不过需要我对自己做一些改良…我自己的学习状态还是很糟糕的。</p><h2 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h2><p>规划是得照着目标来的。我真的真的真的很想进入游戏行业，看了一圈各大厂的校招，适合的大概是各大厂的程序技术类。。（图形渲染、引擎研发、技术美术之类）</p><p>所以我得往图形学方面靠，多多动手。</p><p>但这些怎么说呢，现阶段专业课还没学明白，而且图形学专业敲门砖要好一点，还是得读研，再多沉淀几年技术。。（大二还基本没开始，要是直接就业我有点慌了）</p><p>要是得读研的话，那就大概率必须去保研了。保研，大一的成绩在16%，勉强在20%以内，但是除了本校要保个好研究生够呛……图形学的实验室大概是，，浙大、中科大、清华、北航山大国科大这些比较强？。。。也不太懂。总之现在我有个当务之急就是把综测成绩拉起来，绩点拉起来，好好学，学的知识p用没有你也认了，就当是高考学的那些东西。</p><p>所以说保研必须得拉满绩点，有点艰难。大一已经有点失败了，大二读了一个多月感觉也有点糟糕。可是大三结束就要排名了，时间不多了呀。</p><p>所以说真的不能再玩了，真的不能再玩了， 真的不能再玩了！！！！！</p><p>其次是竞赛方面，要做好的话还得大下功夫。停止玩游戏吧。假期余额多用在竞赛上。有人学了一年还是个蓝名，我不说是谁。有人学了一年打练习赛只会签到，我不说是谁。</p><p>再落实到具体行动上，就是平时多严格要求自己，少呆在寝室，好好锻炼，尽量住自习的地方。。。</p><p>每周设定定量的任务去完成，每节课上完一定搞懂。</p><p>笔记本专门记录每天的学习情况。</p><p>好好吃饭，不要熬夜，不要贪早床，睡够6小时，睡午觉，不超过1小时。</p>]]></content>
    
    
    <summary type="html">这下改过自新了</summary>
    
    
    
    <category term="牢骚" scheme="https://eykenis.github.io/categories/%E7%89%A2%E9%AA%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>Codeforces Round 747 (Div. 2)</title>
    <link href="https://eykenis.github.io/2021/10/09/Codeforces-Round-747-Div-2/"/>
    <id>https://eykenis.github.io/2021/10/09/Codeforces-Round-747-Div-2/</id>
    <published>2021-10-09T01:15:13.000Z</published>
    <updated>2021-11-03T13:26:52.244Z</updated>
    
    <content type="html"><![CDATA[<p>上蓝了！</p><h1 id="A-Consecutive-Sum-Riddle"><a href="#A-Consecutive-Sum-Riddle" class="headerlink" title="A. Consecutive Sum Riddle"></a>A. Consecutive Sum Riddle</h1><p><strong>题意</strong></p><p>给一个$n$，你需要构造一个整数区间$[L,R]$,其和等于$n$<br><strong>分析</strong></p><p>取$[-n+1,n]$即可。</p><h1 id="B-Special-Numbers"><a href="#B-Special-Numbers" class="headerlink" title="B. Special Numbers"></a>B. Special Numbers</h1><p><strong>题意</strong></p><p>给出一个 $n$ , 另一个数 $m$ 如果可以表示成 $n$ 的不同幂次之和，则称 $m$ 是 special 的。现在给出 $n$， 将所有 special 的数升序排序，问第 $k$ 个数是多少。</p><p><strong>分析</strong></p><p>假如一个数是 $n^0+n^1+n^4$ ， 我们不妨用二进制表示，转化为 $10011_{(2)}$ ，也就是说现在给了一个二进制的数，但是其每个位的权值要乘以 $n$. 那么第 $k$ 个数表示成二进制自然就是 $k_{(2)}$ 本身了，模拟快速幂求即可。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="keyword">int</span> n, k;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(k) &#123;</span><br><span class="line">            <span class="keyword">if</span>(k &amp; <span class="number">1</span>) &#123;</span><br><span class="line">                ans = (ans + x) % mod;</span><br><span class="line">            &#125;</span><br><span class="line">            x = (x * n) % mod;</span><br><span class="line">            k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Make-Them-Equal"><a href="#C-Make-Them-Equal" class="headerlink" title="C. Make Them Equal"></a>C. Make Them Equal</h1><p><strong>题意</strong></p><p>给一串字符串，你要通过一些操作把它的所有字符全部变成 $c$：</p><p>选择一个数字 $x, 1\leq x\leq n$. 字符串中所有下标 $i$ 中 $i\ mod\ x \neq 0$ 的下标都将被替换为 $c$.</p><p><strong>分析</strong></p><p>首先贪心考虑，如果 $x$ 取 $n$，那么 $[1,n-1]$ 必定全部都可以替换，接下来再取个 $n-1$，把 $n$ 替换即可。故不管怎样，答案最多为2.</p><p>所以只需要考虑答案为1的情况了。这里我们可以直接暴力统计所有不等于 $c$ 的下标的因数，如果不同因数的个数小于 $n$ ，说明一定可以找到一个 $x$ 使得所有字符为 $c$.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> v[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        string s; <span class="keyword">char</span> c;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        s += <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">        string tmp;</span><br><span class="line">        cin &gt;&gt; c;</span><br><span class="line">        cin &gt;&gt; tmp;</span><br><span class="line">        s += tmp;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; pos;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) v[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="keyword">if</span>(s[i] != c) &#123;</span><br><span class="line">            flag = <span class="number">0</span>; pos.<span class="built_in">pb</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : pos) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!v[i]) v[i] = <span class="number">1</span>, cnt++;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j * j &lt;= i; ++j) &#123;</span><br><span class="line">                <span class="keyword">if</span>(i % j == <span class="number">0</span> &amp;&amp; !v[j]) v[j] = <span class="number">1</span>, cnt++;</span><br><span class="line">                <span class="keyword">if</span>(i % j == <span class="number">0</span> &amp;&amp; !v[i / j]) v[i / j] = <span class="number">1</span>, cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (cnt == n) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">            cout &lt;&lt; n &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; n - <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="keyword">if</span>(!v[i]) &#123;</span><br><span class="line">                cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-The-Number-of-Imposters"><a href="#D-The-Number-of-Imposters" class="headerlink" title="D. The Number of Imposters"></a>D. The Number of Imposters</h1><p><strong>题意</strong></p><p>有一张 $n$ 个节点的图，每条边都是单向边 $(i,j,c)$ 表示第 $i$ 个人说第 $j$ 个人是个说谎的人/说实话的人。且如果一个人是说谎的人，那他说的一定是假，否则一定是真。</p><p>问这张图最多有几个说实话的人。</p><p><strong>分析</strong></p><p>单向图其实可以直接转化为无向图，这是等价的。 $a$ 说 $b$ 是假的，其实和 $b$ 说 $a$ 假是一样的，可以列真值表证明。</p><p>而且，只要连通图中有一个人的真假确定了，其他人的真假一定也确定了。</p><p>所以，转化为无向图之后再记忆化搜索就可以了，对每个连通块进行 dfs ，$dp[i][0]$ 表示第 $i$ 人说谎的情况下他和他的子节点中说实话的人有多少；$dp[i][1]$ 表示 $i$ 说实话的情况下的答案。</p><p>注意矛盾的情况，搜索过程中每个节点要保存自己的当前真假情况，这样在子节点指回祖先节点时判断一下矛不矛盾就可以了。</p><p>所以对每个连通块搜索的根节点，假设其为实话或者谎话，分别 dfs 两次，取最大值即可。</p><hr><p>其实也可以写的更简单的，但是昨天越写越奇怪，有点没稳住，思路太乱了。</p><p>不仅思路较为冗杂，代码也特别丑qwq</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][<span class="number">2</span>]; <span class="comment">// i号节点说谎/不说谎的答案</span></span><br><span class="line">vector&lt;pii&gt; e[maxn];</span><br><span class="line"><span class="keyword">bool</span> v[maxn];</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> fa[maxn];</span><br><span class="line"><span class="keyword">int</span> st[maxn]; <span class="comment">// 当前的status 1说谎，2不说谎</span></span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; tmp;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> l)</span> </span>&#123; <span class="comment">// l:0说谎，1不说谎</span></span><br><span class="line">    tmp.<span class="built_in">pb</span>(i);</span><br><span class="line">    st[i] = l + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;x : e[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(st[x.first]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(l == <span class="number">1</span> &amp;&amp; x.second == <span class="number">0</span> &amp;&amp; st[x.first] == <span class="number">2</span>)&#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(l == <span class="number">1</span> &amp;&amp; x.second == <span class="number">1</span> &amp;&amp; st[x.first] == <span class="number">1</span>) &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(l == <span class="number">0</span> &amp;&amp; x.second == <span class="number">1</span> &amp;&amp; st[x.first] == <span class="number">2</span>) &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(l == <span class="number">0</span> &amp;&amp; x.second == <span class="number">0</span> &amp;&amp; st[x.first] == <span class="number">1</span>) &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(l == <span class="number">1</span> &amp;&amp; x.second == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">dfs</span>(x.first, <span class="number">0</span>);</span><br><span class="line">            dp[i][<span class="number">1</span>] += dp[x.first][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(l == <span class="number">1</span> &amp;&amp; x.second == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">dfs</span>(x.first, <span class="number">1</span>);</span><br><span class="line">            dp[i][<span class="number">1</span>] += dp[x.first][<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(l == <span class="number">0</span> &amp;&amp; x.second == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">dfs</span>(x.first, <span class="number">1</span>);</span><br><span class="line">            dp[i][<span class="number">0</span>] += dp[x.first][<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">dfs</span>(x.first, <span class="number">0</span>);</span><br><span class="line">            dp[i][<span class="number">0</span>] += dp[x.first][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">        flag = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) &#123;</span><br><span class="line">            dp[i][<span class="number">0</span>] = <span class="number">0</span>, dp[i][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">            fa[i] = i;</span><br><span class="line">            v[i] = <span class="number">0</span>;</span><br><span class="line">            st[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> l, r; string s;</span><br><span class="line">        <span class="keyword">while</span>(m--) &#123;</span><br><span class="line">            cin &gt;&gt; l &gt;&gt; r &gt;&gt; s;</span><br><span class="line">            <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="string">&#x27;i&#x27;</span>) &#123;</span><br><span class="line">                e[l].<span class="built_in">pb</span>(&#123;r, <span class="number">0</span>&#125;);</span><br><span class="line">                e[r].<span class="built_in">pb</span>(&#123;l, <span class="number">0</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                e[l].<span class="built_in">pb</span>(&#123;r, <span class="number">1</span>&#125;);</span><br><span class="line">                e[r].<span class="built_in">pb</span>(&#123;l, <span class="number">1</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!st[i]) &#123;</span><br><span class="line">                tmp.<span class="built_in">clear</span>();</span><br><span class="line">                <span class="built_in">dfs</span>(i, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;x : tmp) st[x] = <span class="number">0</span>;</span><br><span class="line">                <span class="built_in">dfs</span>(i, <span class="number">1</span>);</span><br><span class="line">                ans += <span class="built_in">max</span>(dp[i][<span class="number">0</span>], dp[i][<span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag) cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) e[i].<span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="E1-Rubik’s-Cube-Coloring-easy-version"><a href="#E1-Rubik’s-Cube-Coloring-easy-version" class="headerlink" title="E1. Rubik’s Cube Coloring (easy version)"></a>E1. Rubik’s Cube Coloring (easy version)</h1><p>这种E1还是放Div. 3去吧，能当A做了，我不好说。</p><p>属于是送经验了（</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(y) &#123;</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) &#123;</span><br><span class="line">            ans = (ans * x) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        x = (x * x) % mod;</span><br><span class="line">        y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    t = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="keyword">int</span> k;</span><br><span class="line">        cin &gt;&gt; k;</span><br><span class="line">        <span class="keyword">int</span> p = (<span class="number">1LL</span> &lt;&lt; k) - <span class="number">1LL</span>;</span><br><span class="line">        cout &lt;&lt; (<span class="built_in">fpow</span>(<span class="number">4</span>, p - <span class="number">1LL</span>) * <span class="number">6LL</span>) % mod &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">蓝名力</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>luogu</title>
    <link href="https://eykenis.github.io/2021/09/23/luogu/"/>
    <id>https://eykenis.github.io/2021/09/23/luogu/</id>
    <published>2021-09-23T11:51:33.000Z</published>
    <updated>2021-12-14T07:39:02.674Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="9-23"><a href="#9-23" class="headerlink" title="9.23"></a>9.23</h1><h2 id="P2032-扫描"><a href="#P2032-扫描" class="headerlink" title="P2032 扫描"></a><a href="https://www.luogu.com.cn/problem/P2032">P2032 扫描</a></h2><p>单调队列求滑动窗口最大值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">deque&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt; q;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pu</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i] &gt;= q.<span class="built_in">front</span>().first)&#123;</span><br><span class="line">        q.<span class="built_in">clear</span>();</span><br><span class="line">        q.<span class="built_in">push_front</span>(&#123;a[i], i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(a[i] &gt;= q.<span class="built_in">back</span>().first) q.<span class="built_in">pop_back</span>();</span><br><span class="line">        q.<span class="built_in">push_back</span>(&#123;a[i], i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    q.<span class="built_in">push_front</span>(&#123;a[<span class="number">1</span>], <span class="number">1</span>&#125;);</span><br><span class="line">    fors(i, <span class="number">2</span>, k)&#123;</span><br><span class="line">        <span class="built_in">pu</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; q.<span class="built_in">front</span>().first &lt;&lt; endl;</span><br><span class="line">    fors(i, k + <span class="number">1</span>, n)&#123;</span><br><span class="line">        <span class="keyword">while</span>(q.<span class="built_in">front</span>().second &lt; <span class="number">1</span> - k + i)&#123;</span><br><span class="line">            q.<span class="built_in">pop_front</span>(); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">pu</span>(i);</span><br><span class="line">        cout &lt;&lt; q.<span class="built_in">front</span>().first &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1440-求m区间内的最小值"><a href="#P1440-求m区间内的最小值" class="headerlink" title="P1440 求m区间内的最小值"></a><a href="https://www.luogu.com.cn/problem/P1440#submit">P1440 求m区间内的最小值</a></h2><p>单调队列の双倍经验</p><p>注意要卡常（不开LL，用快读，printf）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">deque&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt; q;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pu</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        q.<span class="built_in">push_front</span>(&#123;a[i], i&#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a[i] &lt;= q.<span class="built_in">front</span>().first)&#123;</span><br><span class="line">        q.<span class="built_in">clear</span>();</span><br><span class="line">        q.<span class="built_in">push_front</span>(&#123;a[i], i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(a[i] &lt;= q.<span class="built_in">back</span>().first) q.<span class="built_in">pop_back</span>();</span><br><span class="line">        q.<span class="built_in">push_back</span>(&#123;a[i], i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> data = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(ch &lt; <span class="string">&#x27;0&#x27;</span>||ch &gt; <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">            f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(ch &gt;= <span class="string">&#x27;0&#x27;</span>&amp;&amp;ch &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        data = (data&lt;&lt;<span class="number">3</span>) + (data&lt;&lt;<span class="number">1</span>) + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * data; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// DDLC_ESCAPE_PLAN_FAILED;</span></span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    n = <span class="built_in">rd</span>(), k = <span class="built_in">rd</span>();</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        a[i] = <span class="built_in">rd</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">    q.<span class="built_in">push_front</span>(&#123;a[<span class="number">1</span>], <span class="number">1</span>&#125;);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, q.<span class="built_in">front</span>().first);</span><br><span class="line">    fors(i, <span class="number">2</span>, n - <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!q.<span class="built_in">empty</span>() &amp;&amp; q.<span class="built_in">front</span>().second &lt; <span class="number">1</span> - k + i)&#123;</span><br><span class="line">            q.<span class="built_in">pop_front</span>(); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">pu</span>(i);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, q.<span class="built_in">front</span>().first);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1886-滑动窗口"><a href="#P1886-滑动窗口" class="headerlink" title="P1886 滑动窗口"></a><a href="https://www.luogu.com.cn/problem/P1886">P1886 滑动窗口</a></h2><p>三倍经验，滑动窗口也可以写得更简洁。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line">deque&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt; mx, mn;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; x, y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!mx.<span class="built_in">empty</span>() &amp;&amp; a[i] &gt;= mx.<span class="built_in">back</span>().first) mx.<span class="built_in">pop_back</span>();</span><br><span class="line">        <span class="keyword">while</span>(!mx.<span class="built_in">empty</span>() &amp;&amp; mx.<span class="built_in">front</span>().second &lt; i - k + <span class="number">1</span>) mx.<span class="built_in">pop_front</span>();</span><br><span class="line">        mx.<span class="built_in">push_back</span>(&#123;a[i], i&#125;);</span><br><span class="line">        <span class="keyword">while</span>(!mn.<span class="built_in">empty</span>() &amp;&amp; a[i] &lt;= mn.<span class="built_in">back</span>().first) mn.<span class="built_in">pop_back</span>();</span><br><span class="line">        <span class="keyword">while</span>(!mn.<span class="built_in">empty</span>() &amp;&amp; mn.<span class="built_in">front</span>().second &lt; i - k + <span class="number">1</span>) mn.<span class="built_in">pop_front</span>();</span><br><span class="line">        mn.<span class="built_in">push_back</span>(&#123;a[i], i&#125;);</span><br><span class="line">        <span class="keyword">if</span>(i &gt;= k) x.<span class="built_in">push_back</span>(mx.<span class="built_in">front</span>().first), y.<span class="built_in">push_back</span>(mn.<span class="built_in">front</span>().first);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x.<span class="built_in">size</span>(); ++i) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, y[i]); <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; y.<span class="built_in">size</span>(); ++i) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, x[i]); <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3143-USACO16OPEN-Diamond-Collector-S"><a href="#P3143-USACO16OPEN-Diamond-Collector-S" class="headerlink" title="P3143 [USACO16OPEN]Diamond Collector S"></a><a href="https://www.luogu.com.cn/problem/P3143">P3143 [USACO16OPEN]Diamond Collector S</a></h2><p>双指针，注意题目要求两个区间不能重叠，故要左右分别枚举，再遍历更新答案。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">50005</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> L[maxn] = &#123;<span class="number">0</span>&#125;, R[maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">sort</span>(a, a + n);</span><br><span class="line">    <span class="keyword">int</span> r = <span class="number">0</span>, l = n - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        <span class="keyword">while</span>(r &lt; n &amp;&amp; a[r] - a[i] &lt;= k) r++;</span><br><span class="line">        R[i] = r - i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i)&#123;</span><br><span class="line">        <span class="keyword">while</span>(l &gt;= <span class="number">0</span> &amp;&amp; a[i] - a[l] &lt;= k) l--;</span><br><span class="line">        L[i] = i - l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>, lmax = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        ans = <span class="built_in">max</span>(ans, lmax + R[i]);</span><br><span class="line">        lmax = <span class="built_in">max</span>(L[i], lmax);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="9-25"><a href="#9-25" class="headerlink" title="9.25"></a>9.25</h1><p>打了网络赛才发现，自己的数学就是一坨⑩，让人完全看不下去。学！</p><h2 id="P1143-进制转换"><a href="#P1143-进制转换" class="headerlink" title="P1143 进制转换"></a><a href="https://www.luogu.com.cn/problem/P1143">P1143 进制转换</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;    </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    t = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="keyword">int</span> to;</span><br><span class="line">        cin &gt;&gt; to;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line">                ans = ans * n + s[i] - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> ans = ans * n + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        string fin;</span><br><span class="line">        <span class="keyword">while</span>(ans)&#123;</span><br><span class="line">            <span class="keyword">int</span> res = ans % to;</span><br><span class="line">            <span class="keyword">if</span>(res &gt;= <span class="number">10</span>) res = res - <span class="number">10</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">            <span class="keyword">else</span> res += <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            fin += res;</span><br><span class="line">            ans /= to;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">reverse</span>(fin.<span class="built_in">begin</span>(), fin.<span class="built_in">end</span>());</span><br><span class="line">        cout &lt;&lt; fin &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1469-找筷子"><a href="#P1469-找筷子" class="headerlink" title="P1469 找筷子"></a><a href="https://www.luogu.com.cn/problem/P1469">P1469 找筷子</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">int</span> x, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n--) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x), ans ^= x;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1100-高低位交换"><a href="#P1100-高低位交换" class="headerlink" title="P1100 高低位交换"></a><a href="https://www.luogu.com.cn/problem/P1100">P1100 高低位交换</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> x;</span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    cout &lt;&lt; (x &lt;&lt; <span class="number">16</span>) + (x &gt;&gt; <span class="number">16</span>) &lt;&lt; endl; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1017-NOIP2000-提高组-进制转换"><a href="#P1017-NOIP2000-提高组-进制转换" class="headerlink" title="P1017 [NOIP2000 提高组] 进制转换"></a><a href="https://www.luogu.com.cn/problem/P1017">P1017 [NOIP2000 提高组] 进制转换</a></h2><p>余数可能出现负数，将其加上进制数，将商减去进制数即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x, to;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;to);</span><br><span class="line">    string ans;</span><br><span class="line">    <span class="keyword">int</span> r = x;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        <span class="keyword">int</span> res = x % to;</span><br><span class="line">        <span class="keyword">if</span>(res &lt; <span class="number">0</span>) res -= to, x += to;</span><br><span class="line">        <span class="keyword">if</span>(res &gt;= <span class="number">10</span>) res = res - <span class="number">10</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> res = res + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ans += res;</span><br><span class="line">        x /= to;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">reverse</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d=%s(base%d)&quot;</span>, r, ans.<span class="built_in">c_str</span>(), to);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1866-编号-洛谷"><a href="#P1866-编号-洛谷" class="headerlink" title="P1866 编号 - 洛谷"></a><a href="https://www.luogu.com.cn/problem/P1866">P1866 编号 - 洛谷</a></h2><p>高中最简单的排列组合方法之一——优限法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">55</span>;</span><br><span class="line"><span class="keyword">int</span> m[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;N);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;m[i]);</span><br><span class="line">    <span class="built_in">sort</span>(m + <span class="number">1</span>, m + <span class="number">1</span> + N);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i)&#123;</span><br><span class="line">        ans = (ans * (m[i] - i + <span class="number">1</span>)) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2822-NOIP2016-提高组-组合数问题"><a href="#P2822-NOIP2016-提高组-组合数问题" class="headerlink" title="P2822 [NOIP2016 提高组] 组合数问题"></a><a href="https://www.luogu.com.cn/problem/P2822">P2822 [NOIP2016 提高组] 组合数问题</a></h2><p>二维前缀和</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> t, k;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2005</span>;</span><br><span class="line"><span class="keyword">int</span> c[maxn][maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> pre[maxn][maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prework</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    pre[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2000</span>; ++i)&#123;</span><br><span class="line">        c[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        pre[i][<span class="number">0</span>] = (<span class="number">1</span> % k == <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2000</span>; ++j)&#123;</span><br><span class="line">            c[i][j] = c[i - <span class="number">1</span>][j - <span class="number">1</span>] + c[i - <span class="number">1</span>][j];</span><br><span class="line">            c[i][j] %= k;</span><br><span class="line">            pre[i][j] = pre[i - <span class="number">1</span>][j] + pre[i][j - <span class="number">1</span>] - pre[i - <span class="number">1</span>][j - <span class="number">1</span>] + (j &lt;= i &amp;&amp; c[i][j] == <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; t &gt;&gt; k;</span><br><span class="line">    <span class="built_in">prework</span>();</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n, m;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">        <span class="keyword">if</span>(n &lt; m) m = n;</span><br><span class="line">        cout &lt;&lt; pre[n][m] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2789-直线交点数"><a href="#P2789-直线交点数" class="headerlink" title="P2789 直线交点数"></a><a href="https://www.luogu.com.cn/problem/P2789">P2789 直线交点数</a></h2><p>注意构造好的搜索方式</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">bool</span> f[<span class="number">100005</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!f[r]) f[r] = <span class="number">1</span>, ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> s = p; s; --s)&#123;</span><br><span class="line">        <span class="built_in">dfs</span>(p - s, r + (p - s) * s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">dfs</span>(n, <span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3913-车的攻击"><a href="#P3913-车的攻击" class="headerlink" title="P3913 车的攻击"></a><a href="https://www.luogu.com.cn/problem/P3913">P3913 车的攻击</a></h2><p>容斥</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line">unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">bool</span>&gt; r, c;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; ++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">        r[x] = <span class="number">1</span>, c[y] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; (r.<span class="built_in">size</span>() + c.<span class="built_in">size</span>()) * n - r.<span class="built_in">size</span>() * c.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2638-安全系统"><a href="#P2638-安全系统" class="headerlink" title="P2638 安全系统"></a><a href="https://www.luogu.com.cn/problem/P2638#submit">P2638 安全系统</a></h2><p>组合数学只会瞎搞</p><p>隔板法，请</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int unsigned long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, a, b;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">55</span>;</span><br><span class="line"><span class="keyword">int</span> c[maxn][maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prework</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    c[<span class="number">1</span>][<span class="number">0</span>] = c[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">50</span>; ++i)&#123;</span><br><span class="line">        c[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; ++j)&#123;</span><br><span class="line">            c[i][j] = c[i - <span class="number">1</span>][j - <span class="number">1</span>] + c[i - <span class="number">1</span>][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">prework</span>();</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= a; ++i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= b; ++j)&#123;</span><br><span class="line">            ans += c[n + i - <span class="number">1</span>][n - <span class="number">1</span>] * c[n + j - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="9-26"><a href="#9-26" class="headerlink" title="9.26"></a>9.26</h1><h2 id="P1029-NOIP2001-普及组-最大公约数和最小公倍数问题"><a href="#P1029-NOIP2001-普及组-最大公约数和最小公倍数问题" class="headerlink" title="P1029 [NOIP2001 普及组] 最大公约数和最小公倍数问题"></a><a href="https://www.luogu.com.cn/problem/P1029">P1029 [NOIP2001 普及组] 最大公约数和最小公倍数问题</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    <span class="comment">// 找x*y的因子</span></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> u = x * y;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= u; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(u % i) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> r1 = i, r2 = u / i;</span><br><span class="line">        <span class="keyword">int</span> p = __gcd(r1, r2);</span><br><span class="line">        <span class="keyword">if</span>(p != x || u / p != y) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(r1 == r2) ans++;</span><br><span class="line">        <span class="keyword">else</span> ans += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1072-NOIP2009-提高组-Hankson-的趣味题"><a href="#P1072-NOIP2009-提高组-Hankson-的趣味题" class="headerlink" title="P1072 [NOIP2009 提高组] Hankson 的趣味题"></a><a href="https://www.luogu.com.cn/problem/P1072">P1072 [NOIP2009 提高组] Hankson 的趣味题</a></h2><p>菜</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a0, a1, b0, b1;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;a0, &amp;a1, &amp;b0, &amp;b1);</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i * i &lt;= b1; ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b1 % i) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%a1==<span class="number">0</span>&amp;&amp;<span class="built_in">gcd</span>(i/a1,a0/a1)==<span class="number">1</span>&amp;&amp;<span class="built_in">gcd</span>(b1/b0,b1/i)==<span class="number">1</span>) ans++;</span><br><span class="line">            <span class="keyword">int</span> y = b1 / i;</span><br><span class="line">            <span class="keyword">if</span>(i == y) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(y%a1==<span class="number">0</span>&amp;&amp;<span class="built_in">gcd</span>(y/a1,a0/a1)==<span class="number">1</span>&amp;&amp;<span class="built_in">gcd</span>(b1/b0,b1/y)==<span class="number">1</span>) ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1908-逆序对"><a href="#P1908-逆序对" class="headerlink" title="P1908 逆序对"></a><a href="https://www.luogu.com.cn/problem/P1908">P1908 逆序对</a></h2><p>就多练</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> tmp[maxn];</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(r == l) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">merge</span>(l, mid), <span class="built_in">merge</span>(mid + <span class="number">1</span>, r);</span><br><span class="line">    <span class="keyword">int</span> p1 = l, p2 = mid + <span class="number">1</span>, p3 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p1 &lt;= mid || p2 &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span>((p1 &gt; mid) || (p2 &lt;= r &amp;&amp; a[p1] &gt; a[p2])) tmp[p3++] = a[p2++], ans += mid - p1 + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> tmp[p3++] = a[p1++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = l; i &lt;= r; ++i)&#123;</span><br><span class="line">        a[i] = tmp[i - l];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="built_in">merge</span>(<span class="number">1</span>, n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1966-NOIP2013-提高组-火柴排队"><a href="#P1966-NOIP2013-提高组-火柴排队" class="headerlink" title="P1966 [NOIP2013 提高组] 火柴排队"></a><a href="https://www.luogu.com.cn/problem/P1966#submit">P1966 [NOIP2013 提高组] 火柴排队</a></h2><p>先找出数学性质，知道可以让其中一组不动，另一组中每个火柴二分找到第一组中和自己最接近的高度的位置，然后按这个位置归并计数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e8</span> - <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> val, idx, midx;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node&amp; x)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> val &lt; x.val;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> ==(<span class="keyword">const</span> <span class="keyword">int</span>&amp; x)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> val == x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn], b[maxn], tmp[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[mid].val &gt;= x)&#123;</span><br><span class="line">            r = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(r == l) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">merge</span>(l, mid), <span class="built_in">merge</span>(mid + <span class="number">1</span>, r);</span><br><span class="line">    <span class="keyword">int</span> p1 = l, p2 = mid + <span class="number">1</span>, p3 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p1 &lt;= mid || p2 &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p1 &gt; mid || (p2 &lt;= r &amp;&amp; b[p2].midx &lt; b[p1].midx)) tmp[p3++] = b[p2++], ans += mid - p1 + <span class="number">1</span>, ans %= mod;</span><br><span class="line">        <span class="keyword">else</span> tmp[p3++] = b[p1++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = l; i &lt;= r; ++i) b[i] = tmp[i - l];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]), a[i].idx = i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;b[i]), b[i].idx = i;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> r = <span class="built_in">bs</span>(b[i].val);</span><br><span class="line">        b[i].midx = a[r].idx;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">merge</span>(<span class="number">1</span>, n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="9-29"><a href="#9-29" class="headerlink" title="9.29"></a>9.29</h1><p>前两天满课太难受了…都在补CF的题，感觉补CF的题效率有点低，一补就是一晚上还补不到几题。</p><p>看到CDQ分治本来想直接学，但发现树状数组没学，再往前又发现倍增的思想也不熟……我的知识还是没成体系啊</p><h2 id="P3374-【模板】树状数组-1"><a href="#P3374-【模板】树状数组-1" class="headerlink" title="P3374 【模板】树状数组 1"></a><a href="https://www.luogu.com.cn/problem/P3374">P3374 【模板】树状数组 1</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) x&amp;(-(x))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], c[maxn];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span>&#123; <span class="comment">// 单点加k</span></span><br><span class="line">    <span class="keyword">while</span>(x &lt;= n)&#123;</span><br><span class="line">        c[x] += k;</span><br><span class="line">        x += <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = x; i &lt;= n; i += <span class="built_in">lowbit</span>(i))&#123;</span><br><span class="line">        c[i] += y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123; <span class="comment">// sum of 1...x</span></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">        ans += c[x];</span><br><span class="line">        x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">intsum</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(r) - <span class="built_in">sum</span>(l - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">int</span> z;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;z);</span><br><span class="line">        <span class="built_in">update</span>(i, z, n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> x, k;</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;z, &amp;x, &amp;k);</span><br><span class="line">        <span class="keyword">if</span>(z == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">add</span>(x, k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">intsum</span>(x, k));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3368-【模板】树状数组-2"><a href="#P3368-【模板】树状数组-2" class="headerlink" title="P3368 【模板】树状数组 2"></a><a href="https://www.luogu.com.cn/problem/P3368">P3368 【模板】树状数组 2</a></h2><p>差分一下，就能把<strong>单点修改+区间查询</strong>变成<strong>单点查询+区间修改</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) x&amp;(-(x))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], b[maxn], c[maxn];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x &lt;= n)&#123;</span><br><span class="line">        c[x] += k;</span><br><span class="line">        x += <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">        ans += c[x];</span><br><span class="line">        x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) b[i] = a[i] - a[i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">add</span>(i, b[i]);</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> z, x, y, k;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;z);</span><br><span class="line">        <span class="keyword">if</span>(z == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;k);</span><br><span class="line">            <span class="built_in">add</span>(x, k), <span class="built_in">add</span>(y + <span class="number">1</span>, -k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sum</span>(x));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过复习一下之后就回想起来，树状数组也确实很好理解，难怪是普及题啊</p><h2 id="P2345-USACO04OPEN-MooFest-G"><a href="#P2345-USACO04OPEN-MooFest-G" class="headerlink" title="P2345 [USACO04OPEN]MooFest G"></a><a href="https://www.luogu.com.cn/problem/P2345">P2345 [USACO04OPEN]MooFest G</a></h2><p>排序离散化后树状数组直接解，但是还没想清楚CDQ分治应该怎么做</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v, x, id;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node&amp; y)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x &lt; y.x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> node&amp; x, <span class="keyword">const</span> node&amp; y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.v &lt; y.v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> c[maxn], s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x &lt;= n)&#123;</span><br><span class="line">        c[x] += k;</span><br><span class="line">        x += <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adds</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x &lt;= n)&#123;</span><br><span class="line">        s[x] += k;</span><br><span class="line">        x += <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">        ans += c[x];</span><br><span class="line">        x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sums</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">        ans += s[x];</span><br><span class="line">        x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;a[i].v, &amp;a[i].x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) a[i].id = i;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n, cmp);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="built_in">sum</span>(a[i].id - <span class="number">1</span>);</span><br><span class="line">        ans += a[i].v * (cnt * a[i].x - <span class="built_in">sums</span>(a[i].id - <span class="number">1</span>));</span><br><span class="line">        cnt = <span class="built_in">sum</span>(n) - <span class="built_in">sum</span>(a[i].id);</span><br><span class="line">        ans += a[i].v * (<span class="built_in">sums</span>(n) - <span class="built_in">sums</span>(a[i].id) - cnt * a[i].x);</span><br><span class="line">        <span class="built_in">add</span>(a[i].id, <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">adds</span>(a[i].id, a[i].x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2926-USACO08DEC-Patting-Heads-S"><a href="#P2926-USACO08DEC-Patting-Heads-S" class="headerlink" title="P2926 [USACO08DEC]Patting Heads S"></a><a href="https://www.luogu.com.cn/problem/P2926">P2926 [USACO08DEC]Patting Heads S</a></h2><p>题意讲反了，本来一点也不难吧</p><p>不过都一样，求因子复杂度$O(\sqrt n)$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">100005</span>];</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> d[<span class="number">100005</span>];</span><br><span class="line"><span class="comment">// vector&lt;int&gt; v[maxn];</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">        d[i] = x;</span><br><span class="line">        <span class="comment">// v[x].push_back(i);</span></span><br><span class="line">        a[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j * j &lt;= d[i]; ++j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(d[i] % j) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[j])&#123;</span><br><span class="line">                ans[i] += a[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(j == d[i]) ans[i]--;</span><br><span class="line">            <span class="keyword">if</span>(j == d[i] / j) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[d[i] / j])&#123;</span><br><span class="line">                ans[i] += a[d[i] / j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(d[i] / j == d[i]) ans[i]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-1"><a href="#10-1" class="headerlink" title="10.1"></a>10.1</h1><p>国庆假期的学习计划：</p><p>目前需要学的知识点：</p><p><strong>CDQ分治，主席树（可持久化线段树）</strong></p><p>然后就是打牛客的国庆派对，补题，看看还有哪些可学的知识点</p><p>还有个任务就是上蓝名</p><h1 id="10-4"><a href="#10-4" class="headerlink" title="10.4"></a>10.4</h1><h2 id="P3810-【模板】三维偏序（陌上花开）"><a href="#P3810-【模板】三维偏序（陌上花开）" class="headerlink" title="P3810 【模板】三维偏序（陌上花开）"></a><a href="https://www.luogu.com.cn/problem/P3810">P3810 【模板】三维偏序（陌上花开）</a></h2><p>看cdq的概念解读，各种解释，OI wiki，总是不提怎么归并处理，怎么解决影响问题。真做了题，才算是祛魅，也不是多么复杂的算法嘛（CDQ套CDQ警告）</p><p>知乎上的洛谷日报对基础CDQ讲的很透彻，点赞。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> z[maxn];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> cnt[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(x &lt;= m) &#123;</span><br><span class="line">z[x] += k;</span><br><span class="line">x += <span class="built_in">lowbit</span>(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(x &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">ans += z[x];</span><br><span class="line">x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> a, b, c, id;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node&amp; x)<span class="keyword">const</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(a != x.a) <span class="keyword">return</span> a &lt; x.a;</span><br><span class="line"><span class="keyword">if</span>(c != x.c) <span class="keyword">return</span> c &lt; x.c;</span><br><span class="line"><span class="keyword">return</span> b &lt; x.b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;s[maxn], tmp[maxn];</span><br><span class="line">map&lt; pair &lt;pii, <span class="keyword">int</span>&gt;, <span class="keyword">int</span>&gt; mp;</span><br><span class="line"><span class="keyword">int</span> ans[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span> </span>&#123;</span><br><span class="line">fors(i, <span class="number">1</span>, n) &#123;</span><br><span class="line">cnt[i] += mp[<span class="built_in">make_pair</span>(<span class="built_in">make_pair</span>(s[i].a, s[i].b), s[i].c)];</span><br><span class="line">ans[i] += cnt[i] - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cdq</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(r == l) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">cdq</span>(l, mid);</span><br><span class="line"><span class="built_in">cdq</span>(mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="comment">// 统计答案并按b排序</span></span><br><span class="line"><span class="comment">// (c)建树状数组</span></span><br><span class="line"><span class="keyword">int</span> p1 = l, p2 = mid + <span class="number">1</span>, p3 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (p1 &lt;= mid || p2 &lt;= r) &#123;</span><br><span class="line"><span class="keyword">if</span> (p1 &gt; mid || (p2 &lt;= r &amp;&amp; s[p1].b &gt; s[p2].b)) &#123;</span><br><span class="line">ans[s[p2].id] += <span class="built_in">sum</span>(s[p2].c);</span><br><span class="line">tmp[p3++] = s[p2++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">add</span>(s[p1].c, cnt[s[p1].id]);</span><br><span class="line"><span class="comment">// ans[s[p2].id] += sum(s[p2].c - 1);</span></span><br><span class="line">tmp[p3++] = s[p1++];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt;= mid; ++i) <span class="built_in">add</span>(s[i].c, -cnt[s[i].id]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt;= r; ++i) &#123;</span><br><span class="line">s[i] = tmp[i - l];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> f[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">t = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">int</span> all = n;</span><br><span class="line">fors (i, <span class="number">1</span>, n) &#123;</span><br><span class="line">cin &gt;&gt; s[i].a &gt;&gt; s[i].b &gt;&gt; s[i].c, s[i].id = i;</span><br><span class="line">mp[&#123;&#123;s[i].a, s[i].b&#125;, s[i].c&#125;]++;</span><br><span class="line"><span class="keyword">if</span> (mp[&#123;&#123;s[i].a, s[i].b&#125;, s[i].c&#125;] &gt; <span class="number">1</span>) &#123;</span><br><span class="line">i--, n--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pre</span>();</span><br><span class="line"><span class="built_in">sort</span> (s + <span class="number">1</span>, s + <span class="number">1</span> + n);</span><br><span class="line"><span class="built_in">cdq</span>(<span class="number">1</span>, n);</span><br><span class="line">fors (i, <span class="number">1</span>, n) &#123;</span><br><span class="line">f[ans[i]] += cnt[i];</span><br><span class="line">&#125;</span><br><span class="line">fors (i, <span class="number">1</span>, all) &#123;</span><br><span class="line">cout &lt;&lt; f[i - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2717-寒假作业"><a href="#P2717-寒假作业" class="headerlink" title="P2717 寒假作业"></a><a href="https://www.luogu.com.cn/problem/P2717">P2717 寒假作业</a></h2><p>转化一下，求平均数$\geq k$的子段$\Lrarr$每个数减去$k$后求平均数$\geq 0$的子段。</p><p>再接着转化，把原数组改为前缀和数组，则求$(0,n)$内$pre[j]-pre[i]&gt;=0$的点对，也即求$(0,n)$内的顺序对数目，和求逆序对一样分治即可。</p><p>所以不需要用cdq（（</p><p>如果cdq的话，貌似要尺取。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], tmp[maxn];</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(r == l) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">solve</span>(l, mid); <span class="built_in">solve</span>(mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="keyword">int</span> p1 = l, p2 = mid + <span class="number">1</span>, p3 = l;</span><br><span class="line"><span class="keyword">while</span>(p1 &lt;= mid || p2 &lt;= r) &#123;</span><br><span class="line"><span class="keyword">if</span>(p1 &gt; mid || (p2 &lt;= r &amp;&amp; a[p1] &lt;= a[p2])) &#123;</span><br><span class="line">ans += mid - p1 + <span class="number">1</span>;</span><br><span class="line">tmp[p3++] = a[p2++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">tmp[p3++] = a[p1++];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = l; i &lt;= r; ++i) a[i] = tmp[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">fors(i, <span class="number">1</span>, n) cin &gt;&gt; a[i], a[i] -= k;</span><br><span class="line">fors(i, <span class="number">1</span>, n) a[i] = a[i - <span class="number">1</span>] + a[i];</span><br><span class="line"><span class="built_in">solve</span>(<span class="number">0</span>, n);</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-6"><a href="#10-6" class="headerlink" title="10.6"></a>10.6</h1><h2 id="P3919-【模板】可持久化线段树-1（可持久化数组）"><a href="#P3919-【模板】可持久化线段树-1（可持久化数组）" class="headerlink" title="P3919 【模板】可持久化线段树 1（可持久化数组）"></a><a href="https://www.luogu.com.cn/problem/P3919">P3919 【模板】可持久化线段树 1（可持久化数组）</a></h2><p>任务完成！我学会了CDQ和主席树！（至少模板题过了呜呜呜）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :deb.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-10-06</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="comment">// 可持久化数组版</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">1</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> rt, lc, rc, sum; <span class="comment">// 区间和..</span></span><br><span class="line">&#125;a[maxn * <span class="number">24</span>];</span><br><span class="line"><span class="keyword">int</span> cnt; <span class="comment">// 记录版本数</span></span><br><span class="line"><span class="keyword">int</span> x[maxn]; <span class="comment">// 初始数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> &amp;rt, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    rt = ++cnt;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        a[rt].sum = x[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(a[rt].lc, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(a[rt].rc, mid + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> &amp;rt, <span class="keyword">int</span> f, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x, <span class="keyword">int</span> val)</span> </span>&#123; <span class="comment">// 节点编号，来源版本，左边界，有边界，下标，要改的值</span></span><br><span class="line">    rt = ++cnt;</span><br><span class="line">    a[rt].lc = a[f].lc, a[rt].rc = a[f].rc, a[rt].sum = a[f].sum;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        a[rt].sum = val;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (x &lt;= mid) &#123;</span><br><span class="line">        <span class="built_in">update</span>(a[rt].lc, a[f].lc, l, mid, x, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">update</span>(a[rt].rc, a[f].rc, mid + <span class="number">1</span>, r, x, val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> rt, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x)</span> </span>&#123; <span class="comment">// 节点编号，左右边界，要查的下标</span></span><br><span class="line">    <span class="keyword">if</span> (r == l) &#123;</span><br><span class="line">        <span class="keyword">return</span> a[rt].sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt;= mid) <span class="keyword">return</span> <span class="built_in">query</span>(a[rt].lc, l, mid, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">query</span>(a[rt].rc, mid + <span class="number">1</span>, r, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    fors (i, <span class="number">1</span>, n) cin &gt;&gt; x[i];</span><br><span class="line">    <span class="built_in">build</span> (a[<span class="number">0</span>].rt, <span class="number">1</span>, n);</span><br><span class="line">    fors (j, <span class="number">1</span>, m) &#123;</span><br><span class="line">        <span class="keyword">int</span> v, loc, value, op;</span><br><span class="line">        cin &gt;&gt; v &gt;&gt; op;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) &#123;</span><br><span class="line">            cin &gt;&gt; loc &gt;&gt; value;</span><br><span class="line">            <span class="built_in">update</span>(a[j].rt, a[v].rt, <span class="number">1</span>, n, loc, value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            cin &gt;&gt; loc;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">query</span>(a[v].rt, <span class="number">1</span>, n, loc) &lt;&lt; endl;</span><br><span class="line">            a[j].rt = a[v].rt;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-8"><a href="#10-8" class="headerlink" title="10.8"></a>10.8</h1><h2 id="P3396-哈希冲突"><a href="#P3396-哈希冲突" class="headerlink" title="P3396 哈希冲突"></a><a href="https://www.luogu.com.cn/problem/P3396">P3396 哈希冲突</a></h2><p>根号算法，思想和分块高度重合，但个人认为不是分块（</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">150000</span> + <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> mp[<span class="number">1005</span>][<span class="number">1005</span>]; <span class="comment">// 模i意义下第j个池的和</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j * j &lt;= n; ++j) &#123;</span><br><span class="line">            <span class="keyword">int</span> p = i % j;</span><br><span class="line">            mp[j][p] += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">char</span> cmd; <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">        cin &gt;&gt; cmd &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        <span class="keyword">if</span>(cmd == <span class="string">&#x27;C&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i * i &lt;= n; ++i) &#123;</span><br><span class="line">                <span class="keyword">int</span> p = x % i;</span><br><span class="line">                mp[i][p] -= a[x];</span><br><span class="line">                mp[i][p] += y;</span><br><span class="line">            &#125;</span><br><span class="line">            a[x] = y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (x * x &lt;= n) &#123;</span><br><span class="line">                cout &lt;&lt; mp[x][y] &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (y &gt;= x) &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = y; i &lt;= n; i += x) &#123;</span><br><span class="line">                    ans += a[i];</span><br><span class="line">                &#125;</span><br><span class="line">                cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-11"><a href="#10-11" class="headerlink" title="10.11"></a>10.11</h1><h2 id="P3379-【模板】最近公共祖先（LCA）"><a href="#P3379-【模板】最近公共祖先（LCA）" class="headerlink" title="P3379 【模板】最近公共祖先（LCA）"></a><a href="https://www.luogu.com.cn/problem/P3379">P3379 【模板】最近公共祖先（LCA）</a></h2><p>蒟蒻开始学倍增，赶快把不会的知识点都补了，希望未来几个月能组个正常的队（有腿抱最好了qwq，所以要加油）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, m, s;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e6</span> + <span class="number">10</span>;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; e[maxn];</span><br><span class="line"><span class="keyword">int</span> dep[maxn];</span><br><span class="line"><span class="keyword">int</span> fa[maxn][<span class="number">31</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span> <span class="params">(<span class="keyword">int</span> now, <span class="keyword">int</span> f, <span class="keyword">int</span> d)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;x : e[now]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(x != f) &#123;</span><br><span class="line">            fa[x][<span class="number">0</span>] = now;</span><br><span class="line">            dep[x] = d;</span><br><span class="line">            <span class="built_in">dfs</span>(x, now, d + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> lg[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fd</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = lg[n] + <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(fa[x][i] != fa[y][i]) &#123;</span><br><span class="line">            x = fa[x][i], y = fa[y][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fa[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span>||c&gt;<span class="string">&#x27;9&#x27;</span>)&#123;<span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;c=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>) x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; n &gt;&gt; m &gt;&gt; s;</span></span><br><span class="line">    n = <span class="built_in">read</span>(); m = <span class="built_in">read</span>(); s = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i == (<span class="number">1</span> &lt;&lt; p)) &#123;</span><br><span class="line">            p++;</span><br><span class="line">            lg[i] = lg[i - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> lg[i] = lg[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        x = <span class="built_in">read</span>(); y = <span class="built_in">read</span>();</span><br><span class="line">        e[x].<span class="built_in">pb</span>(y), e[y].<span class="built_in">pb</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(s, <span class="number">-1</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lg[n] + <span class="number">1</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">            fa[j][i] = fa[fa[j][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        x = <span class="built_in">read</span>(); y = <span class="built_in">read</span>();</span><br><span class="line">        <span class="keyword">if</span> (dep[x] &lt; dep[y]) <span class="built_in">swap</span>(x, y);</span><br><span class="line">        <span class="keyword">while</span> (dep[x] &gt; dep[y]) &#123;</span><br><span class="line">            x = fa[x][(<span class="keyword">int</span>)lg[dep[x] - dep[y]]];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(x == y) cout &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="built_in">fd</span>(x, y) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-12"><a href="#10-12" class="headerlink" title="10.12"></a>10.12</h1><h2 id="P1613-跑路"><a href="#P1613-跑路" class="headerlink" title="P1613 跑路"></a><a href="https://www.luogu.com.cn/problem/P1613">P1613 跑路</a></h2><p>忘了C++11好像不支持堆变量自动初始化，害的白wa了好几次qwq</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">55</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">bool</span> e[maxn][maxn][<span class="number">70</span>];</span><br><span class="line"><span class="keyword">int</span> f[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">int</span> u, v;</span><br><span class="line">    <span class="built_in">memset</span>(e, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(e));</span><br><span class="line">    <span class="built_in">memset</span>(f, <span class="number">10</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(f));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;u, &amp;v);</span><br><span class="line">        e[u][v][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        f[u][v] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">64</span>; ++j) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">1</span>; x &lt;= n; ++x) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!e[i][x][j - <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">1</span>; y &lt;= n; ++y) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (e[x][y][j - <span class="number">1</span>]) &#123;</span><br><span class="line">                        e[i][y][j] = <span class="number">1</span>;</span><br><span class="line">                        f[i][y] = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; ++k) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">                f[i][j] = <span class="built_in">min</span>(f[i][j], f[i][k] + f[k][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, f[<span class="number">1</span>][n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P5002-专心OI-找祖先"><a href="#P5002-专心OI-找祖先" class="headerlink" title="P5002 专心OI - 找祖先"></a><a href="https://www.luogu.com.cn/problem/P5002">P5002 专心OI - 找祖先</a></h2><p>一道递归组合题，和LCA其实没关系</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, r, m;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; e[maxn];</span><br><span class="line"><span class="keyword">int</span> sz[maxn]; <span class="comment">// 以i为根节点的子树大小</span></span><br><span class="line"><span class="keyword">int</span> ans[maxn]; <span class="comment">// 记忆答案</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> f)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;x : e[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(x == f) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(x, i);</span><br><span class="line">        sz[i] += sz[x];</span><br><span class="line">    &#125;</span><br><span class="line">    sz[i]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(y) &#123;</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) ans = (ans * x) % mod;</span><br><span class="line">        x = (x * x) % mod;</span><br><span class="line">        y &gt;&gt;= <span class="number">1ll</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> an = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;x : e[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(sz[x] &gt; sz[i]) <span class="keyword">continue</span>;</span><br><span class="line">        an = (an + (s * sz[x]) % mod) % mod;</span><br><span class="line">        s = (s + sz[x]) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    an = (an * <span class="number">2</span>) % mod;</span><br><span class="line">    an = (an + <span class="number">2</span> * sz[i] - <span class="number">1</span>) % mod;</span><br><span class="line">    ans[i] = an;</span><br><span class="line">    <span class="keyword">return</span> an;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(ans, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(ans));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;n, &amp;r, &amp;m);</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        e[a].<span class="built_in">push_back</span>(b);</span><br><span class="line">        e[b].<span class="built_in">push_back</span>(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(r, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;a);</span><br><span class="line">        <span class="keyword">if</span>(ans[a]) <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans[a]);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">get</span>(a));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3402-可持久化并查集"><a href="#P3402-可持久化并查集" class="headerlink" title="P3402 可持久化并查集"></a><a href="https://www.luogu.com.cn/problem/P3402">P3402 可持久化并查集</a></h2><p>按照题解写的启发式合并，貌似跑的飞快。。（$\leq 200ms$）</p><p>按秩合并应该更快吧</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> rt, lc, rc;</span><br><span class="line">&#125;a[maxn &lt;&lt; <span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> dep[maxn &lt;&lt; <span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> fa[maxn &lt;&lt; <span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> &amp;rt, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    rt = ++cnt;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        fa[rt] = l;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(a[rt].lc, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(a[rt].rc, mid + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> &amp;rt, <span class="keyword">int</span> x1, <span class="keyword">int</span> x2, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> f)</span> </span>&#123; <span class="comment">// 将x1的父亲修改为x2</span></span><br><span class="line">    rt = ++cnt;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        fa[rt] = x2;</span><br><span class="line">        dep[rt] = dep[f];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a[rt].lc = a[f].lc, a[rt].rc = a[f].rc;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x1 &lt;= mid) <span class="built_in">join</span>(a[rt].lc, x1, x2, l, mid, a[f].lc);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">join</span>(a[rt].rc, x1, x2, mid + <span class="number">1</span>, r, a[f].rc);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> rt, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x)</span> </span>&#123; <span class="comment">// x的直属父亲</span></span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        <span class="keyword">return</span> rt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt;= mid) <span class="keyword">return</span> <span class="built_in">query</span>(a[rt].lc, l, mid, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">query</span>(a[rt].rc, mid + <span class="number">1</span>, r, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> rt, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        dep[rt]++; <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt;= mid) <span class="built_in">add</span>(a[rt].lc, l, mid, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">add</span>(a[rt].rc, mid + <span class="number">1</span>, r, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findfa</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> x)</span> </span>&#123; <span class="comment">// 版本i中x的祖先</span></span><br><span class="line">    <span class="keyword">int</span> fx = <span class="built_in">query</span>(a[i].rt, <span class="number">1</span>, n, x);</span><br><span class="line">    <span class="keyword">if</span>(fa[fx] == x) <span class="keyword">return</span> fx;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">findfa</span>(i, fa[fx]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dep, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(dep));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="built_in">build</span>(a[<span class="number">0</span>].rt, <span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">int</span> opt, k, x, y;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;opt);</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">            a[i].rt = a[i - <span class="number">1</span>].rt;</span><br><span class="line">            <span class="keyword">int</span> fx = <span class="built_in">findfa</span>(i, x), fy = <span class="built_in">findfa</span>(i, y);</span><br><span class="line">            <span class="keyword">if</span>(fa[fx] == fa[fy]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(dep[fx] &gt; dep[fy]) <span class="built_in">swap</span>(fx, fy);</span><br><span class="line">            <span class="built_in">join</span>(a[i].rt, fa[fx], fa[fy], <span class="number">1</span>, n, a[i - <span class="number">1</span>].rt);</span><br><span class="line">            <span class="keyword">if</span>(dep[fx] == dep[fy]) <span class="built_in">add</span>(a[i].rt, <span class="number">1</span>, n, fa[fy]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">            a[i].rt = a[k].rt;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">            a[i].rt = a[i - <span class="number">1</span>].rt;</span><br><span class="line">            <span class="keyword">int</span> fx = <span class="built_in">findfa</span>(i, x), fy = <span class="built_in">findfa</span>(i, y);</span><br><span class="line">            <span class="keyword">if</span>(fa[fx] == fa[fy]) <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-16"><a href="#10-16" class="headerlink" title="10.16"></a>10.16</h1><h2 id="P2801-教主的魔法"><a href="#P2801-教主的魔法" class="headerlink" title="P2801 教主的魔法"></a><a href="https://www.luogu.com.cn/problem/P2801">P2801 教主的魔法</a></h2><p>再次说明我的大题coding能力就跟坨⑩一样。。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :debug.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-10-16</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> blc[maxn]; <span class="comment">// i在第几块内</span></span><br><span class="line"><span class="keyword">int</span> rb[maxn / <span class="number">1000</span> + <span class="number">100</span>] = &#123;<span class="number">0</span>&#125;, lb[maxn / <span class="number">1000</span> + <span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> d[maxn]; <span class="comment">// 排序后的</span></span><br><span class="line"><span class="keyword">int</span> n, q;</span><br><span class="line"><span class="keyword">int</span> sn;</span><br><span class="line"><span class="keyword">int</span> tag[maxn / <span class="number">1000</span> + <span class="number">100</span>]; <span class="comment">// 整块tag，用于整块操作的数据维护,表示整个区间都被加上了tag[i]</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(blc[l] == blc[r]) &#123;</span><br><span class="line">fors(i, l, r) a[i] += w;</span><br><span class="line">fors(i, l, r) d[i] = a[i];</span><br><span class="line"><span class="built_in">sort</span>(d + lb[blc[l]], d + <span class="number">1</span> + rb[blc[l]]);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, l, rb[blc[l]]) &#123;</span><br><span class="line">a[i] += w;</span><br><span class="line">&#125; fors(i, lb[blc[l]], rb[blc[l]]) d[i] = a[i];</span><br><span class="line"><span class="built_in">sort</span>(d + lb[blc[l]], d + rb[blc[l]] + <span class="number">1</span>);</span><br><span class="line">fors(i, lb[blc[r]], r) &#123;</span><br><span class="line">a[i] += w;</span><br><span class="line">&#125; fors(i, lb[blc[r]], rb[blc[r]]) d[i] = a[i];</span><br><span class="line"><span class="built_in">sort</span>(d + lb[blc[r]], d + rb[blc[r]] + <span class="number">1</span>);</span><br><span class="line">fors(i, blc[l] + <span class="number">1</span>, blc[r] - <span class="number">1</span>) &#123;</span><br><span class="line">tag[i] += w;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lbound</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> c, <span class="keyword">int</span> i)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(blc[l] == blc[r]) &#123;</span><br><span class="line">fors(i, l, r) <span class="keyword">if</span>(a[i] + tag[blc[i]] &gt;= c) ans++;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, l, rb[blc[l]]) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] + tag[blc[i]] &gt;= c) ans++;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, lb[blc[r]], r) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] + tag[blc[i]] &gt;= c) ans++;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, blc[l] + <span class="number">1</span>, blc[r] - <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">// int p = lower_bound(d + lb[i], d + rb[i] + 1, c - tag[i]) - d;</span></span><br><span class="line"></span><br><span class="line">ans += <span class="built_in">lbound</span>(lb[i], rb[i], c, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lbound</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> c, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ll = l, rr = r, ans = <span class="number">0</span>, mid;</span><br><span class="line"><span class="keyword">while</span>(ll &lt;= rr) &#123;</span><br><span class="line">mid = (ll + rr) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(d[mid] + tag[i] &gt;= c) rr = mid - <span class="number">1</span>, ans = rb[i] - mid + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> ll = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cread</span><span class="params">(<span class="keyword">char</span> &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(x != <span class="string">&#x27;M&#x27;</span> &amp;&amp;x != <span class="string">&#x27;A&#x27;</span>) x = <span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 某个快读模板qwq</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Tp&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(Tp &amp;x)</span></span>&#123;</span><br><span class="line">    x=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="number">1</span>;<span class="keyword">int</span> fh;</span><br><span class="line">    <span class="keyword">while</span>(ch!=<span class="string">&#x27;-&#x27;</span>&amp;&amp;(ch&gt;<span class="string">&#x27;9&#x27;</span>||ch&lt;<span class="string">&#x27;0&#x27;</span>))&#123;</span><br><span class="line">        ch=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">        fh=<span class="number">-1</span>;ch=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span> fh=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">        x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+ch-<span class="string">&#x27;0&#x27;</span>;ch=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    x*=fh;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// freopen(&quot;in.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    <span class="comment">// freopen(&quot;out.txt&quot;, &quot;w&quot;, stdout);</span></span><br><span class="line"><span class="built_in">read</span>(n); <span class="built_in">read</span>(q);</span><br><span class="line">fors(i, <span class="number">1</span>, n) &#123; <span class="built_in">read</span>(a[i]); d[i] = a[i]; &#125;</span><br><span class="line">sn = <span class="built_in">sqrt</span>(n);</span><br><span class="line"><span class="keyword">int</span> bid;</span><br><span class="line">bid = n / sn;</span><br><span class="line"><span class="keyword">if</span>(n % sn) bid++;</span><br><span class="line">fors(i ,<span class="number">1</span>, n) &#123;</span><br><span class="line">blc[i] = (i - <span class="number">1</span>) / sn + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, <span class="number">1</span>, bid) &#123;</span><br><span class="line">lb[i] = (i - <span class="number">1</span>) * sn + <span class="number">1</span>;</span><br><span class="line">rb[i] = i * sn;</span><br><span class="line">&#125;</span><br><span class="line">rb[bid] = n;</span><br><span class="line">fors(i, <span class="number">1</span>, bid) &#123;</span><br><span class="line"><span class="built_in">sort</span>(d + lb[i], d + rb[i] + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> x;</span><br><span class="line"><span class="keyword">int</span> l, r, w;</span><br><span class="line">fors(i, <span class="number">1</span>, q) &#123;</span><br><span class="line"><span class="built_in">cread</span>(x);</span><br><span class="line"><span class="built_in">read</span>(l);</span><br><span class="line"><span class="built_in">read</span>(r);</span><br><span class="line"><span class="built_in">read</span>(w);</span><br><span class="line"><span class="keyword">if</span>(x == <span class="string">&#x27;M&#x27;</span>) <span class="built_in">add</span>(l, r, w);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">query</span>(l, r, w));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P4135-作诗"><a href="#P4135-作诗" class="headerlink" title="P4135 作诗"></a><a href="https://www.luogu.com.cn/problem/P4135">P4135 作诗</a></h2><p>分块+预处理</p><p>很好的紫题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, c, m;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">355</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> f[N][N] = &#123;<span class="number">0</span>&#125;; <span class="comment">// 从i到j（块），有多少个数出现了偶数次</span></span><br><span class="line"><span class="keyword">int</span> s[N][maxn] = &#123;<span class="number">0</span>&#125;; <span class="comment">// 前i块中j出现了多少次</span></span><br><span class="line"><span class="keyword">int</span> blc[N];</span><br><span class="line"><span class="keyword">int</span> l[N], r[N];</span><br><span class="line"><span class="keyword">int</span> mp[maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;c, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">int</span> ll, rr;</span><br><span class="line">    <span class="keyword">int</span> sn = <span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">int</span> tot = n / sn; <span class="keyword">if</span>(n % sn) tot++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        blc[i] = (i - <span class="number">1</span>) / sn + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; ++i) &#123;</span><br><span class="line">        l[i] = (i - <span class="number">1</span>) * sn + <span class="number">1</span>;</span><br><span class="line">        r[i] = i * sn;</span><br><span class="line">    &#125;</span><br><span class="line">    r[tot] = n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= c; ++j) s[i][j] = s[i - <span class="number">1</span>][j];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = l[i]; j &lt;= r[i]; ++j) &#123;</span><br><span class="line">            s[i][a[j]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// unordered_map&lt;int, int&gt; mp;</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &lt;= tot; ++j) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = l[j]; k &lt;= r[j]; ++k) &#123;</span><br><span class="line">                mp[a[k]]++;</span><br><span class="line">                <span class="keyword">if</span> (mp[a[k]] &gt; <span class="number">1</span> &amp;&amp; (mp[a[k]] &amp; <span class="number">1</span>)) ans--;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (!(mp[a[k]] &amp; <span class="number">1</span>)) ans++;</span><br><span class="line">            &#125;</span><br><span class="line">            f[i][j] = ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= c; ++j) mp[j] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> aa = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= m; ++k) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;ll, &amp;rr);</span><br><span class="line">        ll = (ll + aa) % n + <span class="number">1</span>;</span><br><span class="line">        rr = (rr + aa) % n + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (ll &gt; rr) <span class="built_in">swap</span>(ll, rr);</span><br><span class="line">        <span class="comment">// unordered_map&lt;int, int&gt; mp;</span></span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (blc[ll] == blc[rr]) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= rr; ++i) &#123;</span><br><span class="line">                mp[a[i]]++;</span><br><span class="line">                <span class="keyword">if</span> (mp[a[i]] &gt; <span class="number">1</span> &amp;&amp; (mp[a[i]] &amp; <span class="number">1</span>)) ans--;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (!(mp[a[i]] &amp; <span class="number">1</span>)) ans++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">            aa = ans;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= rr; ++i) mp[a[i]]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> ans = f[blc[ll] + <span class="number">1</span>][blc[rr] - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= r[blc[ll]]; ++i) &#123;</span><br><span class="line">                mp[a[i]]++;</span><br><span class="line">                <span class="keyword">int</span> res = (mp[a[i]] + s[blc[rr] - <span class="number">1</span>][a[i]] - s[blc[ll]][a[i]]);</span><br><span class="line">                <span class="keyword">if</span>(res &gt; <span class="number">1</span> &amp;&amp; (res &amp; <span class="number">1</span>)) ans--;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(!(res &amp; <span class="number">1</span>)) ans++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = l[blc[rr]]; i &lt;= rr; ++i) &#123;</span><br><span class="line">                mp[a[i]]++;</span><br><span class="line">                <span class="keyword">int</span> res = (mp[a[i]] + s[blc[rr] - <span class="number">1</span>][a[i]] - s[blc[ll]][a[i]]);</span><br><span class="line">                <span class="keyword">if</span>(res &gt; <span class="number">1</span> &amp;&amp; (res &amp; <span class="number">1</span>)) ans--;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(!(res &amp; <span class="number">1</span>)) ans++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= r[blc[ll]]; ++i) mp[a[i]]--;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = l[blc[rr]]; i &lt;= rr; ++i) mp[a[i]]--;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">            aa = ans;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P4168-Violet-蒲公英"><a href="#P4168-Violet-蒲公英" class="headerlink" title="P4168 [Violet]蒲公英"></a><a href="https://www.luogu.com.cn/problem/P4168">P4168 [Violet]蒲公英</a></h2><p>区间众数问题</p><p>和上面的P4135一样也是个好题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">4e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">205</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> val, id, des;</span><br><span class="line">&#125;Node[maxn];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(<span class="keyword">const</span> node&amp; x, <span class="keyword">const</span> node&amp; y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.val == y.val ? x.id &lt; y.id : x.val &lt; y.val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(<span class="keyword">const</span> node &amp;x, <span class="keyword">const</span> node&amp; y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.id &lt; y.id;</span><br><span class="line">&#125;</span><br><span class="line">unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; src;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">descrete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">sort</span>(Node + <span class="number">1</span>, Node + <span class="number">1</span> + n, cmp1);</span><br><span class="line">    Node[<span class="number">1</span>].des = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(Node[i].val == Node[i - <span class="number">1</span>].val) Node[i].des = Node[i - <span class="number">1</span>].des;</span><br><span class="line">        <span class="keyword">else</span> Node[i].des = Node[i - <span class="number">1</span>].des + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(Node + <span class="number">1</span>, Node + <span class="number">1</span> + n, cmp2);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!src.<span class="built_in">count</span>(Node[i].des)) src[Node[i].des] = Node[i].val;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) a[i] = Node[i].des;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> blc[maxn];</span><br><span class="line"><span class="keyword">int</span> l[N], r[N];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"><span class="keyword">int</span> d[N][N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> f[N][maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> mp[maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prework</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sn = <span class="built_in">sqrt</span>(n);</span><br><span class="line">    tot = n / sn; <span class="keyword">if</span>(n % sn) tot++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) blc[i] = (i - <span class="number">1</span>) / sn + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; ++i) &#123;</span><br><span class="line">        l[i] = (i - <span class="number">1</span>) * sn + <span class="number">1</span>;</span><br><span class="line">        r[i] = i * sn;</span><br><span class="line">    &#125;</span><br><span class="line">    r[tot] = n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>, ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &lt;= tot; ++j) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = l[j]; k &lt;= r[j]; ++k) &#123;</span><br><span class="line">                mp[a[k]]++;</span><br><span class="line">                <span class="comment">// cnt = max(cnt, mp[a[k]]);</span></span><br><span class="line">                <span class="keyword">if</span>(mp[a[k]] &gt; cnt) &#123;</span><br><span class="line">                    cnt = mp[a[k]];</span><br><span class="line">                    ans = a[k];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(mp[a[k]] == cnt) ans = <span class="built_in">min</span>(ans, a[k]);</span><br><span class="line">            &#125;</span><br><span class="line">            d[i][j] = ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) mp[j] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) f[i][j] = f[i - <span class="number">1</span>][j];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = l[i]; j &lt;= r[i]; ++j) &#123;</span><br><span class="line">            f[i][a[j]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;Node[i].val), Node[i].id = i;</span><br><span class="line">    <span class="built_in">descrete</span>();</span><br><span class="line">    <span class="built_in">prework</span>();</span><br><span class="line">    <span class="keyword">int</span> lans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ll, rr;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> o = <span class="number">1</span>; o &lt;= m; ++o) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;ll, &amp;rr);</span><br><span class="line">        ll = (ll + lans - <span class="number">1</span>) % n + <span class="number">1</span>;</span><br><span class="line">        rr = (rr + lans - <span class="number">1</span>) % n + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(ll &gt; rr) <span class="built_in">swap</span>(ll, rr);</span><br><span class="line">        <span class="keyword">int</span> ans, cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(blc[ll] == blc[rr]) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= rr; ++i) &#123;</span><br><span class="line">                mp[a[i]]++;</span><br><span class="line">                <span class="keyword">if</span>(mp[a[i]] &gt; cnt) &#123;</span><br><span class="line">                    cnt = mp[a[i]];</span><br><span class="line">                    ans = a[i];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(mp[a[i]] == cnt) ans = <span class="built_in">min</span>(ans, a[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, src[ans]);</span><br><span class="line">            lans = src[ans];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= rr; ++i) mp[a[i]]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            ans = d[blc[ll] + <span class="number">1</span>][blc[rr] - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> cnt = f[blc[rr] - <span class="number">1</span>][ans] - f[blc[ll]][ans];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= r[blc[ll]]; ++i) &#123;</span><br><span class="line">                mp[a[i]]++;</span><br><span class="line">                <span class="keyword">int</span> res = f[blc[rr] - <span class="number">1</span>][a[i]] - f[blc[ll]][a[i]] + mp[a[i]];</span><br><span class="line">                <span class="comment">// ans = max(ans, res);</span></span><br><span class="line">                <span class="keyword">if</span>(res &gt; cnt) &#123;</span><br><span class="line">                    cnt = res;</span><br><span class="line">                    ans = a[i];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(res == cnt) ans = <span class="built_in">min</span>(ans, a[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = l[blc[rr]]; i &lt;= rr; ++i) &#123;</span><br><span class="line">                mp[a[i]]++;</span><br><span class="line">                <span class="keyword">int</span> res = f[blc[rr] - <span class="number">1</span>][a[i]] - f[blc[ll]][a[i]] + mp[a[i]];</span><br><span class="line">                <span class="comment">// ans = max(ans, res);</span></span><br><span class="line">                <span class="keyword">if</span>(res &gt; cnt) &#123;</span><br><span class="line">                    cnt = res;</span><br><span class="line">                    ans = a[i];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(res == cnt) ans = <span class="built_in">min</span>(ans, a[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, src[ans]);</span><br><span class="line">            lans = src[ans];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt;= r[blc[ll]]; ++i) mp[a[i]]--;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = l[blc[rr]]; i &lt;= rr; ++i) mp[a[i]]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-18"><a href="#10-18" class="headerlink" title="10.18"></a>10.18</h1><h2 id="P4097-HEOI2013-Segment"><a href="#P4097-HEOI2013-Segment" class="headerlink" title="P4097 [HEOI2013]Segment"></a><a href="https://www.luogu.com.cn/problem/P4097">P4097 [HEOI2013]Segment</a></h2><p>说是李超线段树，但感觉用一般的维护方法也可以写，只不过常数大了一点（还是老老实实<del>抄</del>记了一遍模板）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pdi pair<span class="meta-string">&lt;double, int&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">39989</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="keyword">double</span> K[maxn], b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x_, <span class="keyword">int</span> y_, <span class="keyword">int</span> x__, <span class="keyword">int</span> y__)</span> </span>&#123;</span><br><span class="line">++cnt;</span><br><span class="line"><span class="keyword">if</span> (x_ == x__) &#123;</span><br><span class="line">K[cnt] = <span class="number">0</span>, b[cnt] = <span class="built_in">max</span>(y_, y__);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">K[cnt] = <span class="number">1.0</span> * (y__ - y_) / (x__ - x_);</span><br><span class="line">b[cnt] = y_ - K[cnt] * x_;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x * K[i] + b[i]; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> cl, <span class="keyword">int</span> cr, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> mid = (cl + cr) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> rr = a[k];</span><br><span class="line"><span class="keyword">if</span>(r &lt; cl || l &gt; cr) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">double</span> resu = <span class="built_in">cal</span>(u, mid);</span><br><span class="line"><span class="keyword">double</span> resv = <span class="built_in">cal</span>(a[k], mid);</span><br><span class="line"><span class="keyword">if</span>(l &lt;= cl &amp;&amp; r &gt;= cr) &#123;</span><br><span class="line"><span class="keyword">if</span>(cl == cr) &#123;</span><br><span class="line"><span class="keyword">if</span>(resu &gt; resv) a[k] = u; <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(K[a[k]] &lt; K[u]) &#123;</span><br><span class="line"><span class="keyword">if</span>(resu &gt; resv) &#123;</span><br><span class="line">a[k] = u;</span><br><span class="line"><span class="comment">// 修改可能区间</span></span><br><span class="line"><span class="built_in">change</span>(lson, cl, mid, l, r, rr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">change</span>(rson, mid + <span class="number">1</span>, cr, l, r, u);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(K[a[k]] &gt; K[u]) &#123;</span><br><span class="line"><span class="keyword">if</span>(resu &gt; resv) &#123;</span><br><span class="line">a[k] = u;</span><br><span class="line"><span class="built_in">change</span>(rson, mid + <span class="number">1</span>, cr, l, r, rr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">change</span>(lson, cl, mid, l, r, u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(b[u] &gt; b[a[k]]) a[k] = u;</span><br><span class="line">&#125; <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">change</span>(lson, cl, mid, l, r, u);</span><br><span class="line"><span class="built_in">change</span>(rson, mid + <span class="number">1</span>, cr, l, r, u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">pdi <span class="title">Max</span><span class="params">(pdi x, pdi y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x.first &lt; y.first) <span class="keyword">return</span> y;</span><br><span class="line"><span class="keyword">if</span>(x.first &gt; y.first) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">return</span> x.second &lt; y.second ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">pdi <span class="title">query</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> d)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(r &lt; d || d &lt; l) <span class="keyword">return</span> &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">double</span> res = <span class="built_in">cal</span>(a[k], d);</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> &#123;res, a[k]&#125;;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Max</span>(&#123;res, a[k]&#125;, <span class="built_in">Max</span>(<span class="built_in">query</span>(lson, l, mid, d), <span class="built_in">query</span>(rson, mid + <span class="number">1</span>, r, d))); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> lans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">pro</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x + lans - <span class="number">1</span> + b) % b + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">int</span> op, x_, y_, x__, y__;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;op);</span><br><span class="line"><span class="keyword">if</span>(op == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;x_, &amp;y_, &amp;x__, &amp;y__);</span><br><span class="line">x_ = <span class="built_in">pro</span>(x_, N);</span><br><span class="line">y_ = <span class="built_in">pro</span>(y_, mod);</span><br><span class="line">x__ = <span class="built_in">pro</span>(x__, N);</span><br><span class="line">y__ = <span class="built_in">pro</span>(y__, mod);</span><br><span class="line"><span class="keyword">if</span>(x_ &gt; x__) &#123;</span><br><span class="line"><span class="built_in">swap</span>(x_, x__);</span><br><span class="line"><span class="built_in">swap</span>(y_, y__);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">add</span>(x_, y_, x__, y__);</span><br><span class="line"><span class="built_in">change</span>(<span class="number">1</span>, <span class="number">1</span>, N, x_, x__, cnt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x_);</span><br><span class="line">x_ = <span class="built_in">pro</span>(x_, N);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, lans = <span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, N, x_).second);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-28"><a href="#10-28" class="headerlink" title="10.28"></a>10.28</h1><h2 id="CF242E-XOR-on-Segment"><a href="#CF242E-XOR-on-Segment" class="headerlink" title="CF242E XOR on Segment"></a><a href="https://www.luogu.com.cn/problem/CF242E">CF242E XOR on Segment</a></h2><p>按位运算，分别维护每一位就可以维护整个异或和了，属于是白给紫题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;bits/stdc++.h&gt;</span><br><span class="line">#define lson k &lt;&lt; 1</span><br><span class="line">#define rson k &lt;&lt; 1 | 1</span><br><span class="line">typedef long long ll;</span><br><span class="line">using namespace std;</span><br><span class="line">const int maxn = 1e5 + 10;</span><br><span class="line">struct node &#123;</span><br><span class="line">    int l, r, tag; // 该区间是否异或过1</span><br><span class="line">    ll s;</span><br><span class="line">&#125;a[25][maxn * 4];</span><br><span class="line">int num[maxn];</span><br><span class="line">inline void pushup(int k, int c) &#123;</span><br><span class="line">    a[c][k].s = a[c][lson].s + a[c][rson].s;</span><br><span class="line">    a[c][k].tag = 0;</span><br><span class="line">&#125;</span><br><span class="line">void build(int k, int c, int l, int r) &#123;</span><br><span class="line">    a[c][k].l = l, a[c][k].r = r;</span><br><span class="line">    if(l == r) &#123;</span><br><span class="line">        a[c][k].s = (num[l] &gt;&gt; (c - 1ll)) &amp; 1ll;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    int mid = (l + r) &gt;&gt; 1ll;</span><br><span class="line">    build(lson, c, l, mid);</span><br><span class="line">    build(rson, c, mid + 1, r);</span><br><span class="line">    pushup(k, c);</span><br><span class="line">&#125;</span><br><span class="line">void pushdown(int k, int c) &#123;</span><br><span class="line">    if(!a[c][k].tag) return;</span><br><span class="line">    a[c][lson].s = a[c][lson].r - a[c][lson].l + 1 - a[c][lson].s;</span><br><span class="line">    a[c][rson].s = a[c][rson].r - a[c][rson].l + 1 - a[c][rson].s;</span><br><span class="line">    a[c][lson].tag ^= 1, a[c][rson].tag ^= 1;</span><br><span class="line">    a[c][k].tag = 0;</span><br><span class="line">&#125;</span><br><span class="line">void add(int k, int c, int l, int r) &#123;</span><br><span class="line">    if(a[c][k].l &gt; r || a[c][k].r &lt; l) return;</span><br><span class="line">    if(a[c][k].l &gt;= l &amp;&amp; a[c][k].r &lt;= r) &#123;</span><br><span class="line">        a[c][k].s = a[c][k].r - a[c][k].l + 1 - a[c][k].s;</span><br><span class="line">        a[c][k].tag ^= 1;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    pushdown(k, c);</span><br><span class="line">    add(lson, c, l, r);</span><br><span class="line">    add(rson, c, l, r);</span><br><span class="line">    pushup(k, c);</span><br><span class="line">&#125;</span><br><span class="line">ll query(int k, int c, int l, int r) &#123;</span><br><span class="line">    if(a[c][k].l &gt; r || a[c][k].r &lt; l) return 0;</span><br><span class="line">    if(a[c][k].l &gt;= l &amp;&amp; a[c][k].r &lt;= r) return a[c][k].s;</span><br><span class="line">    pushdown(k, c);</span><br><span class="line">    return query(lson, c, l, r) + query(rson, c, l, r);</span><br><span class="line">&#125;</span><br><span class="line">signed main () </span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;n);</span><br><span class="line">    for (int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;num[i]);</span><br><span class="line">    for (int i = 1; i &lt;= 24; ++i) build(1, i, 1, n);</span><br><span class="line">    int op, l, r, k;</span><br><span class="line">    int m;</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;m);</span><br><span class="line">    while (m--) &#123;</span><br><span class="line">        scanf(&quot;%d%d%d&quot;, &amp;op, &amp;l, &amp;r);</span><br><span class="line">        if(op == 1) &#123;</span><br><span class="line">            ll ans = 0;</span><br><span class="line">            for (int i = 1; i &lt;= 24; ++i) ans += query(1, i, l, r) * (1ll &lt;&lt; (i - 1));</span><br><span class="line">            printf(&quot;%lld\n&quot;, ans);</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            scanf(&quot;%d&quot;, &amp;k);</span><br><span class="line">            if(k == 0) continue;</span><br><span class="line">            for (int i = 1; i &lt;= 24; ++i) &#123;</span><br><span class="line">                if(k &amp; 1) add(1, i, l, r);</span><br><span class="line">                k &gt;&gt;= 1;</span><br><span class="line">                if(!k) break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="11-4"><a href="#11-4" class="headerlink" title="11.4"></a>11.4</h1><h2 id="P2122-还教室"><a href="#P2122-还教室" class="headerlink" title="P2122 还教室"></a><a href="https://www.luogu.com.cn/problem/P2122">P2122 还教室</a></h2><p>维护区间方差与平均值，实际上维护区间的和以及平方和就可以了。</p><p>另：<strong>11-04 21:16:20 洛谷AC150题纪念。</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k &lt;&lt; 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k &lt;&lt; 1 | 1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, sum, tag, sqr;</span><br><span class="line">&#125;a[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> num[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[k].sum = a[lson].sum + a[rson].sum;</span><br><span class="line">    a[k].sqr = a[lson].sqr + a[rson].sqr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    a[k].l = l, a[k].r = r;</span><br><span class="line">    a[k].tag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        a[k].sum = num[l];</span><br><span class="line">        a[k].sqr = num[l] * num[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(lson, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(rson, mid + <span class="number">1</span>, r);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushtag</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    a[k].sqr += a[k].sum * <span class="number">2</span> * x + x * x * (a[k].r - a[k].l + <span class="number">1</span>);</span><br><span class="line">    a[k].sum += (a[k].r - a[k].l + <span class="number">1</span>) * x;</span><br><span class="line">    a[k].tag += x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].tag) &#123;</span><br><span class="line">        <span class="built_in">pushtag</span>(lson, a[k].tag);</span><br><span class="line">        <span class="built_in">pushtag</span>(rson, a[k].tag);</span><br><span class="line">        a[k].tag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt;= l &amp;&amp; a[k].r &lt;= r) &#123;</span><br><span class="line">        <span class="built_in">pushtag</span>(k, x);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="built_in">add</span>(lson, l, r, x);</span><br><span class="line">    <span class="built_in">add</span>(rson, l, r, x);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">querysum</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt;= l &amp;&amp; a[k].r &lt;= r) <span class="keyword">return</span> a[k].sum;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">querysum</span>(lson, l, r) + <span class="built_in">querysum</span>(rson, l, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">querysqr</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt;= l &amp;&amp; a[k].r &lt;= r) <span class="keyword">return</span> a[k].sqr;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">querysqr</span>(lson, l, r) + <span class="built_in">querysqr</span>(rson, l, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; num[i];</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">int</span> op, l, r, d;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(m--) &#123;</span><br><span class="line">        cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) &#123;</span><br><span class="line">            cin &gt;&gt; d;</span><br><span class="line">            <span class="built_in">add</span>(<span class="number">1</span>, l, r, d);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> res = <span class="built_in">querysum</span>(<span class="number">1</span>, l, r);</span><br><span class="line">            <span class="keyword">if</span>(res == <span class="number">0</span>) &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;0/1&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> ret = __gcd(res, r - l + <span class="number">1</span>);</span><br><span class="line">            cout &lt;&lt; res / ret &lt;&lt; <span class="string">&#x27;/&#x27;</span> &lt;&lt; (r - l + <span class="number">1</span>) / ret &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> res1 = <span class="built_in">querysum</span>(<span class="number">1</span>, l, r);</span><br><span class="line">            <span class="keyword">int</span> res2 = <span class="built_in">querysqr</span>(<span class="number">1</span>, l, r);</span><br><span class="line">            <span class="keyword">int</span> ret;</span><br><span class="line">            <span class="keyword">int</span> fz = res2 * (r - l + <span class="number">1</span>) - res1 * res1;</span><br><span class="line">            <span class="keyword">int</span> fm = (r - l + <span class="number">1</span>) * (r - l + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(fz == <span class="number">0</span>) &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;0/1&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ret = __gcd(fz, fm);</span><br><span class="line">            cout &lt;&lt; fz / ret &lt;&lt; <span class="string">&#x27;/&#x27;</span> &lt;&lt; fm / ret &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="11-9"><a href="#11-9" class="headerlink" title="11.9"></a>11.9</h1><h2 id="P4145-上帝造题的七分钟-2-花神游历各国"><a href="#P4145-上帝造题的七分钟-2-花神游历各国" class="headerlink" title="P4145 上帝造题的七分钟 2 / 花神游历各国"></a><a href="https://www.luogu.com.cn/problem/P4145">P4145 上帝造题的七分钟 2 / 花神游历各国</a></h2><p>看上去好像没法维护平方根数据结构，实际上 $10^{12}$ 内的数最多开方不到10次就成1了，遇到全为1的区间时停止修改即可。记这个最大次数为 $X$, 用线段树/树状数组维护的复杂度都是$O(Xn\log m)$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k &lt;&lt; 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k &lt;&lt; 1 | 1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, sum;</span><br><span class="line">&#125;a[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> num[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[k].sum = a[lson].sum + a[rson].sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    a[k].l = l, a[k].r = r;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        a[k].sum = num[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(lson, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(rson, mid + <span class="number">1</span>, r);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].r - a[k].l + <span class="number">1</span> == a[k].sum) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l == a[k].r) &#123;</span><br><span class="line">        a[k].sum = <span class="built_in">sqrt</span>(a[k].sum);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">change</span>(lson, l, r);</span><br><span class="line">    <span class="built_in">change</span>(rson, l, r);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt;= l &amp;&amp; a[k].r &lt;= r) <span class="keyword">return</span> a[k].sum;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">query</span>(lson, l, r) + <span class="built_in">query</span>(rson, l, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// freopen(&quot;in.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    <span class="comment">// freopen(&quot;out.txt&quot;, &quot;w&quot;, stdout);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; num[i];</span><br><span class="line">    cin &gt;&gt; m;</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">int</span> op, l, r;</span><br><span class="line">    <span class="keyword">while</span>(m--) &#123;</span><br><span class="line">        cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="keyword">if</span>(l &gt; r) <span class="built_in">swap</span>(l, r);</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">change</span>(<span class="number">1</span>, l, r);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">query</span>(<span class="number">1</span>, l, r) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="11-18"><a href="#11-18" class="headerlink" title="11.18"></a>11.18</h1><h2 id="P3803-【模板】多项式乘法（FFT）"><a href="#P3803-【模板】多项式乘法（FFT）" class="headerlink" title="P3803 【模板】多项式乘法（FFT）"></a><a href="https://www.luogu.com.cn/problem/P3803">P3803 【模板】多项式乘法（FFT）</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// op = 1 ? DFT : IDFT</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e6</span> + <span class="number">10</span>;</span><br><span class="line">complex &lt;<span class="keyword">double</span>&gt; F[maxn], G[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fft</span><span class="params">(complex&lt;<span class="keyword">double</span>&gt; f[], <span class="keyword">int</span> n, <span class="keyword">int</span> op)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!n) <span class="keyword">return</span>;</span><br><span class="line">    complex &lt;<span class="keyword">double</span>&gt; a[n], b[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; ++k) &#123;</span><br><span class="line">        a[k] = f[k &lt;&lt; <span class="number">1</span>], b[k] = f[k &lt;&lt; <span class="number">1</span> | <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fft</span>(a, n &gt;&gt; <span class="number">1</span>, op), <span class="built_in">fft</span>(b, n &gt;&gt; <span class="number">1</span>, op);</span><br><span class="line">    <span class="function">complex&lt;<span class="keyword">double</span>&gt; <span class="title">wn</span><span class="params">(cos(PI / n), sin(PI / n) * op)</span>, <span class="title">w</span><span class="params">(<span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; ++k, w *= wn) &#123;</span><br><span class="line">        f[k] = a[k] + w * b[k], f[k + n] = a[k] - w * b[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;F[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;G[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    m += n, n = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n &lt;= m) n &lt;&lt;= <span class="number">1</span>; <span class="comment">// 补足系数，保证是2的幂次</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// DFT</span></span><br><span class="line">    <span class="built_in">fft</span>(F, n &gt;&gt; <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">fft</span>(G, n &gt;&gt; <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) F[i] *= G[i];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IDFT</span></span><br><span class="line">    <span class="built_in">fft</span>(F, n &gt;&gt; <span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.0f &quot;</span>, <span class="built_in">fabs</span>(F[i].<span class="built_in">real</span>()) / n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>11.21的NTT写法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1.0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// op = 1 ? DFT : IDFT</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> F[maxn], G[maxn];</span><br><span class="line"><span class="keyword">int</span> r[maxn];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fpow</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p) &#123;</span><br><span class="line">        <span class="keyword">if</span>(p &amp; <span class="number">1</span>) ans = (ans * a) % mod;</span><br><span class="line">        a = (a * a) % mod;</span><br><span class="line">        p &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ntt</span><span class="params">(<span class="keyword">int</span> f[], <span class="keyword">int</span> n, <span class="keyword">int</span> op)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!n) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; r[i]) <span class="built_in">swap</span>(f[i], f[r[i]]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> mid = <span class="number">1</span>; mid &lt; n; mid &lt;&lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> wn = <span class="built_in">fpow</span>(op == <span class="number">1</span> ? <span class="number">3</span> : <span class="number">332748118</span>, (mod - <span class="number">1</span>) / (mid &lt;&lt; <span class="number">1</span>));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j += (mid &lt;&lt; <span class="number">1</span>)) &#123;</span><br><span class="line">            <span class="keyword">int</span> w = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; mid; ++k, w = w * wn % mod) &#123;</span><br><span class="line">                <span class="keyword">int</span> x = f[j + k], y = w * f[j + k + mid] % mod;</span><br><span class="line">                f[j + k] = (x + y) % mod;</span><br><span class="line">                f[j + k + mid] = ((x - y) % mod + mod) % mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;F[i]);</span><br><span class="line">        F[i] = (F[i] + mod) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        G[i] = (G[i] + mod) % mod;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;G[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    m += n, n = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n &lt;= m) n &lt;&lt;= <span class="number">1</span>, cnt++; <span class="comment">// 补足系数，保证是2的幂次</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) r[i] = (r[i &gt;&gt; <span class="number">1</span>] &gt;&gt; <span class="number">1</span>) | ((i &amp; <span class="number">1</span>) &lt;&lt; (cnt - <span class="number">1</span>));</span><br><span class="line">    <span class="comment">// DFT</span></span><br><span class="line">    <span class="built_in">ntt</span>(F, n, <span class="number">1</span>), <span class="built_in">ntt</span>(G, n, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) F[i] = (F[i] * G[i]) % mod;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IDFT</span></span><br><span class="line">    <span class="built_in">ntt</span>(F, n, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">int</span> inv = <span class="built_in">fpow</span>(n, mod - <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld &quot;</span>, (F[i] * inv) % mod);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="11-23"><a href="#11-23" class="headerlink" title="11.23"></a>11.23</h1><h2 id="P3389-【模板】高斯消元法"><a href="#P3389-【模板】高斯消元法" class="headerlink" title="P3389 【模板】高斯消元法"></a><a href="https://www.luogu.com.cn/problem/P3389">P3389 【模板】高斯消元法</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(2)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">105</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> a[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n + <span class="number">1</span>; ++j) &#123;</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> mx = i;</span><br><span class="line">        <span class="comment">// 选出该列最大系数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">fabs</span>(a[j][i]) &gt; <span class="built_in">fabs</span>(a[mx][i])) &#123;</span><br><span class="line">                mx = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n + <span class="number">1</span>; ++j) &#123;</span><br><span class="line">            <span class="built_in">swap</span>(a[i][j], a[mx][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!a[i][i]) &#123;</span><br><span class="line">            <span class="comment">// Solution not </span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;No Solution&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span>(j != i) &#123;</span><br><span class="line">                <span class="keyword">double</span> tmp = a[j][i] / a[i][i];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = i + <span class="number">1</span>; k &lt;= n + <span class="number">1</span>; ++k) &#123;</span><br><span class="line">                    a[j][k] -= a[i][k] * tmp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        cout &lt;&lt; a[i][n + <span class="number">1</span>] / a[i][i] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="11-25"><a href="#11-25" class="headerlink" title="11.25"></a>11.25</h1><h2 id="CF438D-The-Child-and-Sequence"><a href="#CF438D-The-Child-and-Sequence" class="headerlink" title="CF438D The Child and Sequence"></a><a href="https://www.luogu.com.cn/problem/CF438D">CF438D The Child and Sequence</a></h2><p>类似P4145，每个点被修改的次数有限，可以适当暴力</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k &lt;&lt; 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k &lt;&lt; 1 | 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, sum, mx, add;</span><br><span class="line">&#125;a[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> num[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[k].sum = a[lson].sum + a[rson].sum;</span><br><span class="line">    a[k].mx = <span class="built_in">max</span>(a[lson].mx, a[rson].mx);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    a[k].l = l, a[k].r = r;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        a[k].sum = num[l];</span><br><span class="line">        a[k].mx = num[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(lson, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(rson, mid + <span class="number">1</span>, r);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[lson].sum += a[k].add;</span><br><span class="line">    a[rson].sum += a[k].add;</span><br><span class="line">    a[lson].mx += a[k].add;</span><br><span class="line">    a[rson].mx += a[k].add;</span><br><span class="line">    a[lson].add += a[k].add;</span><br><span class="line">    a[rson].add += a[k].add;</span><br><span class="line">    a[k].add = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mod</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].mx &lt; p) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l == a[k].r) &#123;</span><br><span class="line">        a[k].sum %= p;</span><br><span class="line">        a[k].mx = a[k].sum;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="built_in">mod</span>(lson, l, r, p);</span><br><span class="line">    <span class="built_in">mod</span>(rson, l, r, p);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; l || a[k].r &lt; l) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l == a[k].r) &#123;</span><br><span class="line">        a[k].sum = x;</span><br><span class="line">        a[k].mx = x;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="built_in">change</span>(lson, l, x);</span><br><span class="line">    <span class="built_in">change</span>(rson, l, x);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt;= l &amp;&amp; a[k].r &lt;= r) &#123;</span><br><span class="line">        <span class="keyword">return</span> a[k].sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">query</span>(lson, l, r) + <span class="built_in">query</span>(rson, l, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;num[i]);</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">int</span> op, l, r, x;</span><br><span class="line">    <span class="keyword">while</span>(m--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;op, &amp;l, &amp;r);</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">query</span>(<span class="number">1</span>, l, r));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;x);</span><br><span class="line">            <span class="built_in">mod</span>(<span class="number">1</span>, l, r, x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="built_in">change</span>(<span class="number">1</span>, l, r);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CF1000F-One-Occurrence"><a href="#CF1000F-One-Occurrence" class="headerlink" title="CF1000F One Occurrence"></a><a href="https://www.luogu.com.cn/problem/CF1000F">CF1000F One Occurrence</a></h2><p>卡常的道路越走越远（</p><p>又是用根号算法卡 $\log$ 的 std （逃</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(3)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(<span class="meta-string">&quot;Ofast&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rint register int</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">query</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">    <span class="keyword">int</span> idx, blc;</span><br><span class="line">&#125;q[maxn];</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> mp[maxn];</span><br><span class="line"><span class="keyword">int</span> pos[maxn];</span><br><span class="line"><span class="keyword">int</span> stk[maxn];</span><br><span class="line"><span class="keyword">int</span> top = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> query&amp; x, <span class="keyword">const</span> query&amp; y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.blc == y.blc) <span class="keyword">if</span>(x.blc &amp; <span class="number">1</span>) <span class="keyword">return</span> x.r &lt; y.r; <span class="keyword">else</span> <span class="keyword">return</span> x.r &gt; y.r;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> x.l &lt; y.l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">gc</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">char</span> buf[<span class="number">100000</span>],*p1=buf,*p2=buf;</span><br><span class="line">    <span class="keyword">return</span> p1==p2&amp;&amp;(p2=(p1=buf)+<span class="built_in">fread</span>(buf,<span class="number">1</span>,<span class="number">100000</span>,stdin),p1==p2)?EOF:*p1++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> c = <span class="built_in">gc</span>();</span><br><span class="line"><span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span>||c&gt;<span class="string">&#x27;9&#x27;</span>) c = <span class="built_in">gc</span>();</span><br><span class="line"><span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">x = (x&lt;&lt;<span class="number">3</span>)+(x&lt;&lt;<span class="number">1</span>)+(c^<span class="number">48</span>);</span><br><span class="line">c = <span class="built_in">gc</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (rint i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">read</span>(a[i]);</span><br><span class="line">    <span class="built_in">read</span>(m);</span><br><span class="line">    <span class="keyword">int</span> u = (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (rint i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">read</span>(q[i].l);</span><br><span class="line">        <span class="built_in">read</span>(q[i].r);</span><br><span class="line">        q[i].idx = i;</span><br><span class="line">        q[i].blc = (q[i].l - <span class="number">1</span>) / u + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(q + <span class="number">1</span>, q + <span class="number">1</span> + m, cmp);</span><br><span class="line">    stk[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    rint l = <span class="number">1</span>, r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (rint i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="keyword">while</span>(l &gt; q[i].l) &#123;</span><br><span class="line">            l--;</span><br><span class="line">            mp[a[l]]++;</span><br><span class="line">            <span class="keyword">if</span>(mp[a[l]] == <span class="number">1</span>) &#123;</span><br><span class="line">                stk[++top] = a[l];</span><br><span class="line">                pos[a[l]] = top;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(mp[a[l]] == <span class="number">2</span>) &#123;</span><br><span class="line">                stk[pos[a[l]]] = stk[top];</span><br><span class="line">                pos[stk[top]] = pos[a[l]];</span><br><span class="line">                stk[top--] = pos[a[l]] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(r &lt; q[i].r) &#123;</span><br><span class="line">            r++;</span><br><span class="line">            mp[a[r]]++;</span><br><span class="line">            <span class="keyword">if</span>(mp[a[r]] == <span class="number">1</span>) &#123;</span><br><span class="line">                stk[++top] = a[r];</span><br><span class="line">                pos[a[r]] = top;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(mp[a[r]] == <span class="number">2</span>) &#123;</span><br><span class="line">                stk[pos[a[r]]] = stk[top];</span><br><span class="line">                pos[stk[top]] = pos[a[r]];</span><br><span class="line">                stk[top--] = pos[a[r]] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(l &lt; q[i].l) &#123;</span><br><span class="line">            mp[a[l]]--;</span><br><span class="line">            <span class="keyword">if</span>(mp[a[l]] == <span class="number">1</span>) &#123;</span><br><span class="line">                stk[++top] = a[l];</span><br><span class="line">                pos[a[l]] = top;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(mp[a[l]] == <span class="number">0</span>) &#123;</span><br><span class="line">                stk[pos[a[l]]] = stk[top];</span><br><span class="line">                pos[stk[top]] = pos[a[l]];</span><br><span class="line">                stk[top--] = pos[a[l]] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(r &gt; q[i].r) &#123;</span><br><span class="line">            mp[a[r]]--;</span><br><span class="line">            <span class="keyword">if</span>(mp[a[r]] == <span class="number">1</span>) &#123;</span><br><span class="line">                stk[++top] = a[r];</span><br><span class="line">                pos[a[r]] = top;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(mp[a[r]] == <span class="number">0</span>) &#123;</span><br><span class="line">                stk[pos[a[r]]] = stk[top];</span><br><span class="line">                pos[stk[top]] = pos[a[r]];</span><br><span class="line">                stk[top--] = pos[a[r]] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            r--;</span><br><span class="line">        &#125;</span><br><span class="line">        ans[q[i].idx] = stk[top];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (rint i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2184-贪婪大陆"><a href="#P2184-贪婪大陆" class="headerlink" title="P2184 贪婪大陆"></a><a href="https://www.luogu.com.cn/problem/P2184">P2184 贪婪大陆</a></h2><p>一次过，今天码力在线qwq</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k &lt;&lt; 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k &lt;&lt; 1 | 1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">    <span class="keyword">int</span> pre, lst;</span><br><span class="line">    <span class="keyword">int</span> tp, tl;</span><br><span class="line">&#125;a[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> num[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    a[k].l = l, a[k].r = r;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(lson, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(rson, mid + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[k].pre = a[lson].pre + a[rson].pre;</span><br><span class="line">    a[k].lst = a[lson].lst + a[rson].lst;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushtag</span> <span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    a[k].tp += x;</span><br><span class="line">    a[k].pre += x;</span><br><span class="line">    a[k].lst += y;</span><br><span class="line">    a[k].tl += y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">pushtag</span>(lson, a[k].tp, a[k].tl);</span><br><span class="line">    <span class="built_in">pushtag</span>(rson, a[k].tp, a[k].tl);</span><br><span class="line">    a[k].tp = a[k].tl = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; r || a[k].r &lt; l) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt;= l &amp;&amp; a[k].r &lt;= r) &#123;</span><br><span class="line">        <span class="keyword">if</span>(type == <span class="number">1</span>) a[k].pre++, a[k].tp++;</span><br><span class="line">        <span class="keyword">else</span> a[k].lst++, a[k].tl++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="built_in">add</span>(lson, l, r, type);</span><br><span class="line">    <span class="built_in">add</span>(rson, l, r, type);</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x, <span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l &gt; x || a[k].r &lt; x) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[k].l == a[k].r) &#123;</span><br><span class="line">        <span class="keyword">if</span>(type == <span class="number">1</span>) <span class="keyword">return</span> a[k].pre;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> a[k].lst;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushdown</span>(k);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">query</span>(lson, x, type) + <span class="built_in">query</span>(rson, x, type);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>, <span class="number">0</span>, n);</span><br><span class="line">    <span class="keyword">int</span> q, l, r;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;q, &amp;l, &amp;r);</span><br><span class="line">        <span class="keyword">if</span>(q == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">add</span>(<span class="number">1</span>, l, n, <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">add</span>(<span class="number">1</span>, r, n, <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="built_in">query</span>(<span class="number">1</span>, r, <span class="number">1</span>);</span><br><span class="line">            ans -= <span class="built_in">query</span>(<span class="number">1</span>, l - <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="11-28"><a href="#11-28" class="headerlink" title="11.28"></a>11.28</h1><h2 id="P1637-三元上升子序列"><a href="#P1637-三元上升子序列" class="headerlink" title="P1637 三元上升子序列"></a><a href="https://www.luogu.com.cn/problem/P1637">P1637 三元上升子序列</a></h2><p>维护两个树状数组</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> c[maxn];</span><br><span class="line"><span class="keyword">int</span> d[maxn];</span><br><span class="line"><span class="keyword">int</span> b[maxn];</span><br><span class="line">map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mp;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> pos;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(k &lt;= pos) &#123;</span><br><span class="line">        c[k] += x;</span><br><span class="line">        k += <span class="built_in">lowbit</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">        ans += c[x];</span><br><span class="line">        x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add2</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(k &lt;= pos) &#123;</span><br><span class="line">        d[k] += x;</span><br><span class="line">        k += <span class="built_in">lowbit</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query2</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">        ans += d[x];</span><br><span class="line">        x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]), b[i] = a[i];</span><br><span class="line">    <span class="built_in">sort</span>(b + <span class="number">1</span>, b + <span class="number">1</span> + n);</span><br><span class="line">    b[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i] != b[i - <span class="number">1</span>]) &#123;</span><br><span class="line">            mp[b[i]] = ++pos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">add2</span>(mp[a[i]], <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">add2</span>(mp[a[i]], <span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">int</span> r1 = <span class="built_in">query</span>(mp[a[i]] - <span class="number">1</span>), r2 = <span class="built_in">query2</span>(pos) - <span class="built_in">query2</span>(mp[a[i]]);</span><br><span class="line">        ans += r1 * r2;</span><br><span class="line">        <span class="built_in">add</span>(mp[a[i]], <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="12-9"><a href="#12-9" class="headerlink" title="12.9"></a>12.9</h1><p>回新手村练练手，希望重新找回A题的快感，停止自闭……手太生了，感觉特别差…….明明没有休整几天的说（也有十来天了吧喂！）。总之，必须快点重整旗鼓。</p><p>今日目标：刷完洛谷贪心题单（整个题单就没有难题啊喂！）。</p><h2 id="P1803-凌乱的yyy-线段覆盖"><a href="#P1803-凌乱的yyy-线段覆盖" class="headerlink" title="P1803 凌乱的yyy / 线段覆盖"></a><a href="https://www.luogu.com.cn/problem/P1803">P1803 凌乱的yyy / 线段覆盖</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> r &lt; x.r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i].l &gt;&gt; a[i].r;</span><br><span class="line">    <span class="built_in">sort</span> (a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> now = a[<span class="number">1</span>].r;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i].l &gt;= now) &#123;</span><br><span class="line">            ans++;</span><br><span class="line">            now = a[i].r;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2240-【深基12-例1】部分背包问题"><a href="#P2240-【深基12-例1】部分背包问题" class="headerlink" title="P2240 【深基12.例1】部分背包问题"></a><a href="https://www.luogu.com.cn/problem/P2240">P2240 【深基12.例1】部分背包问题</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">double</span> ans;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">105</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> weight;</span><br><span class="line">    <span class="keyword">double</span> x; <span class="comment">// 单位价值</span></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;y) &#123;</span><br><span class="line">        <span class="keyword">return</span> x &gt; y.x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, t;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; t;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        a[i].weight = x;</span><br><span class="line">        a[i].x = <span class="number">1.0</span> * y / x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i].weight &gt; t) &#123;</span><br><span class="line">            ans += a[i].x * t;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans += a[i].x * a[i].weight;</span><br><span class="line">        t -= a[i].weight;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1223-排队接水"><a href="#P1223-排队接水" class="headerlink" title="P1223 排队接水"></a><a href="https://www.luogu.com.cn/problem/P1223">P1223 排队接水</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">1005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, id;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp; y) &#123;</span><br><span class="line">        <span class="keyword">return</span> x &lt; y.x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) a[i].id = i, cin &gt;&gt; a[i].x;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cout &lt;&lt; a[i].id &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        ans += (n - i) * a[i].x;</span><br><span class="line">    &#125;</span><br><span class="line">    ans /= n;</span><br><span class="line">    cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3817-小A的糖果"><a href="#P3817-小A的糖果" class="headerlink" title="P3817 小A的糖果"></a><a href="https://www.luogu.com.cn/problem/P3817">P3817 小A的糖果</a></h2><p>不开<code>long long</code>见祖宗！</p><p>我怎么就是甜蜜的改不过来？？？？</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n, x;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] + a[i - <span class="number">1</span>] &gt; x) &#123;</span><br><span class="line">            ans += a[i] + a[i - <span class="number">1</span>] - x;</span><br><span class="line">            a[i] = x - a[i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1106-删数问题"><a href="#P1106-删数问题" class="headerlink" title="P1106 删数问题"></a><a href="https://www.luogu.com.cn/problem/P1106">P1106 删数问题</a></h2><p>删峰即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">255</span>;</span><br><span class="line"><span class="keyword">bool</span> v[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    cin &gt;&gt; k;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; ++i) &#123;</span><br><span class="line">        <span class="comment">// 去前导0</span></span><br><span class="line">        <span class="keyword">while</span> (v[l] || s[l] == <span class="string">&#x27;0&#x27;</span>) l++;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = l; j &lt; s.<span class="built_in">size</span>(); ) &#123;</span><br><span class="line">            <span class="keyword">while</span> (j &lt; s.<span class="built_in">size</span>() &amp;&amp; v[j]) j++;</span><br><span class="line">            <span class="keyword">int</span> p1 = j++;</span><br><span class="line">            <span class="keyword">while</span> (j &lt; s.<span class="built_in">size</span>() &amp;&amp; v[j]) j++;</span><br><span class="line">            <span class="keyword">if</span> (p1 &lt; s.<span class="built_in">size</span>() &amp;&amp; (j &gt;= s.<span class="built_in">size</span>() || s[p1] &gt; s[j])) &#123;</span><br><span class="line">                v[p1] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt; s.<span class="built_in">size</span>(); ++i) <span class="keyword">if</span>(!v[i]) cout &lt;&lt; s[i];</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.luogu.com.cn/problem/P1478">P1478 陶陶摘苹果（升级版）</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;other) &#123;</span><br><span class="line">        <span class="keyword">return</span> y &lt; other.y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n, s;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; s;</span><br><span class="line">    <span class="keyword">int</span> u, v;</span><br><span class="line">    cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i].x &gt;&gt; a[i].y;</span><br><span class="line">    <span class="built_in">sort</span> (a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i].x &lt;= u + v &amp;&amp; a[i].y &lt;= s) &#123;</span><br><span class="line">            s -= a[i].y;</span><br><span class="line">            ans ++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P4447-AHOI2018初中组-分组"><a href="#P4447-AHOI2018初中组-分组" class="headerlink" title="P4447 [AHOI2018初中组]分组"></a><a href="https://www.luogu.com.cn/problem/P4447">P4447 [AHOI2018初中组]分组</a></h2><p>蒟蒻跪了orz</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line">map&lt;<span class="keyword">int</span>, priority_queue&lt;<span class="keyword">int</span>, vector&lt;<span class="keyword">int</span>&gt;, greater&lt;<span class="keyword">int</span>&gt;&gt;&gt; mp;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mp[a[i] - <span class="number">1</span>].<span class="built_in">empty</span>()) &#123;</span><br><span class="line">            mp[a[i]].<span class="built_in">push</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> r = mp[a[i] - <span class="number">1</span>].<span class="built_in">top</span>();</span><br><span class="line">            mp[a[i] - <span class="number">1</span>].<span class="built_in">pop</span>();</span><br><span class="line">            mp[a[i]].<span class="built_in">push</span>(r + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;x : mp) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.second.<span class="built_in">empty</span>()) <span class="keyword">continue</span>;</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, (<span class="keyword">int</span>)x.second.<span class="built_in">top</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1094-NOIP2007-普及组-纪念品分组"><a href="#P1094-NOIP2007-普及组-纪念品分组" class="headerlink" title="P1094 [NOIP2007 普及组] 纪念品分组"></a><a href="https://www.luogu.com.cn/problem/P1094">P1094 [NOIP2007 普及组] 纪念品分组</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">bool</span> v[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> w;</span><br><span class="line">    cin &gt;&gt; w;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="comment">// int cnt = 0;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">        <span class="keyword">while</span> (r &gt; l &amp;&amp; a[l] + a[r] &gt; w) r--;</span><br><span class="line">        <span class="keyword">if</span> (r &gt; l) &#123;</span><br><span class="line">            ans++;</span><br><span class="line">            v[l] = <span class="number">1</span>;</span><br><span class="line">            v[r] = <span class="number">1</span>;</span><br><span class="line">            l++;</span><br><span class="line">            r--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="keyword">if</span>(!v[i]) ans++;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="12-14"><a href="#12-14" class="headerlink" title="12.14"></a>12.14</h1><h2 id="P3369-【模板】普通平衡树"><a href="#P3369-【模板】普通平衡树" class="headerlink" title="P3369 【模板】普通平衡树"></a><a href="https://www.luogu.com.cn/problem/P3369">P3369 【模板】普通平衡树</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="keyword">int</span> root;</span><br><span class="line"><span class="comment">// 注意按p是小根堆</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, size, val, p;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    a[k].size = <span class="number">1</span> + a[a[k].l].size + a[a[k].r].size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rrotate</span><span class="params">(<span class="keyword">int</span> &amp;k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = a[k].l;</span><br><span class="line">    a[k].l = a[tmp].r;</span><br><span class="line">    a[tmp].r = k;</span><br><span class="line">    a[tmp].size = a[k].size;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">    k = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lrotate</span><span class="params">(<span class="keyword">int</span> &amp;k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = a[k].r;</span><br><span class="line">    a[k].r = a[tmp].l;</span><br><span class="line">    a[tmp].l = k;</span><br><span class="line">    a[tmp].size = a[k].size;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">    k = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> &amp;k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k == <span class="number">0</span>) &#123;</span><br><span class="line">        k = ++cnt;</span><br><span class="line">        a[k].val = val;</span><br><span class="line">        a[k].p = <span class="built_in">rand</span>();</span><br><span class="line">        a[k].size = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a[k].size++;</span><br><span class="line">    <span class="keyword">if</span> (val &gt;= a[k].val) &#123;</span><br><span class="line">        <span class="built_in">ins</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">ins</span>(a[k].l, val);</span><br><span class="line">    <span class="keyword">if</span> (a[k].l &amp;&amp; a[k].p &gt; a[a[k].l].p) &#123;</span><br><span class="line">        <span class="built_in">rrotate</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[k].r &amp;&amp; a[k].p &gt; a[a[k].r].p) &#123;</span><br><span class="line">        <span class="built_in">lrotate</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> &amp;k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    a[k].size--;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val == val) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!a[k].l &amp;&amp; !a[k].r) &#123;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!a[k].l || !a[k].r) &#123;</span><br><span class="line">            k = a[k].l + a[k].r;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a[a[k].l].p &lt; a[a[k].r].p) &#123;</span><br><span class="line">            <span class="built_in">rrotate</span>(k);</span><br><span class="line">            <span class="built_in">del</span>(a[k].r, val); <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">lrotate</span>(k);</span><br><span class="line">            <span class="built_in">del</span>(a[k].l, val); <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val &gt;= val) &#123;</span><br><span class="line">        <span class="built_in">del</span>(a[k].l, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">del</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">pushup</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rk</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (val &gt; a[k].val) &#123;</span><br><span class="line">        <span class="keyword">return</span> a[a[k].l].size + <span class="built_in">rk</span>(a[k].r, val) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">rk</span>(a[k].l, val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> rnk)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (rnk == a[a[k].l].size + <span class="number">1</span>) <span class="keyword">return</span> a[k].val;</span><br><span class="line">    <span class="keyword">if</span> (rnk &gt; a[a[k].l].size + <span class="number">1</span>) <span class="keyword">return</span> <span class="built_in">find</span>(a[k].r, rnk - a[a[k].l].size - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">find</span>(a[k].l, rnk);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query_pre</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val &gt;= val) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">query_pre</span>(a[k].l, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="built_in">query_pre</span>(a[k].r, val);</span><br><span class="line">    <span class="keyword">if</span> (!tmp) <span class="keyword">return</span> a[k].val;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query_suf</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[k].val &lt;= val) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">query_suf</span>(a[k].r, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="built_in">query_suf</span>(a[k].l, val);</span><br><span class="line">    <span class="keyword">if</span> (!tmp) <span class="keyword">return</span> a[k].val;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> opt, x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        cin &gt;&gt; opt &gt;&gt; x;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">ins</span>(root, x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="built_in">del</span>(root, x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">3</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">rk</span>(root, x) + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">4</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">find</span>(root, x) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">5</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">query_pre</span>(root, x) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="built_in">query_suf</span>(root, x) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;9-23&quot;&gt;&lt;a href=&quot;#9-23&quot; class=&quot;headerlink&quot; title=&quot;9.23&quot;&gt;&lt;/a&gt;9.23&lt;/h1&gt;&lt;h2 id=&quot;P2032-扫描&quot;&gt;&lt;a href=&quot;#P2032-扫描&quot; class=&quot;headerl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 114 (Rated for Div. 2) 个人题解</title>
    <link href="https://eykenis.github.io/2021/09/21/Educational-Codeforces-Round-114-Rated-for-Div-2-%E4%B8%AA%E4%BA%BA%E9%A2%98%E8%A7%A3/"/>
    <id>https://eykenis.github.io/2021/09/21/Educational-Codeforces-Round-114-Rated-for-Div-2-%E4%B8%AA%E4%BA%BA%E9%A2%98%E8%A7%A3/</id>
    <published>2021-09-21T03:03:16.000Z</published>
    <updated>2021-09-21T05:41:14.711Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Regular-Bracket-Sequences"><a href="#A-Regular-Bracket-Sequences" class="headerlink" title="A. Regular Bracket Sequences"></a>A. Regular Bracket Sequences</h1><p><strong>题意</strong></p><p>输出$n$个不同的长度为$2n$的合法括号序列.</p><p><strong>分析</strong></p><p>先输出一个”()()()…”序列.</p><p>然后依次输出”(())()”, “()(())”,…，也就是每次把第$i$个和第$i+1$个交换，其中$i$从下标2到n-2，这样恰好$n-1$个，加上最开始的共$n$个。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        string s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">            s += <span class="string">&#x27;(&#x27;</span>;</span><br><span class="line">            s += <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i + <span class="number">1</span> &lt; s.<span class="built_in">size</span>(); i += <span class="number">2</span>)&#123;</span><br><span class="line">            s[i] = <span class="string">&#x27;(&#x27;</span>;</span><br><span class="line">            s[i + <span class="number">1</span>] = <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">            cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">            s[i] = <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">            s[i + <span class="number">1</span>] = <span class="string">&#x27;(&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Combinatorics-Homework"><a href="#B-Combinatorics-Homework" class="headerlink" title="B. Combinatorics Homework"></a>B. Combinatorics Homework</h1><p><strong>题意</strong></p><p>你需要判断是否存在一个字符串：</p><ol><li>恰好a个’A’，b个’B’，c个‘C’</li><li>没有其他字符</li><li>恰好m对相邻且相同的字符对（如”AA”）</li></ol><p><strong>分析</strong></p><p>目标是寻找可以满足要求的$m$取值范围。</p><p>将三种字符的数量排序，找到其个数最多的，假设为’A’，记’B’和’C’的数量和为$s$。</p><p>$m$最大取值显然是$a+b+c-3$.</p><p>找$m$的最小值。把$s$个字符排开，其有$s+1$个位置可以插入’A’。若’A’的数量不超过$s+1$，那么肯定可以达到最小状态，即不存在相邻且相同的字符对。可能会想到’A’没有填满所有空缺时有可能’B’或者’C’会出现连续的情况，但其实这种情况发生的话’A’肯定就不是个数最多的了。反之，若’A’的数量超过了$s+1$，那么至少出现的相同字符对就是$s+1-a$对。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a, b, c, m;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; m;</span><br><span class="line">        <span class="keyword">int</span> mx = a + b + c - <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span> p[<span class="number">3</span>] = &#123;a, b, c&#125;;</span><br><span class="line">        <span class="built_in">sort</span>(p, p + <span class="number">3</span>);</span><br><span class="line">        <span class="keyword">int</span> r2 = p[<span class="number">0</span>] + p[<span class="number">1</span>] + <span class="number">1</span>, r1 = p[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">int</span> mn = <span class="built_in">max</span>(<span class="number">0LL</span>, r1 - r2);</span><br><span class="line">        <span class="keyword">if</span>(mx &gt;= m &amp;&amp; mn &lt;= m)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h1 id="C-Slay-the-Dragon"><a href="#C-Slay-the-Dragon" class="headerlink" title="C. Slay the Dragon"></a>C. Slay the Dragon</h1><p><strong>题意</strong></p><p>有$m$条龙和$n$个勇士，每个勇士的力量是$a_i$，每个龙的防御力为$x_i$，攻击力为$y_i$。对每条龙$i$，你需要派遣一个勇士，要求力量大于等于$x_i$，如果不足$x_i$，需要支付等量的金币补足差值；同时要求剩余的勇士力量总和大于等于$y_i$，不足用金币补足。问击杀每条龙需要支付的金币至少是多少（每条龙之间分别计算，相互独立）</p><p><strong>分析</strong></p><p>贪心，对勇士力量升序排序。对每条龙，<code>lower_bound(a+1,a+1+n, x[i])</code>查找出一个勇士$s$，如果要派遣一个大于等于$x_i$的勇士去，那么必定是派$s$去。</p><p>但又有可能这个$s$超过$x_i$很多而其他的总和不足$y_i$，这个时候$s-1$也可能是答案。</p><p>所以答案要么是派$s$去，要么是派$s-1$去。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> x[maxn], y[maxn];</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    t = <span class="number">1</span>;</span><br><span class="line">    a[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">int</span> m;</span><br><span class="line">        cin &gt;&gt; m;</span><br><span class="line">        fors(i, <span class="number">1</span> , m) cin &gt;&gt; x[i] &gt;&gt; y[i];</span><br><span class="line">        <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">        pre[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) pre[i] = pre[i - <span class="number">1</span>] + a[i];</span><br><span class="line">        fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">            <span class="keyword">int</span> now = <span class="built_in">lower_bound</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n, x[i]) - a;</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(now == n + <span class="number">1</span>)&#123;</span><br><span class="line">                ans += x[i] - a[n];</span><br><span class="line">                ans += (pre[n - <span class="number">1</span>] &gt;= y[i] ? <span class="number">0</span> : y[i] - pre[n - <span class="number">1</span>]);</span><br><span class="line">                cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 要么选now，要么选now-1.</span></span><br><span class="line">                ans = (pre[n] - a[now] &gt;= y[i] ? <span class="number">0</span> : y[i] - (pre[n] - a[now]));</span><br><span class="line">                <span class="keyword">if</span>(now == <span class="number">1</span>)&#123;</span><br><span class="line">                    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">                now--;</span><br><span class="line">                res += x[i] - a[now];</span><br><span class="line">                res += (pre[n] - a[now] &gt;= y[i] ? <span class="number">0</span> : y[i] - (pre[n] - a[now]));</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, res);</span><br><span class="line">                cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-The-Strongest-Build"><a href="#D-The-Strongest-Build" class="headerlink" title="D. The Strongest Build"></a>D. The Strongest Build</h1><p><strong>题意</strong></p><p>有$n(n\leq 10)$个单调不下降数组，每个数组长$c_i$，第$i$个数组的第$j$个元素表示为$a_{ij}$，保证$\sum c_i\leq2·10^5$，你需要从每个数组中选一个元素，但约定有$m(m\leq 10^5)$个选择方案是不允许的。求一个方案使得所有选择的元素和最大，输出方案。</p><p><strong>分析</strong></p><p>暴力枚举。首先考虑所有数组都选最后一个元素（最大的），如果这个方案不行，那就枚举所有被禁止的方案。例如，假如某个方案{a,b,c}是禁止的，那么就看{a-1,b,c},{a,b-1,c},{a,b,c-1}有没有禁止，没有就更新答案，这样枚举出来的一定是最优解。</p><p>贪心思路：</p><p>若$\{a_{c_1},a_{c_2},…\}$这个在没有限制条件下的方案被限制了的话，可能的最优解就从$\{a_{c_1-1},a_{c_2},…\},\{a_{c_1},a_{c_2-1},…\}$里面产生。如果这些方案中也有被限制的，那么就再从这些中<strong>枚举每个位置分别将其减一</strong>再更新答案。这样可以保证每次都是“退而求其次”，但一定是可选择的里面最优的。毕竟$m\leq 10^5$，故最多需要枚举$mn$次。加上二分查找，时间复杂度为$O(mn\log m)$</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">12</span>][maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">set&lt;vector&lt;<span class="keyword">int</span>&gt; &gt; v;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        cin &gt;&gt; a[i][<span class="number">0</span>];</span><br><span class="line">        fors(j, <span class="number">1</span>, a[i][<span class="number">0</span>]) cin &gt;&gt; a[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m, p;</span><br><span class="line">    cin &gt;&gt; m;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; tmp;</span><br><span class="line">    fors(I, <span class="number">1</span>, m)&#123;</span><br><span class="line">        fors(j, <span class="number">1</span>, n)&#123;</span><br><span class="line">            cin &gt;&gt; p;</span><br><span class="line">            tmp.<span class="built_in">pb</span>(p);</span><br><span class="line">        &#125;</span><br><span class="line">        v.<span class="built_in">insert</span>(tmp);</span><br><span class="line">        tmp.<span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; ideal; fors(i, <span class="number">1</span>, n) ideal.<span class="built_in">pb</span>(a[i][<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">// bool flag = 0;</span></span><br><span class="line">    <span class="keyword">if</span>(v.<span class="built_in">find</span>(ideal) == v.<span class="built_in">end</span>())&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x : ideal) cout &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; endl; <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; f;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x : v)&#123;</span><br><span class="line">            tmp = x;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">                sum += a[i + <span class="number">1</span>][x[i]];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; x.<span class="built_in">size</span>(); ++j)&#123;</span><br><span class="line">                <span class="keyword">if</span>(x[j] - <span class="number">1</span> == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                sum -= a[j + <span class="number">1</span>][x[j]];</span><br><span class="line">                sum += a[j + <span class="number">1</span>][x[j] - <span class="number">1</span>];</span><br><span class="line">                x[j]--;</span><br><span class="line">                <span class="keyword">if</span>(v.<span class="built_in">find</span>(x) == v.<span class="built_in">end</span>() &amp;&amp; sum &gt; ans) ans = sum, f = x;</span><br><span class="line">                x[j]++;</span><br><span class="line">                sum += a[j + <span class="number">1</span>][x[j]];</span><br><span class="line">                sum -= a[j + <span class="number">1</span>][x[j] - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x : f) cout &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Is it love if I take you, or is it love if I set you free?</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 113 (Rated for Div. 2)</title>
    <link href="https://eykenis.github.io/2021/09/09/Educational-Codeforces-Round-113-Rated-for-Div-2/"/>
    <id>https://eykenis.github.io/2021/09/09/Educational-Codeforces-Round-113-Rated-for-Div-2/</id>
    <published>2021-09-09T00:40:53.000Z</published>
    <updated>2021-09-09T15:22:32.088Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Balanced-Substring"><a href="#A-Balanced-Substring" class="headerlink" title="A. Balanced Substring"></a>A. Balanced Substring</h1><p><strong>题意</strong><br>从给定的$ab$串中找到任意一个$a,b$数量相等的子串并输出。如果找不到输出$-1 -1$.</p><p><strong>分析</strong></p><p>如果一个较大的子串符合要求，则其中必然出现”$ab$”或者”$ba$”，故只找这两种串即可。</p><p>另外$n\leq 50$，随便你怎么暴力。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>() - <span class="number">1</span>; ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] != s[i + <span class="number">1</span>])&#123;</span><br><span class="line">                cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; i + <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag) cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Chess-Tournament"><a href="#B-Chess-Tournament" class="headerlink" title="B. Chess Tournament"></a>B. Chess Tournament</h1><p><strong>题意</strong></p><p>有$n$个人两两比赛，他们分两种人，第一种人不能够有败绩，第二种人希望赢至少一局，存在平局。</p><p>问有没有可能构造出满足所有人的最终结果，如果有，输出任意一个结果。</p><p><strong>分析</strong></p><p>对于第一种人，他们不能有败绩，所以他们对局直接全部设为平局即可。</p><p>对于第二种人，他们要在内部赢其他人至少一次。对于第 $i$ 个人，可以贪心地选取当前剩余未比场次最多的人 $j$ 来让 $i$ 赢 $j$。也可以直接让所有第二种人构成一个环，环上箭头尾部赢，头部输，除环以外剩下的对局随便填满即可。总之$n\leq 50$，随便怎么搞</p><p><strong>代码（贪心）</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id, s, type;</span><br><span class="line">&#125;a[<span class="number">55</span>];</span><br><span class="line"><span class="keyword">char</span> m[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// DDLC_ESCAPE_PLAN_FAILED;</span></span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="built_in">mem</span>(vis);</span><br><span class="line">        fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">            a[i].id = i;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%1d&quot;</span>, &amp;a[i].type);</span><br><span class="line">            a[i].s = n; <span class="comment">// 未比场数</span></span><br><span class="line">        &#125;</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i].type == <span class="number">2</span>) v.<span class="built_in">pb</span>(i);</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                fors(j, <span class="number">1</span>, n)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(i == j) <span class="keyword">continue</span>;</span><br><span class="line">                    m[i][j] = m[j][i] = <span class="string">&#x27;=&#x27;</span>;</span><br><span class="line">                    vis[i][j] = vis[j][i] = <span class="number">1</span>;</span><br><span class="line">                    a[j].s--, a[i].s--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; v.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">            <span class="keyword">int</span> mx = <span class="number">0</span>, mxi;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; v.<span class="built_in">size</span>(); ++j)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i == j) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(mx &lt; a[v[j]].s &amp;&amp; !vis[v[i]][v[j]])&#123;</span><br><span class="line">                    mx = a[v[j]].s;</span><br><span class="line">                    mxi = v[j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(mx == <span class="number">0</span>)&#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            a[v[i]].s--, a[mxi].s--;</span><br><span class="line">            m[v[i]][mxi] = <span class="string">&#x27;+&#x27;</span>, m[mxi][v[i]] = <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">            vis[v[i]][mxi] = vis[mxi][v[i]] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">            fors(j, <span class="number">1</span>, n)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!vis[i][j])&#123;</span><br><span class="line">                    m[i][j] = <span class="string">&#x27;+&#x27;</span>, m[j][i] = <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">                    vis[i][j] = vis[j][i] = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag) cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">            fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">                fors(j, <span class="number">1</span>, n)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(i == j)&#123;</span><br><span class="line">                        cout &lt;&lt; <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    cout &lt;&lt; m[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">                cout &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Jury-Meeting"><a href="#C-Jury-Meeting" class="headerlink" title="C. Jury Meeting"></a>C. Jury Meeting</h1><p><strong>题意</strong></p><p>有$n$个数，你需要把他们进行排列，排列完后，从左至右，每个数依次减去1。当一个数减为0后，它就会被跳过，不再减去。然后再从1开始，重复这个步骤，直到所有数都变成0。</p><p>你需要保证在这个过程中，不会有一个位置被连续减了两次，求满足条件的排列数。</p><p><strong>分析</strong></p><p>一个位置被连续减了两次当且仅当除了它以外全都是0. </p><p>剩下的这个被连续减去的肯定也只可能是最大值了。</p><p>显然可以知道：</p><ol><li>数列中所有数都相同时，全部排列都符合条件</li><li>数列中最大值与次大值相差大于1，且最大值只有1个时，无论如何都不会满足条件</li><li>数列中最大值出现次数超过1时，全部排列都符合条件（和情况1相似）</li></ol><p>故我们只需要讨论的情况只剩下：<strong>数列中最大值与次大值相差1，且最大值只出现一次</strong>的情况。</p><p><strong>要不使最大值被连续减去多次，当且仅当排列中最大值的后面存在次大值</strong>。</p><p>例如$3,3,4$最后会被减成$0,0,1$，再减一次$0,0,0$，第三个位置就被连续减了两次。但是$3,4,3$的话，最后减成$0,1,0$，最后减去第二个位置，但是第二个位置上一个减去的是第三个位置，不连续。</p><p>所以我们找到一种排列，最大值的后面有次大值即可。</p><p>为了稍微简化计算，不妨考虑其互斥情况：最大值后面没有次大值。</p><p>那么我们利用高中排列组合的“插空法”。假设$n$个数中，有$1$个最大值，$c2$个次大值。从$n$个位置中选择$c2+1$个位置，然后选出位置的最后一个放上最大值，其余位置用次大值进行全排列，剩下的$n-c2-1$个位置再用其余数全排列，得到$C_{n}^{c2+1}·A_{c2}^{c2}·A_{n-c2-1}^{n-c2-1}$，所以最终答案是</p><script type="math/tex; mode=display">ans= A_n^n - C_{n}^{c2+1}·A_{c2}^{c2}·A_{n-c2-1}^{n-c2-1}</script><p>（当然，正向考虑并不比这个互斥情况复杂，直接$ans=C_n^{c2+1}·C_{c2}^1·A_{c2}^{c2}·A_{n-c2-1}^{n-c2-1}$，昨晚有点多此一举）</p><p>具体实现上使用了Lucas定理，复杂度$O(nlogn)$，注意最后做减法的时候取模。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> pi[maxn];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353LL</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    a %= mod;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b &amp; <span class="number">1</span>)&#123;</span><br><span class="line">            ans = ans * a % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        a = a * a % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m &gt; n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">        <span class="keyword">int</span> a = (n + i - m) % mod;</span><br><span class="line">        <span class="keyword">int</span> b = i % mod;</span><br><span class="line">        ans = ans * (a * <span class="built_in">qpow</span>(b, mod - <span class="number">2</span>) % mod) % mod;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prework</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    pi[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    pi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, maxn - <span class="number">1</span>)&#123;</span><br><span class="line">        pi[i] = (pi[i - <span class="number">1</span>] * i) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="built_in">prework</span>();</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) mx = <span class="built_in">max</span>(mx, a[i]);</span><br><span class="line">        <span class="keyword">int</span> tmx = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i] &gt; tmx &amp;&amp; a[i] != mx) tmx = a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> c1 = <span class="number">0</span>, c2 = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i] == mx) c1++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a[i] == tmx) c2++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(c2 == <span class="number">0</span> || c1 &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            cout &lt;&lt; pi[n] &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(mx - tmx &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="built_in">C</span>(n, c1 + c2);</span><br><span class="line">            ans = (ans * pi[c1]) % mod;</span><br><span class="line">            ans = (ans * pi[c2]) % mod;</span><br><span class="line">            ans = (ans * pi[n - c1 -c2]) % mod;</span><br><span class="line">            ans = pi[n] - ans;</span><br><span class="line">            ans += <span class="number">2</span> * mod;</span><br><span class="line">            ans %= mod;</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="D-Inconvenient-Pairs"><a href="#D-Inconvenient-Pairs" class="headerlink" title="D. Inconvenient Pairs"></a>D. Inconvenient Pairs</h1><p><strong>题意</strong></p><p>在一个坐标从$(0,0)$到$(1e6,1e6)$的正方形框里，有$n$条横直线，$m$条纵直线。输入保证边界也是直线之一。现在有$k$个点分布在各个确定的直线上，只能通过已经画出的线移动，当一对点之间的最短路大于他们之间的曼哈顿距离时，这对点称为inconvenient，问有多少对inconvenient的点。</p><p><strong>分析</strong></p><p>当一个点在横线竖线的交点上时，它肯定不做贡献，到任意其他的点的最短路程都是曼哈顿距离。</p><p>但当两个点同在横线上但不是同一个横线上时，就有可能做贡献了。竖线同理。</p><p>如果两个点在横线上，且不在同一横线上，而且他们都被夹在相邻的两竖线之间，那么肯定就是inconvenient pair了，竖线同理。</p><p>我们需要算出，任意两相邻竖线之间有多少条在横线上的点，并排除掉在同一横线上的情况，然后计算答案。</p><p>具体就是用map存有哪些横（纵）边，然后对每个纵（横）边上的点用二分查找查出它在哪两个横（纵）边之间，答案先加上目前已统计的这两条横边之间的点的数目，再减去点所在纵边上原来有的点的数目。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> v[maxn], h[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        map&lt;<span class="keyword">int</span>, <span class="keyword">bool</span>&gt; verti, horiz;</span><br><span class="line">        map&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;, <span class="keyword">int</span>&gt; onY, onX;</span><br><span class="line">        map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; cntx, cnty;</span><br><span class="line">        <span class="keyword">int</span> n, m, k;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">        fors(i ,<span class="number">1</span>, n) cin &gt;&gt; v[i], verti[v[i]] = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, m) cin &gt;&gt; h[i], horiz[h[i]] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        fors(i, <span class="number">1</span>, k)&#123;</span><br><span class="line">            cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">            <span class="keyword">if</span>(verti.<span class="built_in">count</span>(x) &amp;&amp; horiz.<span class="built_in">count</span>(y)) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">int</span> px = <span class="built_in">lower_bound</span>(v + <span class="number">1</span>, v + <span class="number">1</span> + n, x) - v;</span><br><span class="line">                <span class="keyword">int</span> py = <span class="built_in">lower_bound</span>(h + <span class="number">1</span>, h + m + <span class="number">1</span>, y) - h;</span><br><span class="line">                <span class="keyword">if</span>(verti.<span class="built_in">count</span>(x))&#123;</span><br><span class="line">                    ans += cnty[py] - onX[&#123;py, x&#125;];</span><br><span class="line">                    cnty[py]++, onX[&#123;py, x&#125;]++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    ans += cntx[px] - onY[&#123;px, y&#125;];</span><br><span class="line">                    cntx[px]++, onY[&#123;px, y&#125;]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">The ink flows down into a dark paddle</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>无题</title>
    <link href="https://eykenis.github.io/2021/09/07/Loading/"/>
    <id>https://eykenis.github.io/2021/09/07/Loading/</id>
    <published>2021-09-07T12:46:35.000Z</published>
    <updated>2021-09-07T15:47:38.617Z</updated>
    
    <content type="html"><![CDATA[<p>暑假的时候我的状态大概是这样的：</p><ol><li>摸鱼</li><li>画画</li><li>搞Unity</li><li>玩会Adobe全家桶</li><li>eke啊eke！你怎么能如此堕落！先前订下的学习计划你都忘了吗？子曰：“吾日三省吾身。”不能再这样下去了！</li><li>玩Minecraft</li><li>玩Minecraft</li><li>摸鱼</li><li>D&amp;G</li><li>D&amp;G</li><li>D&amp;G</li><li>D&amp;G</li><li>学了一下ST表，D&amp;G</li><li>D&amp;G</li></ol><p>（从《八月洛谷训练记录》就可以看出来，后面做着做着题解懒得写了一直没更，再后面到了19号20号干脆懒得写题了）</p><p>所以本该暑假琢磨上紫名，把CF的坑填好的我路到一半就几乎放弃了。幸好荒日子统共也就十来天，目前正常情况下还是能在CF上上分的，总算恢复到以往的平衡状态。然而该反思的则是不该贪哪怕多一点，懒做一点，只要尝试了，贪的和懒的就会无限放大，最后快感阈值高起来可就不好了！</p><p>目前发现自己还是没有学太多东西。也不要追求每天学太多，保持每天在学，学了东西即可。冲太快反而可能绊自己的脚，反弹更严重哦。打算上蓝名之后休CF，画半个月一个月补知识点，再继续打CF，争取紫名。</p><p>年内紫名，最后通牒啊！qwq</p><p>反正也没有政策了，咱就把这个当打着玩玩呗。只不过不要放弃就是了</p><p>啊，想说这么多的想法还是</p><p>说这么多什么用也没有。</p><p>所以从这篇开始，以后都会少发自己不努力的牢骚，前面已经发了太多次了，每次都坚持不了多久呢。</p><p>0w0</p><p>打住，打住。</p>]]></content>
    
    
    <summary type="html">How can I write love into reality?</summary>
    
    
    
    <category term="牢骚" scheme="https://eykenis.github.io/categories/%E7%89%A2%E9%AA%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>Codeforces Round 742 (Div. 2)</title>
    <link href="https://eykenis.github.io/2021/09/06/Codeforces-Round-742-Div-2/"/>
    <id>https://eykenis.github.io/2021/09/06/Codeforces-Round-742-Div-2/</id>
    <published>2021-09-06T00:47:59.000Z</published>
    <updated>2021-09-06T01:35:06.546Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Domino-Disaster"><a href="#A-Domino-Disaster" class="headerlink" title="A. Domino Disaster"></a>A. Domino Disaster</h1><p>2分钟签到</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x : s)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x == <span class="string">&#x27;U&#x27;</span>) cout &lt;&lt; <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(x == <span class="string">&#x27;D&#x27;</span>) cout &lt;&lt; <span class="string">&#x27;U&#x27;</span>;</span><br><span class="line">            <span class="keyword">else</span> cout &lt;&lt; x;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-MEXor-Mixup"><a href="#B-MEXor-Mixup" class="headerlink" title="B. MEXor Mixup"></a>B. MEXor Mixup</h1><p><strong>题意</strong></p><p>现在有一个未定数组，它的$Mex$是$a$, 它所有元素的异或和是$b$​，问这个数组最少有几个元素。$(0&lt;a\leq 3e5,0\leq b\leq 5e4)$.​</p><p><strong>分析</strong></p><p>由于$Mex=a$，故$[0,a-1]$​必定出现。</p><p>讨论特殊情况：当$a=1,b=0$，这个数组是$\{0\}$，共一个元素。</p><p>其余的情况，首先我们对$[0,a-1 ]$做异或和，得出来一个数$x$。此时我们可以再取一个数$y$，使得$x\bigoplus y = b$. 但是要注意，这个$y$可能就是$a$. 根据异或的性质——$x\bigoplus y = z \Harr x \bigoplus z = y$.</p><p>故我们可以求出$y=x\bigoplus b$. 如果求出来的 $y$ 和 $a$ 不相等，那么我们的数组就是$[0,a-1]$加上 $y$，共 $a + 1$ 个元素；如果$y==a$，那么我们不可以直接给数组加上$a$，但一定可以通过另外两个不等于$a$的数作异或得到$a$，故数组共$a+2$个元素。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    pre[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, maxn - <span class="number">1</span>) pre[i] = (pre[i - <span class="number">1</span>] ^ i);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a, b;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="keyword">if</span>(a == <span class="number">1</span> &amp;&amp; b == <span class="number">0</span>)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> sum = pre[a - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(sum == b) cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>((sum ^ a) == b) cout &lt;&lt; a + <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">else</span> cout &lt;&lt; a + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="C-Carring-Condrum"><a href="#C-Carring-Condrum" class="headerlink" title="C. Carring Condrum"></a>C. Carring Condrum</h1><p><strong>题意</strong></p><p>作有着错误进位方式的竖式运算，每次遇到进位都会进两位而不是进一位。例如$1+9$，进位得到的1会放在百位而不是十位。</p><p>现在给出一个数$n$，问有多少对有序数对$(a,b)$，$0&lt;a,b&lt;n$，在经过这种错误运算方式之后会得到$n$.</p><p><strong>分析</strong></p><p>因为每次都进两位，故奇数位和偶数位之间互相不影响，可以把它们分开来看。</p><p>例如，2021这个数，我们可以拆成22和1.</p><p>其中，加和得到22的有序数对共23对（$a$从$0$到$22$​），加和得到1的有序数对共2对。把这奇偶的方法合并，那么总共有$23×2=46$个数对。</p><p>但是，由于2021这个数不能拆成$(0,2021)$和$(2021,0)$，所以要减去2个，最终答案是44.</p><p>所以，若拆分后奇数位数字是$x$,偶数位的是$y$，答案显然是$(x+1)(y+1)-2$.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i &amp; <span class="number">1</span>) a = a * <span class="number">10</span> + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            <span class="keyword">else</span> b = b * <span class="number">10</span> + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a++, b++;</span><br><span class="line">        cout &lt;&lt; a * b - <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">If I can’t hear the sound of your heartbeat</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="思维" scheme="https://eykenis.github.io/tags/%E6%80%9D%E7%BB%B4/"/>
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 112</title>
    <link href="https://eykenis.github.io/2021/07/31/Educational-Codeforces-Round-112/"/>
    <id>https://eykenis.github.io/2021/07/31/Educational-Codeforces-Round-112/</id>
    <published>2021-07-31T01:32:27.000Z</published>
    <updated>2021-07-31T02:46:18.450Z</updated>
    
    <content type="html"><![CDATA[<pre><code># A. PizzaForces</code></pre><p><strong>题意</strong></p><p>有三种披萨制作方案：15分钟制作6片、20分钟制作8片和25分钟制作10片。</p><p>问制作出至少$n$片披萨要多少分钟</p><p><strong>分析</strong></p><p>三种方案的效率都一样，都是每分钟制作0.4个披萨，也就是一片披萨要做2.5分钟，所以让溢出的时间尽可能少就可以了。</p><p>由于我们有$6,8,10$这三个数，我们可以通过不同的方案凑出$12,14,16,…$，所有大于等于6的偶数。</p><p>所以如果小于6，输出15，否则如果是偶数就输出$2.5n$，是奇数输出$2.5(n+1)$.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// DDLC_ESCAPE_PLAN_FAILED;</span></span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">if</span>(n &lt;= <span class="number">6</span>) <span class="built_in">printf</span>(<span class="string">&quot;15\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n &amp; <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, (<span class="keyword">int</span>)((n + <span class="number">1</span>) * <span class="number">2.5</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,(<span class="keyword">int</span>)( n * <span class="number">2.5</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Two-Tables"><a href="#B-Two-Tables" class="headerlink" title="B. Two Tables"></a>B. Two Tables</h1><p><strong>题意</strong></p><p>一个大矩形区域内有一张桌子，你要平移这张桌子（任意方向），使得能放下另一个$w×h$的桌子。求最小移动距离</p><p><strong>分析</strong></p><p>看这张桌子的正上方。正上方的区域，长度肯定是满足，可以放下的。所以我们只需要将其垂直向下平移就可以得到一种方案。那么，对于其他3个方向也一样。所以沿着坐标轴平移肯定优于斜着来，因为长和宽里面总是有一个是不需要额外移动来满足的，而斜平移相对于垂直平移在另外一个方向上做了无用的移动。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> W, H;</span><br><span class="line"><span class="keyword">int</span> x1, x2, y1, y2, w, h;</span><br><span class="line">cin &gt;&gt; W &gt;&gt; H;</span><br><span class="line">cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line">cin &gt;&gt; w &gt;&gt; h;</span><br><span class="line"><span class="keyword">int</span> ans = inf;</span><br><span class="line"><span class="keyword">int</span> r = <span class="built_in">abs</span>(w - x1);</span><br><span class="line"><span class="keyword">if</span>(x1 &gt;= w) r = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x2 + r &lt;= W) ans = <span class="built_in">min</span>(ans, r);</span><br><span class="line"><span class="keyword">int</span> l = <span class="built_in">abs</span>(x2 - W + w);</span><br><span class="line"><span class="keyword">if</span>(x2 &lt;= W - w) l = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x1 - l &gt;= <span class="number">0</span>) ans = <span class="built_in">min</span>(ans, l);</span><br><span class="line"><span class="keyword">int</span> u = <span class="built_in">abs</span>(y2 - H + h);</span><br><span class="line"><span class="keyword">if</span>(y2 &lt;= H - h) u = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(y1 - u &gt;= <span class="number">0</span>) ans = <span class="built_in">min</span>(ans, u);</span><br><span class="line"><span class="keyword">int</span> d = <span class="built_in">abs</span>(y1 - h);</span><br><span class="line"><span class="keyword">if</span>(y1 &gt;= h) d = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(y2 + d &lt;= H) ans = <span class="built_in">min</span>(ans, d);</span><br><span class="line">cout &lt;&lt; (ans == inf ? <span class="number">-1</span> : ans) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Coin-Rows"><a href="#C-Coin-Rows" class="headerlink" title="C. Coin Rows"></a>C. Coin Rows</h1><p><strong>题意</strong></p><p>有一个两行$m$列的矩阵，每个格子上有金币。$Alice$和$Bob$可以在矩阵中向下或者向右移动，但不能向其他方向移动。</p><p>$Alice$从$(1,1)$出发，走到$(2,m)$，并取走所有停留过的格子里的金币。</p><p>$Bob$同样从$(1,1)$出发，走到$(2,m)$，并取走所有停留过的格子里的金币（$Alice$已经取走的$Bob$取不到了）</p><p>$Alice$要让$Bob$得到的金币尽可能少，$Bob$会让自己得的尽可能多。</p><p>问最终$Bob$会得到多少金币？</p><p><strong>分析</strong></p><p>由于$Alice$要走到$(2,m)$，有且仅有一次向下移动。观察$m$在$1e5$的规模，枚举她向下移动发生的位置。然后，她拿走金币后，留下的金币只会分布在右上和左下两个地方，且$Bob$只能选择其中一个地方的金币全部拿走，而不能同时拿2个地方的金币。所以对2个地方剩余的金币取$max$就是答案。剩余金币的数量可以用前缀和处理。</p><p>时间复杂度$O(m)$.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][maxn];</span><br><span class="line"><span class="keyword">int</span> pre[maxn], lst[maxn]; <span class="comment">// 第一行从前往后的和，第二行从后往前的和</span></span><br><span class="line"><span class="keyword">int</span> sum1, sum2;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line">sum1 = sum2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line">fors(i, <span class="number">1</span>, <span class="number">2</span>)&#123;</span><br><span class="line">fors(j, <span class="number">1</span>, m)&#123;</span><br><span class="line">cin &gt;&gt; a[i][j];</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">1</span>) sum1 += a[i][j];</span><br><span class="line"><span class="keyword">else</span> sum2 += a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">pre[<span class="number">0</span>] = lst[m + <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, m) pre[i] = pre[i - <span class="number">1</span>] + a[<span class="number">1</span>][i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = m; i; --i) lst[i] = lst[i + <span class="number">1</span>] + a[<span class="number">2</span>][i];</span><br><span class="line"><span class="keyword">int</span> ans = inf;</span><br><span class="line">fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">ans = <span class="built_in">min</span>(ans, <span class="built_in">max</span>(sum2 - lst[i], sum1 - pre[i]));</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="D-Say-No-to-Palindromes"><a href="#D-Say-No-to-Palindromes" class="headerlink" title="D. Say No to Palindromes"></a>D. Say No to Palindromes</h1><p><strong>题意</strong></p><p>定义一个字符串是$beautiful$的，当且仅当：任选一个长度大于1的子串，其不是回文串。</p><p>现在给出一个<strong>只含有字母a,b,c</strong>的字符串$s$，然后给出$m$个询问，对每个询问，你需要回答下标$l$到$r$的子串如果要称为$beautiful$串，至少需要修改几次（只能用a,b,c修改）。</p><p><strong>分析</strong></p><p>考虑下面的情况：<br>对字符串$baa$：</p><ol><li>$b$替换$a$，$bba$,$bab$都含有回文子串，都不行</li><li>$c$替换$a$,$bac,bca$都符合要求.</li><li>其他情况很显然不行</li></ol><p>进一步总结规律，我们发现，一个字符串如果要变成非回文，其只能是形如$abcabcabcabc…$或者$bcabcabca…$，其他的情况都会发生两个字符相邻一样，或者隔一个一样，因此都是会导致回文子串产生的。</p><p>因此我们只需要看当前子串转变为以上两种串任意一种的子串就可以了，然后取$min$。</p><p>这样暴力的复杂度就是$O(n^2)$了，但还不够，需要继续优化。</p><p>优化很简单，任意区间修改成对应串的最小次数显然可以用前缀和维护，复杂度降到$O(n+m)$.</p><p>当然你也可以用莫队分块$O(m\sqrt n)$或者线段树$O(mlogn)$，但显然做复杂了（我属于是最近学了莫队就想用莫队，就当是练习了，差点超时，被很多Hacker盯上了QAQ，幸好没人叉掉）</p><p><strong>代码（莫队）</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line">string abc;</span><br><span class="line">string bca;</span><br><span class="line">string cab;</span><br><span class="line">string cba;</span><br><span class="line">string acb;</span><br><span class="line">string bac;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">query</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l, r;</span><br><span class="line"><span class="keyword">int</span> ans, idx, blc;</span><br><span class="line">&#125;q[maxn];</span><br><span class="line">string s;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(<span class="keyword">const</span> query&amp; x, <span class="keyword">const</span> query&amp; y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x.blc != y.blc) <span class="keyword">return</span> x.blc &lt; y.blc;</span><br><span class="line"><span class="keyword">return</span> x.r &lt; y.r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">rearr</span><span class="params">(<span class="keyword">const</span> query&amp; x, <span class="keyword">const</span> query&amp; y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.idx &lt; y.idx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; maxn; ++i)&#123;</span><br><span class="line">abc += i % <span class="number">3</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">bca += (i + <span class="number">1</span>) % <span class="number">3</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">cab += (i + <span class="number">2</span>) % <span class="number">3</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(i % <span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">acb += <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">cba += <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">bac += <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i % <span class="number">3</span> == <span class="number">1</span>)&#123;</span><br><span class="line">acb += <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">cba += <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">bac += <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">acb += <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">cba += <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">bac += <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">t = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">cin &gt;&gt; q[i].l &gt;&gt; q[i].r;</span><br><span class="line">q[i].l--, q[i].r--;</span><br><span class="line">q[i].idx = i;</span><br><span class="line">q[i].blc = (q[i].l - <span class="number">1</span>) / (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(n) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(q + <span class="number">1</span>, q + <span class="number">1</span> + m, cmp1);</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> ans1 = <span class="number">0</span>, ans2 = <span class="number">0</span>, ans3 = <span class="number">0</span>, ans4 = <span class="number">0</span>, ans5 = <span class="number">0</span>, ans6 = <span class="number">0</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line"><span class="keyword">while</span>(l &gt; q[i].l)&#123;</span><br><span class="line">l--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != abc[l]) ans1++;</span><br><span class="line"><span class="keyword">if</span>(s[l] != bca[l]) ans2++;</span><br><span class="line"><span class="keyword">if</span>(s[l] != cab[l]) ans3++;</span><br><span class="line"><span class="keyword">if</span>(s[l] != acb[l]) ans4++;</span><br><span class="line"><span class="keyword">if</span>(s[l] != cba[l]) ans5++;</span><br><span class="line"><span class="keyword">if</span>(s[l] != bac[l]) ans6++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(r &lt; q[i].r)&#123;</span><br><span class="line">r++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != abc[r]) ans1++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != bca[r]) ans2++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != cab[r]) ans3++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != acb[r]) ans4++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != cba[r]) ans5++;</span><br><span class="line"><span class="keyword">if</span>(s[r] != bac[r]) ans6++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(l &lt; q[i].l)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[l] != abc[l]) ans1--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != bca[l]) ans2--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != cab[l]) ans3--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != acb[l]) ans4--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != cba[l]) ans5--;</span><br><span class="line"><span class="keyword">if</span>(s[l] != bac[l]) ans6--;</span><br><span class="line">l++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(r &gt; q[i].r)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[r] != abc[r]) ans1--;</span><br><span class="line"><span class="keyword">if</span>(s[r] != bca[r]) ans2--;</span><br><span class="line"><span class="keyword">if</span>(s[r] != cab[r]) ans3--;</span><br><span class="line"><span class="keyword">if</span>(s[r] != acb[r]) ans4--;</span><br><span class="line"><span class="keyword">if</span>(s[r] != cba[r]) ans5--;</span><br><span class="line"><span class="keyword">if</span>(s[r] != bac[r]) ans6--;</span><br><span class="line">r--;</span><br><span class="line">&#125;</span><br><span class="line">q[i].ans = <span class="built_in">min</span>(<span class="built_in">min</span>(ans1, <span class="built_in">min</span>(ans2, ans3)), <span class="built_in">min</span>(ans4, <span class="built_in">min</span>(ans5, ans6)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(q + <span class="number">1</span>, q + <span class="number">1</span> + m, rearr);</span><br><span class="line">fors(i, <span class="number">1</span>, m) cout &lt;&lt; q[i].ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>代码（前缀和）</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> pre[<span class="number">6</span>][maxn] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">string s;</span><br><span class="line"><span class="keyword">char</span> check[<span class="number">6</span>][<span class="number">4</span>] = &#123;<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;bca&quot;</span>, <span class="string">&quot;cab&quot;</span>, <span class="string">&quot;acb&quot;</span>, <span class="string">&quot;cba&quot;</span>, <span class="string">&quot;bac&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">0</span>] != check[i][<span class="number">0</span>]) pre[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; s.<span class="built_in">size</span>(); ++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[j] != check[i][j % <span class="number">3</span>]) pre[i][j] = pre[i][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> pre[i][j] = pre[i][j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line"><span class="keyword">int</span> l, r; </span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">l--, r--;</span><br><span class="line"><span class="keyword">int</span> ans = inf;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; ++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(l != <span class="number">0</span>) ans = <span class="built_in">min</span>(ans, pre[j][r] - pre[j][l - <span class="number">1</span>]);</span><br><span class="line"><span class="keyword">else</span> ans = <span class="built_in">min</span>(ans, pre[j][r]);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>显然前缀和好写多了，效率也快多了</p>]]></content>
    
    
    <summary type="html">What do you call love in your reality?</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
    <category term="莫队" scheme="https://eykenis.github.io/tags/%E8%8E%AB%E9%98%9F/"/>
    
  </entry>
  
  <entry>
    <title>八月洛谷训练记录</title>
    <link href="https://eykenis.github.io/2021/07/30/%E5%85%AB%E6%9C%88%E6%B4%9B%E8%B0%B7%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/"/>
    <id>https://eykenis.github.io/2021/07/30/%E5%85%AB%E6%9C%88%E6%B4%9B%E8%B0%B7%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/</id>
    <published>2021-07-30T12:23:07.000Z</published>
    <updated>2021-10-09T04:57:36.603Z</updated>
    
    <content type="html"><![CDATA[<h1 id="7-30-day-1"><a href="#7-30-day-1" class="headerlink" title="7.30 day 1"></a>7.30 day 1</h1><h2 id="P2392-kkksc03考前临时抱佛脚"><a href="#P2392-kkksc03考前临时抱佛脚" class="headerlink" title="P2392 kkksc03考前临时抱佛脚"></a><a href="https://www.luogu.com.cn/problem/P2392">P2392 kkksc03考前临时抱佛脚</a></h2><p>数组长度20，直接爆搜. 注意这里要从左往右搜，不能乱序搜，乱序的复杂度$O(n!)$，20也受不住啊</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">bool</span> v[<span class="number">25</span>];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">25</span>];</span><br><span class="line"><span class="keyword">int</span> res;</span><br><span class="line"><span class="keyword">int</span> l, r;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> tot, <span class="keyword">int</span> now)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(now &gt; tot)&#123;</span><br><span class="line">res = <span class="built_in">min</span>(res, <span class="built_in">max</span>(l, r));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">l += a[now];</span><br><span class="line"><span class="built_in">dfs</span>(tot, now + <span class="number">1</span>);</span><br><span class="line">l -= a[now];</span><br><span class="line">r += a[now];</span><br><span class="line"><span class="built_in">dfs</span>(tot, now + <span class="number">1</span>);</span><br><span class="line">r -= a[now];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">5</span>];</span><br><span class="line">fors(i, <span class="number">1</span>, <span class="number">4</span>) cin &gt;&gt; s[i];</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, <span class="number">4</span>)&#123;</span><br><span class="line"><span class="built_in">mem</span>(v);</span><br><span class="line">res = inf;</span><br><span class="line">l = r = <span class="number">0</span>;</span><br><span class="line">fors(j, <span class="number">1</span>, s[i]) cin &gt;&gt; a[j];</span><br><span class="line"><span class="built_in">dfs</span>(s[i], <span class="number">1</span>);</span><br><span class="line">ans += res;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1441-砝码称重"><a href="#P1441-砝码称重" class="headerlink" title="P1441 砝码称重"></a><a href="https://www.luogu.com.cn/problem/P1441">P1441 砝码称重</a></h2><p>依然是搜索，只不过搜索终点套了一个01背包。</p><p><strong>依然提醒我，搜索一定要顺次，不要乱序，不然就T傻。</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">25</span>];</span><br><span class="line"><span class="keyword">bool</span> v[<span class="number">25</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">bool</span> f[<span class="number">2005</span>];</span><br><span class="line"><span class="keyword">int</span> sum;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">int</span> last)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(num == m)&#123;</span><br><span class="line"><span class="built_in">mem</span>(f);</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">f[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line"><span class="keyword">if</span>(v[i]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = sum; j - a[i] &gt;= <span class="number">0</span>; --j)&#123;</span><br><span class="line"><span class="keyword">if</span>(!f[j] &amp;&amp; f[j - a[i]]) cnt++;</span><br><span class="line">f[j] |= f[j - a[i]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans = <span class="built_in">max</span>(ans, cnt);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, last + <span class="number">1</span>, n)&#123;</span><br><span class="line"><span class="keyword">if</span>(!v[i])&#123;</span><br><span class="line">v[i] = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">dfs</span>(num + <span class="number">1</span>, i);</span><br><span class="line">v[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, n) cin &gt;&gt; a[i], sum += a[i];</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3370-【模板】字符串哈希"><a href="#P3370-【模板】字符串哈希" class="headerlink" title="P3370 【模板】字符串哈希"></a><a href="https://www.luogu.com.cn/problem/P3370">P3370 【模板】字符串哈希</a></h2><ol><li><p>使用进制哈希法，让每个字母对应唯一一个数字，然后按进制运算，整个字符串对应一个唯一数字。为防止结果数字过大，对质数取模。不放心冲突的话可以再加上一个小质数。如果想省空间，那就得排序，用$log$时间复杂度换空间。</p></li><li><p>使用trie树，平均复杂度$O(nlog|s|)$（代码是进制哈希）</p></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> prime = <span class="number">711451417</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hashe</span><span class="params">(string s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> x : s)&#123;</span><br><span class="line">ans = (ans * <span class="number">117</span> + (<span class="keyword">int</span>)x) % mod + prime;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, t)&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">a[i] = <span class="built_in">hashe</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + t);</span><br><span class="line">fors(i, <span class="number">1</span>, t)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] != a[i - <span class="number">1</span>]) ans++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1621-集合"><a href="#P1621-集合" class="headerlink" title="P1621 集合"></a><a href="https://www.luogu.com.cn/problem/P1621">P1621 集合</a></h2><p>用线性筛预处理1e5内的素数，然后在区间内枚举每个质数的倍数，通过并查集合并。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a, b, p;</span><br><span class="line"><span class="keyword">int</span> fa[maxn];</span><br><span class="line"><span class="keyword">int</span> prime[maxn];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e7</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> is[N];</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Prime</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">mem</span>(is);</span><br><span class="line">is[<span class="number">0</span>] = is[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; N; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span>(!is[i]) prime[cnt++] = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cnt &amp;&amp; prime[j] * i &lt; N; ++j)&#123;</span><br><span class="line">is[prime[j] * i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(fa[x] == x) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">return</span> fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> fx = <span class="built_in">find</span>(x), fy = <span class="built_in">find</span>(y);</span><br><span class="line"><span class="keyword">if</span>(fx == fy) <span class="keyword">return</span>;</span><br><span class="line">fa[fy] = fx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="built_in">Prime</span>();</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; p;</span><br><span class="line">fors(i, a, b) fa[i] = i;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(prime[x] &lt; p) x++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = x; prime[i] &lt;= b; ++i)&#123;</span><br><span class="line"><span class="keyword">int</span> s = prime[i];</span><br><span class="line"><span class="keyword">while</span>(s &lt; a) s += prime[i];</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line"><span class="keyword">while</span>(s &lt;= b)&#123;</span><br><span class="line">v.<span class="built_in">pb</span>(s);</span><br><span class="line">s += prime[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; v.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line"><span class="built_in">join</span>(v[i], v[i - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">fors(i, a, b) <span class="keyword">if</span>(fa[i] == i) ans++;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-31-day-2"><a href="#7-31-day-2" class="headerlink" title="7.31 day 2"></a>7.31 day 2</h1><p>出去太久了加上在补cf的题以及写题解，没时间写洛谷的题orz</p><h2 id="P1892-BOI2003-团伙"><a href="#P1892-BOI2003-团伙" class="headerlink" title="P1892 [BOI2003] 团伙"></a><a href="https://www.luogu.com.cn/problem/P1892">P1892 [BOI2003] 团伙</a></h2><p>复习一下最基本的带权并查集。其实用反集概念即可。</p><p>顺便回归一下最朴素的码风</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3005</span>;</span><br><span class="line"><span class="keyword">int</span> fa[maxn];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(fa[x] == x) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">return</span> fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> fx = <span class="built_in">find</span>(x), fy = <span class="built_in">find</span>(y);</span><br><span class="line"><span class="keyword">if</span>(fx == fy) <span class="keyword">return</span>;</span><br><span class="line">fa[fy] = fx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 敌人：合并n+x,y</span></span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; ++i) fa[i] = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line"><span class="keyword">char</span> x;</span><br><span class="line"><span class="keyword">int</span> l, r;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; l &gt;&gt; r;</span><br><span class="line"><span class="keyword">if</span>(x == <span class="string">&#x27;F&#x27;</span>) <span class="built_in">join</span>(l, r);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">join</span>(l, r + n), <span class="built_in">join</span>(r, l + n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; ++i)&#123; <span class="keyword">if</span>(fa[i] == i) cnt++;&#125;</span><br><span class="line">cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P4305-JLOI2011-不重复数字"><a href="#P4305-JLOI2011-不重复数字" class="headerlink" title="P4305 [JLOI2011]不重复数字 "></a><a href="https://www.luogu.com.cn/problem/P4305">P4305 [JLOI2011]不重复数字 </a></h2><p>可以用拉链哈希做。懒得写了，但是哈希题写unordered_map太敷衍，于是写了个排序</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> x, id;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> node&amp; x, <span class="keyword">const</span> node&amp; y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x.x != y.x) <span class="keyword">return</span> x.x &lt; y.x;</span><br><span class="line"><span class="keyword">return</span> x.id &lt; y.id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">re</span><span class="params">(<span class="keyword">const</span> node&amp; x, <span class="keyword">const</span> node&amp; y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.id &lt; y.id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n, x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123; <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i].x); a[i].id = i; &#125;</span><br><span class="line"><span class="built_in">sort</span>(a, a + n, cmp);</span><br><span class="line">vector&lt;node&gt; v;</span><br><span class="line">v.<span class="built_in">push_back</span>(a[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i].x != a[i - <span class="number">1</span>].x)&#123;</span><br><span class="line">v.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>(), re);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> x : v)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, x.x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-1-day-3"><a href="#8-1-day-3" class="headerlink" title="8.1 day 3"></a>8.1 day 3</h1><h2 id="P3405-USACO16DEC-Cities-and-States-S"><a href="#P3405-USACO16DEC-Cities-and-States-S" class="headerlink" title="P3405 [USACO16DEC]Cities and States S"></a><a href="https://www.luogu.com.cn/problem/P3405">P3405 [USACO16DEC]Cities and States S</a></h2><p>如果组合是$a,b$，从$b,a$保存的容器中获得贡献，然后向$a,b$容器加1。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">unordered_map&lt;string, <span class="keyword">int</span>&gt; mp;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">string a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">if</span>(a.<span class="built_in">substr</span>(<span class="number">0</span>, <span class="number">2</span>) == b.<span class="built_in">substr</span>(<span class="number">0</span>, <span class="number">2</span>));</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">mp[a.<span class="built_in">substr</span>(<span class="number">0</span>, <span class="number">2</span>) + b]++;</span><br><span class="line">ans += mp[b + a.<span class="built_in">substr</span>(<span class="number">0</span>, <span class="number">2</span>)];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3879-TJOI2010-阅读理解"><a href="#P3879-TJOI2010-阅读理解" class="headerlink" title="P3879 [TJOI2010]阅读理解"></a><a href="https://www.luogu.com.cn/problem/P3879">P3879 [TJOI2010]阅读理解</a></h2><p>map裸题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> n, x;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">map&lt;string, <span class="keyword">bool</span>&gt; mp[n + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">string s;</span><br><span class="line"><span class="built_in">getline</span>(cin, s);</span><br><span class="line">stringstream ss;</span><br><span class="line">ss &lt;&lt; s;</span><br><span class="line">ss &gt;&gt; x;</span><br><span class="line"><span class="keyword">while</span>(ss &gt;&gt; s)&#123;</span><br><span class="line">mp[i][s] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(mp[j].<span class="built_in">count</span>(s))&#123;</span><br><span class="line">cout &lt;&lt; j &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P3916-图的遍历"><a href="#P3916-图的遍历" class="headerlink" title="P3916 图的遍历"></a><a href="https://www.luogu.com.cn/problem/P3916">P3916 图的遍历</a></h2><p>反向dfs，求较大的点能去哪些点，这样就能进行不回溯的dfs了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; v[<span class="number">100005</span>];</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">100005</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> f)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> x : v[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (!ans[x]) &#123;</span><br><span class="line">ans[x] = f;</span><br><span class="line"><span class="built_in">dfs</span>(x, f);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="comment">// n次bfs，复杂度O(n(n+m)), 不可接受</span></span><br><span class="line"><span class="comment">// n次dfs，不访问已经访问过的节点，复杂度O(n+m)，好！</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i) &#123;</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">v[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; --i) &#123;</span><br><span class="line"><span class="keyword">if</span>(!ans[i]) ans[i] = i;</span><br><span class="line"><span class="built_in">dfs</span>(i, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i ) &#123;</span><br><span class="line">cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-2-day-4"><a href="#8-2-day-4" class="headerlink" title="8.2 day 4"></a>8.2 day 4</h1><p>学习网络流算法+摸鱼</p><h1 id="8-3-day-5"><a href="#8-3-day-5" class="headerlink" title="8.3 day 5"></a>8.3 day 5</h1><p>多校自闭+摸鱼</p><h1 id="8-4-day-6"><a href="#8-4-day-6" class="headerlink" title="8.4 day 6"></a>8.4 day 6</h1><p>今天摸摸Unity，诶嘿……</p><h1 id="8-5-day-7"><a href="#8-5-day-7" class="headerlink" title="8.5 day 7"></a>8.5 day 7</h1><p>多校自闭，摸了会Unity，感觉最近状态很差……依然没有做洛谷。</p><h1 id="8-6-day-8"><a href="#8-6-day-8" class="headerlink" title="8.6 day 8"></a>8.6 day 8</h1><p>伞兵才会一天玩五六个小时bf</p><h1 id="8-7-day-9"><a href="#8-7-day-9" class="headerlink" title="8.7 day 9"></a>8.7 day 9</h1><h2 id="P1918-保龄球"><a href="#P1918-保龄球" class="headerlink" title="P1918 保龄球"></a><a href="https://www.luogu.com.cn/problem/P1918#submit">P1918 保龄球</a></h2><p>水题，找找状态（洛谷100AC纪念，2021-08-07 12:19:41）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :vsDebug.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-08-05</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mp;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        mp[x] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> q;</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        cout &lt;&lt; mp[x] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2814-家谱"><a href="#P2814-家谱" class="headerlink" title="P2814 家谱"></a><a href="https://www.luogu.com.cn/problem/P2814">P2814 家谱</a></h2><p>评测机出锅了，下载下来和std输出一模一样判我wa了，不管了</p><p>字符串并查集</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :vsDebug.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-08-05</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line">unordered_map&lt;string, string&gt; fa;</span><br><span class="line"><span class="function">string <span class="title">find</span><span class="params">(string x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fa[x] == x)&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">join</span><span class="params">(string x, string y)</span></span>&#123;</span><br><span class="line">    string fx = <span class="built_in">find</span>(x), fy = <span class="built_in">find</span>(y);</span><br><span class="line">    fa[fy] = fx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// DDLC_ESCAPE_PLAN_FAILED;</span></span><br><span class="line">    <span class="comment">// freopen(&quot;out.txt&quot;, &quot;w&quot;, stdout);</span></span><br><span class="line">    string s;</span><br><span class="line">    string f;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">getline</span>(cin, s) &amp;&amp; s != <span class="string">&quot;$&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="string">&#x27;#&#x27;</span>)&#123;</span><br><span class="line">            f = s.<span class="built_in">substr</span>(<span class="number">1</span>, s.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(!fa.<span class="built_in">count</span>(f)) fa[f] = f;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="string">&#x27;+&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!fa.<span class="built_in">count</span>(f)) fa[f] = f;</span><br><span class="line">            <span class="keyword">if</span>(!fa.<span class="built_in">count</span>(s.<span class="built_in">substr</span>(<span class="number">1</span>, s.<span class="built_in">size</span>() - <span class="number">1</span>))) fa[s.<span class="built_in">substr</span>(<span class="number">1</span>, s.<span class="built_in">size</span>() - <span class="number">1</span>)] = s.<span class="built_in">substr</span>(<span class="number">1</span>, s.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">join</span>(f, s.<span class="built_in">substr</span>(<span class="number">1</span>, s.<span class="built_in">size</span>() - <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            string u = s.<span class="built_in">substr</span>(<span class="number">1</span>, s.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(!fa.<span class="built_in">count</span>(u)) fa[u] = u;</span><br><span class="line">            cout &lt;&lt; u &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="built_in">find</span>(u) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1090-NOIP2004-提高组-合并果子-USACO06NOV-Fence-Repair-G"><a href="#P1090-NOIP2004-提高组-合并果子-USACO06NOV-Fence-Repair-G" class="headerlink" title="P1090 [NOIP2004 提高组] 合并果子 / [USACO06NOV] Fence Repair G"></a><a href="https://www.luogu.com.cn/problem/P1090#submit">P1090 [NOIP2004 提高组] 合并果子 / [USACO06NOV] Fence Repair G</a></h2><p>二叉堆基础题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, vector&lt;<span class="keyword">int</span>&gt;, greater&lt;<span class="keyword">int</span>&gt;&gt; q;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        q.<span class="built_in">push</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(q.<span class="built_in">size</span>() &gt; <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> x = q.<span class="built_in">top</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">int</span> y = q.<span class="built_in">top</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line">        ans += x + y;</span><br><span class="line">        q.<span class="built_in">push</span>(x + y);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1168-中位数"><a href="#P1168-中位数" class="headerlink" title="P1168 中位数"></a><a href="https://www.luogu.com.cn/problem/P1168#submit">P1168 中位数</a></h2><p>优先队列好例题，维护一个大顶堆和一个小顶堆即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, vector&lt;<span class="keyword">int</span>&gt;, greater&lt;<span class="keyword">int</span>&gt;&gt; gq;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> mid;</span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    cout &lt;&lt; (mid = x) &lt;&lt; endl;</span><br><span class="line">    fors(i, <span class="number">2</span>, n)&#123;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        <span class="keyword">if</span>(x &gt; mid) gq.<span class="built_in">push</span>(x);</span><br><span class="line">        <span class="keyword">else</span> q.<span class="built_in">push</span>(x);</span><br><span class="line">        <span class="keyword">while</span>(gq.<span class="built_in">size</span>() &gt; q.<span class="built_in">size</span>())&#123;</span><br><span class="line">            q.<span class="built_in">push</span>(mid);</span><br><span class="line">            mid = gq.<span class="built_in">top</span>();</span><br><span class="line">            gq.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(q.<span class="built_in">size</span>() &gt; gq.<span class="built_in">size</span>())&#123;</span><br><span class="line">            gq.<span class="built_in">push</span>(mid);</span><br><span class="line">            mid = q.<span class="built_in">top</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i &amp; <span class="number">1</span>) cout &lt;&lt; mid &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2085-最小函数"><a href="#P2085-最小函数" class="headerlink" title="P2085 最小函数"></a><a href="https://www.luogu.com.cn/problem/P2085">P2085 最小函数</a></h2><p>维护一个容量为m的优先队列即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> a, b, c;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> fx = a * x * x + b * x + c;</span><br><span class="line">            <span class="keyword">if</span>(q.<span class="built_in">size</span>() &lt; m || (q.<span class="built_in">size</span>() &gt;= m &amp;&amp; q.<span class="built_in">top</span>() &gt; fx))&#123;</span><br><span class="line">                q.<span class="built_in">push</span>(fx);</span><br><span class="line">                <span class="keyword">if</span>(q.<span class="built_in">size</span>() &gt; m) q.<span class="built_in">pop</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">            x++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        ans.<span class="built_in">pb</span>(q.<span class="built_in">top</span>());</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = m - <span class="number">1</span>; j &gt;= <span class="number">0</span>; --j)&#123;</span><br><span class="line">        cout &lt;&lt; ans[j] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1631-序列合并"><a href="#P1631-序列合并" class="headerlink" title="P1631 序列合并"></a><a href="https://www.luogu.com.cn/problem/P1631">P1631 序列合并</a></h2><p>和上面P2085的思路很相近，都是找Top K. 这里不能算出所有答案，所以排序贪心一下。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :vsDebug.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-08-07</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        cin &gt;&gt; b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="built_in">sort</span>(b + <span class="number">1</span>, b + <span class="number">1</span> + n);</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        fors(j, <span class="number">1</span>, n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(q.<span class="built_in">size</span>() &gt;= n &amp;&amp; a[i] + b[j] &gt; q.<span class="built_in">top</span>()) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">else</span> q.<span class="built_in">push</span>(a[i] + b[j]);</span><br><span class="line">            <span class="keyword">if</span>(q.<span class="built_in">size</span>() &gt; n) q.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        ans.<span class="built_in">pb</span>(q.<span class="built_in">top</span>());</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = n - <span class="number">1</span>; j &gt;= <span class="number">0</span>; --j)&#123;</span><br><span class="line">        cout &lt;&lt; ans[j] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-8-day-10"><a href="#8-8-day-10" class="headerlink" title="8.8 day 10"></a>8.8 day 10</h1><h2 id="P1801-黑匣子"><a href="#P1801-黑匣子" class="headerlink" title="P1801 黑匣子"></a><a href="https://www.luogu.com.cn/problem/P1801">P1801 黑匣子</a></h2><p>和P1168一样，只不过这里不一定是中位数，而是位置随时可能改变</p><p>感觉还题目可以更进一步，位置左右任意移动</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = (<span class="keyword">int</span>)(<span class="number">-2e9</span>) - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt; u;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> m, n;</span><br><span class="line">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, vector&lt;<span class="keyword">int</span>&gt;, greater&lt;<span class="keyword">int</span>&gt;&gt; gq;</span><br><span class="line">    fors(i, <span class="number">1</span>, m) cin &gt;&gt; a[i];</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        u.<span class="built_in">push</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = inf;</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">        <span class="keyword">if</span>(mid == inf)&#123;</span><br><span class="line">            gq.<span class="built_in">push</span>(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[i] &gt; mid)&#123;</span><br><span class="line">            gq.<span class="built_in">push</span>(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            q.<span class="built_in">push</span>(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(p &amp;&amp; q.<span class="built_in">size</span>() &gt;= p)&#123;</span><br><span class="line">            gq.<span class="built_in">push</span>(mid);</span><br><span class="line">            mid = q.<span class="built_in">top</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(u.<span class="built_in">front</span>() == i)&#123;</span><br><span class="line">            u.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span>(mid != inf) q.<span class="built_in">push</span>(mid);</span><br><span class="line">            mid = gq.<span class="built_in">top</span>();</span><br><span class="line">            gq.<span class="built_in">pop</span>();</span><br><span class="line">            cout &lt;&lt; mid &lt;&lt; endl;</span><br><span class="line">            p++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P4053-JSOI2007-建筑抢修"><a href="#P4053-JSOI2007-建筑抢修" class="headerlink" title="P4053 [JSOI2007]建筑抢修"></a><a href="https://www.luogu.com.cn/problem/P4053">P4053 [JSOI2007]建筑抢修</a></h2><p>优先队列贪心</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> time;</span><br><span class="line">    <span class="keyword">int</span> limit;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> node&amp; x, <span class="keyword">const</span> node&amp; y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.limit &lt; y.limit;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    fors(i, <span class="number">1</span>, n) cin &gt;&gt; a[i].time &gt;&gt; a[i].limit;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n, cmp);</span><br><span class="line">    <span class="keyword">int</span> time = <span class="number">0</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i].time + time &gt; a[i].limit)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i].time &lt; q.<span class="built_in">top</span>())&#123;</span><br><span class="line">                time -= q.<span class="built_in">top</span>();</span><br><span class="line">                q.<span class="built_in">pop</span>();</span><br><span class="line">                q.<span class="built_in">push</span>(a[i].time);</span><br><span class="line">                time += a[i].time;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        q.<span class="built_in">push</span>(a[i].time);</span><br><span class="line">        time += a[i].time;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; (<span class="keyword">int</span>)q.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-9-day-11"><a href="#8-9-day-11" class="headerlink" title="8.9 day 11"></a>8.9 day 11</h1><p>没打</p><h1 id="8-10-day-12"><a href="#8-10-day-12" class="headerlink" title="8.10 day 12"></a>8.10 day 12</h1><p><a href="https://www.luogu.com.cn/problem/P2613">P2613 【模板】有理数取余</a></p><p>多校之后，再复习一下分数取模</p><p>以后分数取逆元再也不查资料惹</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :vsDebug.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-08-10</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">19260817</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> p, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p &amp; <span class="number">1</span>) ans = (ans * x) % m;</span><br><span class="line">        x = (x * x) % m;</span><br><span class="line">        p &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">divi</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x % mod * <span class="built_in">fpow</span>(y, mod - <span class="number">2</span>, mod)) % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    t = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">        string s1, s2;</span><br><span class="line">        cin &gt;&gt; s1 &gt;&gt; s2;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s1.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">            a = (a * <span class="number">10</span> + s1[i] - <span class="string">&#x27;0&#x27;</span>) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s2.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">            b = (b * <span class="number">10</span> + s2[i] - <span class="string">&#x27;0&#x27;</span>) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(b % mod == <span class="number">0</span>) cout &lt;&lt; <span class="string">&quot;Angry!&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="built_in">divi</span>(a, b) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="8-11-day-13"><a href="#8-11-day-13" class="headerlink" title="8.11 day 13"></a>8.11 day 13</h1><h1 id="8-12-day-14"><a href="#8-12-day-14" class="headerlink" title="8.12 day 14"></a>8.12 day 14</h1><p>这两天具体去干了什么我就不说了</p><p>感觉自己这也想干，那也想干</p><p>最后什么也没干成</p><p>确实是有B students的好奇心和求知欲</p><p>但是没有B students的远见，也缺乏A students的定力</p><p>最后自己的技能就是</p><p>四不像</p><p>什么也不会</p><p>这样子真的不好，回想一下高中老师是怎么教我的 其实我是有把一件事做好做精的能力的吧。只是面对的选择太多的时候，我会什么都尝试一下，然后浅尝辄止。</p><p>是时候好好想一想，我要的到底是什么，我应该去做什么</p><p>然后就去做，不要再去看哪个可以搞哪个有意思了，我什么也不看，我只做好自己之前想做的</p><p>多学点知识吧。</p><h1 id="8-13-day-15"><a href="#8-13-day-15" class="headerlink" title="8.13 day 15"></a>8.13 day 15</h1><h2 id="P3865-【模板】ST-表"><a href="#P3865-【模板】ST-表" class="headerlink" title="P3865 【模板】ST 表"></a><a href="https://www.luogu.com.cn/problem/P3865">P3865 【模板】ST 表</a></h2><p>今天学ST表~</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> f[maxn][<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">process</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) f[i][<span class="number">0</span>] = a[i]; </span><br><span class="line">    <span class="keyword">int</span> t = <span class="built_in">log</span>(n) / <span class="built_in">log</span>(<span class="number">2</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; <span class="number">20</span>; j ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n - (<span class="number">1</span> &lt;&lt; j) + <span class="number">1</span>; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i][j] = <span class="built_in">max</span>(f[i][j<span class="number">-1</span>],f[i + (<span class="number">1</span> &lt;&lt; (j - <span class="number">1</span>))][j - <span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="built_in">log</span>(<span class="built_in">abs</span>(y-x + <span class="number">1</span>))/ <span class="built_in">log</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">int</span> a = f[x][t];</span><br><span class="line">    <span class="keyword">int</span> b = f[y - (<span class="number">1</span> &lt;&lt; t) + <span class="number">1</span>][t];</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(a,b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line"><span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;x=x*<span class="number">10</span>+ch<span class="number">-48</span>;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// DDLC_ESCAPE_PLAN_FAILED;</span></span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">    n = <span class="built_in">read</span>();</span><br><span class="line">    m = <span class="built_in">read</span>();</span><br><span class="line">    fors(i, <span class="number">1</span>, n) a[i] = <span class="built_in">read</span>();</span><br><span class="line">    <span class="built_in">process</span>();</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        l = <span class="built_in">read</span>();</span><br><span class="line">        r = <span class="built_in">read</span>();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">query</span>(l, r));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Does my pen only write bitter words for those who are dear to me?</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>分块与普通莫队</title>
    <link href="https://eykenis.github.io/2021/07/26/%E5%88%86%E5%9D%97%E4%B8%8E%E6%99%AE%E9%80%9A%E8%8E%AB%E9%98%9F/"/>
    <id>https://eykenis.github.io/2021/07/26/%E5%88%86%E5%9D%97%E4%B8%8E%E6%99%AE%E9%80%9A%E8%8E%AB%E9%98%9F/</id>
    <published>2021-07-26T07:10:56.000Z</published>
    <updated>2021-07-26T07:17:11.624Z</updated>
    
    <content type="html"><![CDATA[<p><del>分块，然后捡到莫队</del></p><p><strong>前言</strong></p><p>HDU多校连续两天都遇到了莫队的题，于是蒟蒻缓慢地开始学习莫队算法</p><p>初见莫队，只知道是个离线区间工具，以为会有点复杂。但其实基础的莫队很好理解，就是一种读完之后感觉很普通的离线的分块算法（<del>虽然，我还是不可能想得到就是了</del>）</p><h1 id="分块算法"><a href="#分块算法" class="headerlink" title="分块算法"></a>分块算法</h1><p>为了引入莫队，不妨先看一个分块的经典例题（不想看可以通过目录跳过）</p><p><a href="https://www.luogu.com.cn/problem/P3870">洛谷P3870 开关</a></p><p>简化题意：一个01序列，要求可以进行动态区间取反和区间查询（有几个1）。</p><p>序列和询问的数据规模都是$1e5$，暴力遍历区间的复杂度是$O(nm)$，显然无法接受。</p><p>考虑分块，将长度为$n$的序列切割成$\sqrt n$个固定的区间，每个区间长度$\sqrt n$. 那么我们设想，对于每次询问/修改，我们直接维护区间的状态就好了，对各个分块维护一个$ans$数组，由于区间最多$\sqrt n$个，所以复杂度就会降到$O(m\sqrt n)$.</p><p>但是很快就发现，每次询问和修改不一定都恰好落在我们分好的区间边界上。例如，我们的划分是$(1,3),(4,6),(7,10)$，但某次询问的操作区间是$(2,9)$，那么，就会有$(2,3)$和$(7,9)$这两个我们没有划出来的区间。</p><p>怎么办？暴力计算！由于每个区间的长度最多$\sqrt n$，因此当询问区间的起始区间和结尾区间不完整时，我们大可以对这两个区间暴力维护答案。因此最终的复杂度仍然是$O(m\sqrt n)$.</p><p>有的人可能会问：<strong>为什么分块的长度要是 $\sqrt n$ 呢？</strong></p><p>不妨分析：假设分块的长度是$x$，那么块的数量就是$n/x$. 每次询问过程中，我们都需要处理开头区间，结尾区间，以及在中间的剩下的完整的区间。这些完整的区间操作都是$O(1)$的，而他们的数量规模导致了这些区间的操作总复杂度在$O(n/x)$. 又我们可能还需要暴力地操作一头一尾，所以我们还需要$O(x)$的时间去完成。那么总时间就会使$O(max(n/x,x))$. 显然，这里$x$取$\sqrt n$可以让每次询问的复杂度最小。</p><p>分析完了，现在我们需要考虑，如何具体地进行答案维护与暴力。</p><p>由于分块的过程中有部分暴力，对块的操作与对单个元素的操作是并存的。为了让整块操作与散块操作不冲突，我们可以为每个区间打上tag，tag为0表示该区间正常计算，tag为1表示该区间全部取反计算。那么每次整块操作时，我们只需要关心tag，对tag取反即可。而散块操作时，我们不需要关心tag，只需要对每个位置分别取反即可。最后维护出每个块的$ans$.</p><p>而在询问时，如果这个区间的tag是0，说明区间没有被整个取反，那么我们直接取其$ans$作为答案；如果tag是1，那么区间被取反，所以我们也要对$ans$取反，以$n-ans$作为答案。</p><p><strong>代码（注释详解）</strong></p><p>（由于也才没学多久，没看过板子，代码属于自己乱搞，可能有很多冗余繁杂的地方，但应该相对好理解）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">10005</span>, M = <span class="number">100005</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, ans, tag;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="keyword">int</span> st[M] = &#123;<span class="number">0</span>&#125;; <span class="comment">// 开灯状态，用于散块暴力</span></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> n, m; <span class="comment">// 灯的数目和操作数目</span></span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">int</span> now = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(now &gt;= n + <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">        num++;</span><br><span class="line">        a[i].l = now;</span><br><span class="line">        a[i].r = <span class="built_in">min</span>(n, now + (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(n));</span><br><span class="line">        now = a[i].r + <span class="number">1</span>;</span><br><span class="line">        a[i].ans = a[i].tag = <span class="number">0</span>; <span class="comment">// 开灯数目和tag</span></span><br><span class="line">    &#125; <span class="comment">// 分块操作</span></span><br><span class="line">    <span class="keyword">int</span> p, l, r;</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; p &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="keyword">if</span>(p)&#123; <span class="comment">// query</span></span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(i &lt;= num &amp;&amp; a[i].l &lt; l) i++;</span><br><span class="line">            <span class="keyword">if</span>(i &gt; num || a[i].l &gt; l) i--;</span><br><span class="line">            <span class="comment">// 找到左端散区间a[i]</span></span><br><span class="line">            <span class="keyword">int</span> ans = <span class="number">0</span>; <span class="comment">// 总答案</span></span><br><span class="line">            <span class="keyword">if</span>(a[i].l != l) <span class="comment">// 注意这个if语句避免了把最左边的整块当散块</span></span><br><span class="line">            &#123;</span><br><span class="line">                fors(j, l, <span class="built_in">min</span>(a[i].r, r))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(st[j] ^ a[i].tag) ans++;</span><br><span class="line">                &#125;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(i &lt;= num &amp;&amp; a[i].r &lt;= r)&#123;</span><br><span class="line">                ans += a[i].ans;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i &lt;= num)&#123;</span><br><span class="line">                fors(j, a[i].l, r)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(st[j] ^ a[i].tag) ans++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; <span class="comment">// switch</span></span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(i &lt;= num &amp;&amp; a[i].l &lt; l) i++;</span><br><span class="line">            <span class="keyword">if</span>(i &gt; num || a[i].l &gt; l) i--;</span><br><span class="line">            <span class="comment">// 找到左端散区间a[i]</span></span><br><span class="line">            <span class="keyword">int</span> tmp = <span class="number">0</span>; <span class="comment">// 修改后，散区间净增加多少个打开的灯</span></span><br><span class="line">            <span class="keyword">if</span>(a[i].l != l) <span class="comment">// 注意这个if语句避免了把最左边的整块当散块</span></span><br><span class="line">            &#123;</span><br><span class="line">                fors(j, l, <span class="built_in">min</span>(a[i].r, r))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(st[j] ^ a[i].tag) tmp--; <span class="comment">// 如果区间的tag和其中某点不同，说明灯本来开着，使tmp-- </span></span><br><span class="line">                        <span class="keyword">else</span> tmp++; <span class="comment">// 否则tmp++</span></span><br><span class="line">                    st[j] = <span class="number">1</span> - st[j];</span><br><span class="line">                &#125;</span><br><span class="line">                a[i].ans += tmp;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//-----</span></span><br><span class="line">            <span class="keyword">while</span>(i &lt;= num &amp;&amp; a[i].r &lt;= r)&#123;</span><br><span class="line">                a[i].ans = a[i].r - a[i].l + <span class="number">1</span> - a[i].ans; <span class="comment">// 反转ans</span></span><br><span class="line">                a[i].tag = <span class="number">1</span> - a[i].tag; <span class="comment">// 反转tag</span></span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//-----整块修改</span></span><br><span class="line">            <span class="keyword">if</span>(i &lt;= num)&#123;</span><br><span class="line">                tmp = <span class="number">0</span>;</span><br><span class="line">                fors(j, a[i].l, r)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(st[j] ^ a[i].tag) tmp--; <span class="comment">// 如果区间的tag和其中某点不同，说明灯本来开着，使tmp-- </span></span><br><span class="line">                    <span class="keyword">else</span> tmp++; <span class="comment">// 否则tmp++</span></span><br><span class="line">                    st[j] = <span class="number">1</span> - st[j];</span><br><span class="line">                &#125;</span><br><span class="line">                a[i].ans += tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以此，我们了解了分块的基础知识。</p><h1 id="普通莫队"><a href="#普通莫队" class="headerlink" title="普通莫队"></a>普通莫队</h1><p><del>实际上，普通莫队可能比上面那题还要好写</del></p><p>例题：</p><p><a href="[P2709 小B的询问 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn">洛谷P2709 小B的询问</a>](<a href="https://www.luogu.com.cn/problem/P2709">https://www.luogu.com.cn/problem/P2709</a>))</p><p>需要维护每个数字出现的次数。</p><p>考虑将整个序列分成$\sqrt n$块，对每个询问，按照它们$l$（左边界）的位置将这些询问放入不同的块内。例如，$n=9$，分成$(1,3),(4,6),(7,9)$三块，然后询问的区间分别是$(5,7),(1,4),(6,8)$.</p><p>那么$(1,4)$在第一块内，$(5,7),(6,8)$在第二块内。</p><p>最后维护两个指针$l,r$，通过双指针的移动保存$(l,r)$的答案。</p><p>分析复杂度：</p><p>在每一块内，$l$最多移动$\sqrt n$次，但$r$就不确定了，每次询问都可能移动$n$次。这样的话就麻烦了，复杂度又回到了$O(nm)$. 如何解决呢？对每一块内的询问，我们将所有询问按$r$升序排序。这样就能保证$r$的移动规模在$O(n)$范围内了。$l$的移动范围很小，只有<script type="math/tex">\sqrt n</script>，所以我们对$r$排序，不对$l$排序。</p><p>那么，对于整个序列，$r$的移动也是$O(n)$的，这将与询问次数无关。每次询问，$l$的移动都是$O(\sqrt n)$的，故整个复杂度是$O(m\sqrt n)$.</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">query</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r; ll ans;<span class="comment">// 左右边界；询问结果</span></span><br><span class="line">    <span class="keyword">int</span> idx, blc; <span class="comment">// 下标；属于第几个块</span></span><br><span class="line">&#125;q[maxn];</span><br><span class="line"><span class="keyword">int</span> st[maxn]; <span class="comment">// 原数组</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(<span class="keyword">const</span> query&amp; x, <span class="keyword">const</span> query&amp; y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.blc != y.blc) <span class="keyword">return</span> x.blc &lt; y.blc;</span><br><span class="line">    <span class="keyword">return</span> x.r &lt; y.r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">rearr</span><span class="params">(<span class="keyword">const</span> query&amp; x, <span class="keyword">const</span> query&amp; y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.idx &lt; y.idx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">    fors(i, <span class="number">1</span>, n) cin &gt;&gt; st[i];</span><br><span class="line"></span><br><span class="line">    fors(i, <span class="number">1</span>, m) cin &gt;&gt; q[i].l &gt;&gt; q[i].r, q[i].idx = i, q[i].blc = (q[i].l - <span class="number">1</span>) / (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(n) + <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">sort</span>(q + <span class="number">1</span>, q + <span class="number">1</span> + m, cmp1);</span><br><span class="line"></span><br><span class="line">    ll ans = <span class="number">0</span>; <span class="comment">// 当前答案</span></span><br><span class="line">    unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mp; <span class="comment">// 存每个数的出现次数</span></span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, r = <span class="number">0</span>;</span><br><span class="line">    fors(i, <span class="number">1</span>, m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(l &gt; q[i].l)&#123;</span><br><span class="line">            l--;</span><br><span class="line">            ans -= mp[st[l]] * mp[st[l]];</span><br><span class="line">            mp[st[l]]++;</span><br><span class="line">            ans += mp[st[l]] * mp[st[l]];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(r &lt; q[i].r)&#123;</span><br><span class="line">            r++;</span><br><span class="line">            ans -= mp[st[r]] * mp[st[r]];</span><br><span class="line">            mp[st[r]]++;</span><br><span class="line">            ans += mp[st[r]] * mp[st[r]];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(l &lt; q[i].l)&#123;</span><br><span class="line">            ans -= mp[st[l]] * mp[st[l]];</span><br><span class="line">            mp[st[l]]--;</span><br><span class="line">            ans += mp[st[l]] * mp[st[l]];</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(r &gt; q[i].r)&#123;</span><br><span class="line">            ans -= mp[st[r]] * mp[st[r]];</span><br><span class="line">            mp[st[r]]--;</span><br><span class="line">            ans += mp[st[r]] * mp[st[r]];</span><br><span class="line">            r--;</span><br><span class="line">        &#125;</span><br><span class="line">        q[i].ans = ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(q + <span class="number">1</span>, q + <span class="number">1</span> + m, rearr);</span><br><span class="line">    fors(i, <span class="number">1</span>, m) cout &lt;&lt; q[i].ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">And in your reality</summary>
    
    
    
    <category term="知识点" scheme="https://eykenis.github.io/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="数据结构" scheme="https://eykenis.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="莫队" scheme="https://eykenis.github.io/tags/%E8%8E%AB%E9%98%9F/"/>
    
    <category term="分块" scheme="https://eykenis.github.io/tags/%E5%88%86%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>2021“MINIEYE杯”中国大学生算法设计超级联赛（1）解题报告</title>
    <link href="https://eykenis.github.io/2021/07/21/2021%E2%80%9CMINIEYE%E6%9D%AF%E2%80%9D%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E8%B6%85%E7%BA%A7%E8%81%94%E8%B5%9B%EF%BC%881%EF%BC%89%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    <id>https://eykenis.github.io/2021/07/21/2021%E2%80%9CMINIEYE%E6%9D%AF%E2%80%9D%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E8%B6%85%E7%BA%A7%E8%81%94%E8%B5%9B%EF%BC%881%EF%BC%89%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/</id>
    <published>2021-07-21T11:12:01.000Z</published>
    <updated>2021-07-21T11:42:08.079Z</updated>
    
    <content type="html"><![CDATA[<p><strong><del>中超联赛</del></strong></p><p><del><strong>CSL中超可没巨佬们训练强度大</strong></del></p><p>“什么是BSGS、莫队、KD tree”</p><p>我看我是完全不懂噢</p><h2 id="HDU6950-Mod-Or-and-Everything"><a href="#HDU6950-Mod-Or-and-Everything" class="headerlink" title="HDU6950 Mod, Or and Everything"></a>HDU6950 Mod, Or and Everything</h2><p><strong>题意</strong></p><p>求$(n\ mod\ 1)|(n\ mod \ 2)|…|(n\ mod\ (n-1))$的值</p><p><strong>分析</strong></p><p>打比赛时，</p><p>队友：经过化简可以得到答案为$2^k-1$</p><p>我：观察样例可以得到答案为$2^k-1$</p><p>QAQ</p><p>而实际上std的思路：$n\ mod\ i \leq \lceil \frac{n}{2}\rceil-1$，所以$n\ mod\ (n-i)=i$</p><p>所以这个和值就是$0$到$\lceil \frac{n}{2}\rceil-1$的所有整数的和. 求出来是$2^k-1$，这里的$k$是某个带$n$的式子，懒得认真推的话可以根据样例猜出，是令$n=2^x$，这个$x$向下取整再减1得到$k$. 但如果$x$本来就是整数，那么$x$还要再减去1.（总之看代码吧，或者去看std代码）</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">0</span>, res = n;</span><br><span class="line">        <span class="keyword">while</span>(res)&#123;</span><br><span class="line">            res &gt;&gt;= <span class="number">1LL</span>;</span><br><span class="line">            x++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1LL</span>)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">continue</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n == (<span class="number">1LL</span> &lt;&lt; (x - <span class="number">1LL</span>))) x--;</span><br><span class="line">        cout &lt;&lt; (<span class="number">1LL</span> &lt;&lt; (x - <span class="number">1LL</span>)) - <span class="number">1LL</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HDU6954-Minimum-spanning-tree"><a href="#HDU6954-Minimum-spanning-tree" class="headerlink" title="HDU6954 Minimum spanning tree"></a>HDU6954 Minimum spanning tree</h2><p><strong>题意</strong></p><p>有一个$n-1$个节点的带权完全图，节点标记为$2,3,…,n$. 完全图中从点$i$到点$j$的边的权值大小为$lcm(i,j)$，请你求出这个图的最小生成树。$n\leq 10000000$.</p><p><strong>分析</strong></p><p>容易知道，对任何一个边$(i,j)$，这个边的权值不会小于$max(i,j)$. </p><p>那么对于一个合数，它连向自己的因子即可，这时候边的权值就是这个合数。由于因子一定比自己小，所以在$2,3,..i$中一定存在。</p><p>而对于一个质数$x$，和任意一点$i$相连，都有$lcm(x,i)=x·i$. 故令$i$最小，取2即可保证边权最小。</p><p>分析完毕。找出质数，然后分类处理即可。线性筛处理之</p><p><strong>其他</strong></p><p>首先看到题：哇，$1e8$的范围，这怎么做。这算法都给限制到$O(n)$了，难不成是有什么公式？</p><p>思考一会之后：（其实已经得到正解）用线性筛试一波，自己调试1.5秒，完蛋</p><p>尝试各种卡常之后：优化到1.1秒了，实在顶不住了，要不直接交？</p><p>交上去之后：卧槽，MLE，那我不求$MST$前缀和了吧，直接算，但是这样更容易超时了，纠结</p><p>再交：居然700多ms过了，杭电评测机强啊</p><p>打完比赛后，才发现，原来数据规模看错了，是$1e7$，根本不需要卡（）</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e7</span> + <span class="number">10</span>; <span class="comment">// 比赛的时候看成1e8，导致多了一次MLE</span></span><br><span class="line"><span class="keyword">bool</span> p[maxn];</span><br><span class="line"><span class="keyword">int</span> pr[maxn];</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Prime</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">mem</span>(p);</span><br><span class="line">    p[<span class="number">0</span>] = p[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; maxn; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!p[i]) pr[cnt++] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cnt &amp;&amp; pr[j] * i &lt; maxn; ++j)&#123;</span><br><span class="line">            p[pr[j] * i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i % pr[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    pre[<span class="number">0</span>] = pre[<span class="number">1</span>] = pre[<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span>; i &lt; maxn; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!p[i]) pre[i] = pre[i - <span class="number">1</span>] + <span class="number">2</span> * i;</span><br><span class="line">        <span class="keyword">else</span> pre[i] = pre[i - <span class="number">1</span>] + i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="built_in">Prime</span>();</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        cout &lt;&lt; pre[n] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HDU6958-KD-Graph"><a href="#HDU6958-KD-Graph" class="headerlink" title="HDU6958 KD-Graph"></a>HDU6958 KD-Graph</h2><p>看到过题数不多以及题面比较奇怪就没做了，以后一定不能盲目看榜，以及耐心读懂题</p><p><strong>题意</strong></p><p>有一个$n$点$m$边的图（$n\leq100000$, $m\leq500000$），你需要将其分割成恰好$K$组，满足：</p><ol><li>每组中任取两个点$p,q$，他们之间的路径中，最长边不大于$D$</li><li>不同组中任取两个点$p,q$，他们之间的路径中，所有边都大于$D$</li></ol><p>现在给定图和$K$，问你是否找得到一个满足条件的$D$,如果找得到，输出最小的$D$. 否则输出$-1$.</p><p><strong>分析</strong></p><p>容易知道，相同权值的边要么不在任何组内部，要么全都在同一组点里面。假如相同权值的边，有的在组内，有的在组外的话，这个$D$值肯定只会更大不会更小。</p><p>那么贪心思路显而易见了，将所有边按权值升序排序，使用并查集，从左往右，将所有权值相同的边的点合并。然后统计并查集数量，更新答案。也就是在保证“<strong>相同权值的边要么不在任何组内部，要么全都在同一组点里面</strong>”这个性质的前提下寻找能否分为$K$组。而要使$D$尽可能小，应让处于组内的边尽可能小，所以使用升序。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn= <span class="number">100000</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> fa[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, val;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> edge&amp; b)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> val &lt; b.val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;edge&gt; e;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fa[x] == x) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> fa[x] = <span class="built_in">find</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">join</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> fx = <span class="built_in">find</span>(x), fy = <span class="built_in">find</span>(y);</span><br><span class="line">    <span class="keyword">if</span>(fx == fy) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    fa[fy] = fx;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        e.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">int</span> n, m, k;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">        fors(i, <span class="number">1</span>, n) fa[i] = i;</span><br><span class="line">        <span class="keyword">int</span> u, v, c;</span><br><span class="line">        fors(i, <span class="number">1</span>, m)&#123;</span><br><span class="line">            cin &gt;&gt; u &gt;&gt; v &gt;&gt; c;</span><br><span class="line">            e.<span class="built_in">pb</span>(&#123;u, v, c&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(e.<span class="built_in">begin</span>(), e.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">int</span> now = n; <span class="comment">// 并查集数量，初始为n</span></span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span> || e[i].val != e[i - <span class="number">1</span>].val)&#123;</span><br><span class="line">                <span class="keyword">if</span>(now == k) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">join</span>(e[i].l, e[i].r)) <span class="keyword">continue</span>;</span><br><span class="line">            now--;</span><br><span class="line">            ans = e[i].val;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; (now == k ? ans : <span class="number">-1</span>) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HDU6957-Maximal-submatrix"><a href="#HDU6957-Maximal-submatrix" class="headerlink" title="HDU6957 Maximal submatrix"></a>HDU6957 Maximal submatrix</h2><p><strong>题意</strong></p><p>给出一个矩阵，要你找一个最大的子矩阵，要求这个子矩阵每一列从上往下都是单调不下降序列。输出最大子矩阵的面积</p><p><strong>分析</strong></p><p>悬线法，将每个不比上面的元素小的元素标记，然后用这些标记过的元素组成子矩阵。接下来使用悬线dp即可。需要注意的是，子矩阵的最上面一行是可以不被标记的。</p><p><strong>代码</strong></p><p>（比赛时自己凹的二维dp一直超时，应该是复杂度超过$O(n^2)$了）</p><p>第一次接触到悬线法，代码可能相对繁琐</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2005</span>;</span><br><span class="line"><span class="keyword">bool</span> v[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> l[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> r[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> u[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">mem</span>(v), <span class="built_in">mem</span>(l), <span class="built_in">mem</span>(r), <span class="built_in">mem</span>(u);</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">fors(j, <span class="number">1</span>, m)&#123;</span><br><span class="line">cin &gt;&gt; u[i][j];</span><br><span class="line">l[i][j] = j;</span><br><span class="line">r[i][j] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">fors(j, <span class="number">1</span>, m)&#123;</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">1</span> || u[i][j] &gt;= u[i - <span class="number">1</span>][j])&#123;</span><br><span class="line">v[i][j] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">fors(j, <span class="number">2</span>, m)&#123;</span><br><span class="line"><span class="keyword">if</span>(v[i][j] &amp;&amp; v[i][j - <span class="number">1</span>]) l[i][j] = l[i][j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = m - <span class="number">1</span>; j &gt;= <span class="number">1</span>; --j)&#123;</span><br><span class="line"><span class="keyword">if</span>(v[i][j] &amp;&amp; v[i][j + <span class="number">1</span>]) r[i][j] = r[i][j + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">mem</span>(u);</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">fors(j, <span class="number">1</span>, m) u[i][j] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">fors(j, <span class="number">1</span>, m)&#123;</span><br><span class="line"><span class="keyword">if</span>(v[i][j] &amp;&amp; v[i - <span class="number">1</span>][j])&#123;</span><br><span class="line">l[i][j] = <span class="built_in">max</span>(l[i - <span class="number">1</span>][j], l[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(v[i][j]) u[i][j] = u[i - <span class="number">1</span>][j] + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = m; j &gt;= <span class="number">1</span>; --j)&#123;</span><br><span class="line"><span class="keyword">if</span>(v[i][j] &amp;&amp; v[i - <span class="number">1</span>][j])&#123;</span><br><span class="line">r[i][j] = <span class="built_in">min</span>(r[i - <span class="number">1</span>][j], r[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">fors(j, <span class="number">1</span>, m)&#123;</span><br><span class="line">ans = <span class="built_in">max</span>(ans, u[i][j] * (r[i][j] - l[i][j] + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HDU6955-Xor-sum"><a href="#HDU6955-Xor-sum" class="headerlink" title="HDU6955 Xor sum"></a>HDU6955 Xor sum</h2><p><strong>题意</strong></p><p>给一个整数数组，你需要找到最短的区间，其按位异或和不小于$k$. 如果有多个，找出左端点最左的</p><p><strong>分析</strong></p><p>先转化一下。异或运算里，任意$x$的逆元是$x$本身，故对于前缀和$pre[i]$,$pre[j]$，$i$到$j$的异或和可以表示为$pre[i]$^$pre[j]$. </p><p>这之后，直接存异或和，问题转化为：找到两个相距最近的$i,j$，其异或和不小于$k$.</p><p>枚举右端点，然后可能的左端点用$Trie$树维护，从左到右找，每次找到一个可能的编号就覆盖一下，这样能保证最后找到的是最右边的。不过也可以直接保存最右边的节点。</p><p><del>以后千万不要看着std调试代码，调着调着就调得跟std一模一样了</del></p><p>不过说白了也是之前从来没用过trie吧orz，根本不熟</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @file    :vsDebug.cpp</span></span><br><span class="line"><span class="comment">  * @brief   :</span></span><br><span class="line"><span class="comment">  * @date    :2021-07-21</span></span><br><span class="line"><span class="comment">  * @Motto   :Love Sakurai Yamauchi Forever</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mnx = (<span class="number">1LL</span> &lt;&lt; <span class="number">24</span>) + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> p[mnx][<span class="number">2</span>], res[mnx], a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">fors(i, <span class="number">1</span>, n)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">a[i] ^= a[i - <span class="number">1</span>]; <span class="comment">// 只存前缀和</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">-1</span>, r = n, ans = <span class="number">1</span>;</span><br><span class="line">res[<span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line">p[<span class="number">1</span>][<span class="number">0</span>] = p[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">0</span>; <span class="comment">// init</span></span><br><span class="line">fors(i, <span class="number">0</span>, n)&#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> tmp = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">29</span>; j &gt;= <span class="number">0</span>; --j)&#123;</span><br><span class="line"><span class="keyword">if</span>(!x) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">int</span> u = (a[i] &gt;&gt; j) &amp; <span class="number">1</span>; <span class="comment">// 从上往下第j位</span></span><br><span class="line"><span class="keyword">if</span>(!((k &gt;&gt; j) &amp; <span class="number">1</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(p[x][u ^ <span class="number">1</span>])&#123;</span><br><span class="line">tmp = <span class="built_in">max</span>(tmp, res[p[x][u ^ <span class="number">1</span>]]);</span><br><span class="line">&#125;</span><br><span class="line">x = p[x][u];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> x = p[x][u ^ <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x) tmp = <span class="built_in">max</span>(tmp, res[x]);</span><br><span class="line"><span class="keyword">if</span>(tmp &gt;= <span class="number">0</span> &amp;&amp; i - tmp &lt; r - l) l = tmp, r = i;</span><br><span class="line">x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">29</span>; j &gt;= <span class="number">0</span>; --j)&#123;</span><br><span class="line"><span class="keyword">int</span> u = (a[i] &gt;&gt; j) &amp; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(!p[x][u])&#123;</span><br><span class="line">ans++;</span><br><span class="line">p[x][u] = ans, res[ans] = <span class="number">-1</span>;</span><br><span class="line">p[ans][<span class="number">0</span>] = p[ans][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">x = p[x][u];</span><br><span class="line">res[x] = <span class="built_in">max</span>(res[x], i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(l &gt;= <span class="number">0</span>) cout &lt;&lt; l + <span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; r &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">If I don&#39;t know how to love you</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="线性筛" scheme="https://eykenis.github.io/tags/%E7%BA%BF%E6%80%A7%E7%AD%9B/"/>
    
    <category term="位运算" scheme="https://eykenis.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
    <category term="最小生成树" scheme="https://eykenis.github.io/tags/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 111 (Rated for Div. 2)</title>
    <link href="https://eykenis.github.io/2021/07/15/Educational-Codeforces-Round-111-Rated-for-Div-2/"/>
    <id>https://eykenis.github.io/2021/07/15/Educational-Codeforces-Round-111-Rated-for-Div-2/</id>
    <published>2021-07-15T00:57:56.000Z</published>
    <updated>2021-07-15T01:01:42.506Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Find-The-Array"><a href="#A-Find-The-Array" class="headerlink" title="A. Find The Array"></a>A. Find The Array</h1><p><strong>题意</strong></p><p>要你构造一个长度为$n$的数组，每个元素$a_i$满足：</p><ol><li>$a_i=1$</li><li>$a_i-1$或者$a_i-2$存在于数组中</li></ol><p>现在要你构造一个元素和为$s$的数组，问最短长度为多少</p><p><strong>分析</strong></p><p>贪心，让数组元素尽量大，但是因为$a_i-2$必须在数组中，所以构造的是$1,3,5,7,…$. 最后一个数如果溢出可以将其减小至和恰好为$s$，不影响性质。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; ; i += <span class="number">2</span>)&#123;</span><br><span class="line">sum += i;</span><br><span class="line"><span class="keyword">if</span>(sum &gt;= n)&#123;</span><br><span class="line">cout &lt;&lt; (i + <span class="number">1</span>) / <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B-Maximum-Cost-Deletion"><a href="#B-Maximum-Cost-Deletion" class="headerlink" title="B. Maximum Cost Deletion"></a>B. Maximum Cost Deletion</h1><p><strong>题意</strong></p><p>给一个01串。每次操作可以选其中连续一段由相同字符构成的子串并将其删除。删除后剩下的部分保留顺序，拼接起来。每次删可以得到$a·l+b$分（$l$为删的长度）。问删完后最大得分是多少</p><p><strong>分析</strong></p><p>考虑串中每个元素的平均贡献，即$\frac{a·l+b}{l}=a+\frac{b}{l}$. 由此可知不管怎么删，每个元素都一定会贡献$a$分。有变数的只有$b$. 当$b\geq 0$，应让$l$尽量小来最大化分数，所以$l=1$，答案是$总长度·(a+b)$；而若$b&lt;0$，尽量让$l$变大。所以尽可能地扩展长度，每次都把整个连续的串删掉。</p><p>这个时候，把字符串分成$x$块，每块都是最长的连续的0或者1，这些块的邻居肯定是不同字符。每次删除之后，相邻字符会拼接起来。每次一个块一个块地删，最后总共删$x/2+1$次. 则答案为$a·l+(x/2+1)·b$</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n, a, b;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; a &gt;&gt; b &gt;&gt; s;</span><br><span class="line"><span class="keyword">if</span>(b &gt; <span class="number">0</span>)&#123;</span><br><span class="line">cout &lt;&lt; (<span class="keyword">int</span>)s.<span class="built_in">size</span>() * (a + b) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">char</span> now = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] != now)&#123;</span><br><span class="line">now = s[i];</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; (cnt / <span class="number">2LL</span> + <span class="number">1LL</span>) * b + a * (<span class="keyword">int</span>)s.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-Manhattan-Subarrays"><a href="#C-Manhattan-Subarrays" class="headerlink" title="C. Manhattan Subarrays"></a>C. Manhattan Subarrays</h1><p><strong>题意</strong></p><p>给数组$a$，则规定其对应了平面上$n$个点$(a_1,1),(a2,2),…(a_i,i)…$ 现在要求选出一个连续子数组，保证其长度小于3，或者从其中任选3个点$x,y,z$，不可能有$d(x,y)+d(y,z)=d(x,z)$。其中$d(x,y)$为$(a_x,x)$和$(a_y,y)$的<a href="[曼哈顿距离_百度百科 (baidu.com">曼哈顿距离</a>](<a href="https://baike.baidu.com/item/曼哈顿距离/743092))，问可选出多少这样的子数组。">https://baike.baidu.com/item/曼哈顿距离/743092))，问可选出多少这样的子数组。</a></p><p><strong>分析</strong></p><p>由于各个点的$y$坐标都不一样，可以画图。随意在坐标图上画3个$y$坐标两两不同的点，改变它们$x$坐标之间的关系。可以发现，当按$y$坐标顺序看这三个点时，当且仅当它们的$x$坐标单调不下降或者单调不上升时，有$d(x,y)+d(y,z)=d(x,z)$。</p><p>那么对于长度为4的子数组，我们需要判断4次，每次从其中任选3个判断一下。</p><p>但对于长度5的数组，我们发现，不管怎么画，都必定会出现$d(x,y)+d(y,z)=d(x,z)$。</p><p>因此，满足条件的数组最长长度为4。而长度为2,1的必定符合条件，故我们只需判断长度为3,4的即可。</p><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fors(i, a, b) for(int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson k&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a) memset(a, 0, sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DDLC_ESCAPE_PLAN_FAILED ios::sync_with_stdio(false), cin.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> dinf = <span class="number">1e100</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="comment">//const ll linf = 9223372036854775807LL;</span></span><br><span class="line"><span class="comment">// const ll linf = 1e18;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a[x] &lt;= a[y] &amp;&amp; a[y] &lt;= a[z]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(a[x] &gt;= a[y] &amp;&amp; a[y] &gt;= a[z]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DDLC_ESCAPE_PLAN_FAILED;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">fors(i, <span class="number">1</span>, n) cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">2</span> * n - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> len = <span class="number">3</span>; len &lt;= <span class="number">4</span>; ++len)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l = <span class="number">1</span>; l + len - <span class="number">1</span> &lt;= n; ++l)&#123;</span><br><span class="line"><span class="keyword">if</span>(len == <span class="number">3</span> &amp;&amp; <span class="built_in">check</span>(l, l + <span class="number">1</span>, l + <span class="number">2</span>)) ans++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(len == <span class="number">4</span> &amp;&amp; (<span class="built_in">check</span>(l, l + <span class="number">1</span>, l + <span class="number">2</span>) &amp;&amp; <span class="built_in">check</span>(l, l + <span class="number">2</span>, l + <span class="number">3</span>) &amp;&amp; <span class="built_in">check</span>(l + <span class="number">1</span>, l + <span class="number">2</span>, l + <span class="number">3</span>) &amp;&amp; <span class="built_in">check</span>(l, l + <span class="number">1</span>, l + <span class="number">3</span>))) ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">I&#39;ll leave you be</summary>
    
    
    
    <category term="解题报告" scheme="https://eykenis.github.io/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="Codeforces" scheme="https://eykenis.github.io/tags/Codeforces/"/>
    
  </entry>
  
</feed>
